<?php

/**
 * This action is responsible for enqueuing any resources such as JavaScript and CSS that are
 * needed for any code generated by the plugin in public ares of the site.
 *
 * @package			com.mlsfinder.wordpress.action
 * @title			enqueueResources.php
 * @extends			com_ajmichels_wppf_action_action
 * @contributors	AJ Michels (aj.michels@wolfnet.com)
 * @version			1.0
 * @copyright		Copyright (c) 2012, WolfNet Technologies, LLC
 * 
 */

class com_mlsfinder_wordpress_action_enqueueResources
extends com_ajmichels_wppf_action_action
{
	
	
	/**
	 * This property holds the URL string to the plugin directory. This URL is needed to accurately 
	 * define the path to the resource files.
	 *
	 * @type string
	 * 
	 */
	private $pluginUrl = '';
	
	
	/**
	 * This method is executed by the ActionManager when any hooks that this action is registered to
	 * are encountered.  It is currently handling the following resources: MLSFinder.min.js,
	 * jquery.filmStrip.min.js, and MLSFinder.min.css.
	 *
	 * @return void
	 * 
	 */
	public function execute ()
	{
		$this->log( 'Action EnqueueResources' );
		wp_enqueue_script( 'mlsfinderjs', 			$this->getPluginUrl() . 'js/MLSFinder.min.js', array('jquery') );
		wp_enqueue_script( 'mlsfinderfilmsriptjs',	$this->getPluginUrl() . 'js/jQuery/jquery.filmStrip.min.js', array('jquery') );
		wp_enqueue_style(  'mlsfindercss',			$this->getPluginUrl() . 'css/MLSFinder.min.css', array(), false, 'screen' );
	}
	
	
	/**
	 * SETTER: This method is a setter for the pluginUrl property.
	 *
	 * @param	string	$url	The absolute URL to this plugin's directory.
	 * @return	void
	 * 
	 */
	public function setPluginUrl ( $url )
	{
		$this->pluginUrl = $url;
	}
	
	
	/**
	 * GETTER: This method is a getter for the pluginUrl property.
	 *
	 * @return	string	The absolute URL to this plugin's directory.
	 * 
	 */
	public function getPluginUrl ()
	{
		return $this->pluginUrl;
	}
	
	
}