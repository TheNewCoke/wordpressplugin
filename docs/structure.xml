<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="WolfNet IDX for WordPress Plugin">
  <file path="com/greentiedev/phpCommon/abstractClass.php" hash="f7ba6f64eb6f74b9c526004775393f22" package="Default">
    <class final="false" abstract="true" namespace="global" line="27" package="com\greentiedev\phpCommon">
      <extends/>
      <name>com_greentiedev_phpCommon_abstractClass</name>
      <full_name>\com_greentiedev_phpCommon_abstractClass</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.phpCommon"/>
        <tag line="5" name="title" description="abstractClass.php"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                   http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="31" namespace="global" package="Default">
        <name>$logger</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="34" package="com\greentiedev\phpCommon">
        <name>initLogger</name>
        <full_name>initLogger</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="42" package="com\greentiedev\phpCommon">
        <name>dump</name>
        <full_name>dump</full_name>
        <argument line="42">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="50" package="com\greentiedev\phpCommon">
        <name>log</name>
        <full_name>log</full_name>
        <argument line="50">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="58" package="com\greentiedev\phpCommon">
        <name>logAdd</name>
        <full_name>logAdd</full_name>
        <argument line="58">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="58">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="66" package="com\greentiedev\phpCommon">
        <name>trace</name>
        <full_name>trace</full_name>
        <argument line="66">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="74" package="com\greentiedev\phpCommon">
        <name>dumpLog</name>
        <full_name>dumpLog</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="81" package="com\greentiedev\phpCommon">
        <name>loggerSetting</name>
        <full_name>loggerSetting</full_name>
        <argument line="81">
          <name>$setting</name>
          <default></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="88" package="com\greentiedev\phpCommon">
        <name>formatPath</name>
        <full_name>formatPath</full_name>
        <argument line="88">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="com\greentiedev\phpCommon">
        <name>_formatURL</name>
        <full_name>_formatURL</full_name>
        <argument line="97">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$length</name>
          <default>'full'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="121" package="com\greentiedev\phpCommon">
        <name>is_assoc</name>
        <full_name>is_assoc</full_name>
        <argument line="121">
          <name>$arr</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="127" package="com\greentiedev\phpCommon">
        <name>isSimpleValue</name>
        <full_name>isSimpleValue</full_name>
        <argument line="127">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="138" package="com\greentiedev\phpCommon">
        <name>getMetaData</name>
        <full_name>getMetaData</full_name>
        <argument line="138">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="152" package="com\greentiedev\phpCommon">
        <name>isClass</name>
        <full_name>isClass</full_name>
        <argument line="152">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="157" package="com\greentiedev\phpCommon">
        <name>deleteDir</name>
        <full_name>deleteDir</full_name>
        <argument line="157">
          <name>$dirPath</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpCommon/abstractClass.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_phpCommon_abstractClass</critical>
      <error line="31" code="50018">No DocBlock was found for property $logger</error>
      <error line="34" code="50010">No DocBlock was found for method initLogger()</error>
      <error line="42" code="50010">No DocBlock was found for method dump()</error>
      <error line="50" code="50010">No DocBlock was found for method log()</error>
      <error line="58" code="50010">No DocBlock was found for method logAdd()</error>
      <error line="66" code="50010">No DocBlock was found for method trace()</error>
      <error line="74" code="50010">No DocBlock was found for method dumpLog()</error>
      <error line="81" code="50010">No DocBlock was found for method loggerSetting()</error>
      <error line="88" code="50010">No DocBlock was found for method formatPath()</error>
      <error line="97" code="50010">No DocBlock was found for method _formatURL()</error>
      <error line="121" code="50010">No DocBlock was found for method is_assoc()</error>
      <error line="127" code="50010">No DocBlock was found for method isSimpleValue()</error>
      <error line="138" code="50010">No DocBlock was found for method getMetaData()</error>
      <error line="152" code="50010">No DocBlock was found for method isClass()</error>
      <error line="157" code="50010">No DocBlock was found for method deleteDir()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/phpCommon/autoLoader.php" hash="3ed3f926bb3b86f12449be5788b5a2c5" package="Default">
    <include line="59" type="Include Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="26" package="com\greentiedev\phpCommon">
      <extends/>
      <name>com_greentiedev_phpCommon_autoLoader</name>
      <full_name>\com_greentiedev_phpCommon_autoLoader</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.phpCommon"/>
        <tag line="5" name="title" description="autoLoader.php"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                   http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="30" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="global" package="Default">
        <name>$extension</name>
        <default>'.php'</default>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$paths</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="35" package="com\greentiedev\phpCommon">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="35">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="42" package="com\greentiedev\phpCommon">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <argument line="42">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="com\greentiedev\phpCommon">
        <name>load</name>
        <full_name>load</full_name>
        <argument line="51">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="66" package="com\greentiedev\phpCommon">
        <name>formatPath</name>
        <full_name>formatPath</full_name>
        <argument line="66">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="76" package="com\greentiedev\phpCommon">
        <name>addPath</name>
        <full_name>addPath</full_name>
        <argument line="76">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="92" package="com\greentiedev\phpCommon">
        <name>getPaths</name>
        <full_name>getPaths</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="com\greentiedev\phpCommon">
        <name>__clone</name>
        <full_name>__clone</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="com\greentiedev\phpCommon">
        <name>__wakeup</name>
        <full_name>__wakeup</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpCommon/autoLoader.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_phpCommon_autoLoader</critical>
      <error line="30" code="50018">No DocBlock was found for property $instance</error>
      <error line="31" code="50018">No DocBlock was found for property $extension</error>
      <error line="32" code="50018">No DocBlock was found for property $paths</error>
      <error line="35" code="50010">No DocBlock was found for method __construct()</error>
      <error line="42" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="51" code="50010">No DocBlock was found for method load()</error>
      <error line="66" code="50010">No DocBlock was found for method formatPath()</error>
      <error line="76" code="50010">No DocBlock was found for method addPath()</error>
      <error line="92" code="50010">No DocBlock was found for method getPaths()</error>
      <error line="98" code="50010">No DocBlock was found for method __clone()</error>
      <error line="104" code="50010">No DocBlock was found for method __wakeup()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/phpCommon/iSingleton.php" hash="10b04e56f12e27cc9369269824a95e90" package="Default">
    <interface namespace="global" line="27" package="com\greentiedev\phpCommon">
      <name>com_greentiedev_phpCommon_iSingleton</name>
      <full_name>\com_greentiedev_phpCommon_iSingleton</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.phpCommon"/>
        <tag line="5" name="title" description="iSingleton.php"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                   http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="29" package="com\greentiedev\phpCommon">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpCommon/iSingleton.php</error>
      <error line="29" code="50010">No DocBlock was found for method getInstance()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/phpCommon/logger.php" hash="ac5dce24a258245d5a1c5700bdeb2215" package="Default">
    <class final="false" abstract="false" namespace="global" line="26" package="com\greentiedev\phpCommon">
      <extends/>
      <name>com_greentiedev_phpCommon_logger</name>
      <full_name>\com_greentiedev_phpCommon_logger</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.phpCommon"/>
        <tag line="5" name="title" description="logger.php"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                   http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="30" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="global" package="Default">
        <name>$logData</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$levels</name>
        <default>array('error' =&gt; 0, 'warning' =&gt; 1, 'info' =&gt; 2, 'entry' =&gt; 3, 'param' =&gt; 4, 'debug' =&gt; 5)</default>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$settings</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="43" package="com\greentiedev\phpCommon">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="51" package="com\greentiedev\phpCommon">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="com\greentiedev\phpCommon">
        <name>__clone</name>
        <full_name>__clone</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="com\greentiedev\phpCommon">
        <name>__wakeup</name>
        <full_name>__wakeup</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="com\greentiedev\phpCommon">
        <name>dump</name>
        <full_name>dump</full_name>
        <argument line="72">
          <name>$var</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="com\greentiedev\phpCommon">
        <name>log</name>
        <full_name>log</full_name>
        <argument line="83">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="com\greentiedev\phpCommon">
        <name>logAdd</name>
        <full_name>logAdd</full_name>
        <argument line="92">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="92">
          <name>$label</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="com\greentiedev\phpCommon">
        <name>trace</name>
        <full_name>trace</full_name>
        <argument line="98">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="107" package="com\greentiedev\phpCommon">
        <name>_log</name>
        <full_name>_log</full_name>
        <argument line="107">
          <name>$level</name>
          <default>'debug'</default>
          <type/>
        </argument>
        <argument line="107">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="107">
          <name>$includeTrace</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="107">
          <name>$label</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="com\greentiedev\phpCommon">
        <name>dumpLog</name>
        <full_name>dumpLog</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="212" package="com\greentiedev\phpCommon">
        <name>dataDumpRecursion</name>
        <full_name>dataDumpRecursion</full_name>
        <argument line="212">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="212">
          <name>$depth</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="250" package="com\greentiedev\phpCommon">
        <name>dumpObjectMethods</name>
        <full_name>dumpObjectMethods</full_name>
        <argument line="250">
          <name>$reflectionClass</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="284" package="com\greentiedev\phpCommon">
        <name>outputWrapper</name>
        <full_name>outputWrapper</full_name>
        <argument line="284">
          <name>$output</name>
          <default></default>
          <type/>
        </argument>
        <argument line="284">
          <name>$pre</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="308" package="com\greentiedev\phpCommon">
        <name>calcTime</name>
        <full_name>calcTime</full_name>
        <argument line="308">
          <name>$time</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="320" package="com\greentiedev\phpCommon">
        <name>getTimestamp</name>
        <full_name>getTimestamp</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="335" package="Default">
      <extends/>
      <name>com_greentiedev_phpCommon_loggerSettings</name>
      <full_name>\com_greentiedev_phpCommon_loggerSettings</full_name>
      <property final="false" static="false" visibility="public" line="339" namespace="global" package="Default">
        <name>$enabled</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="public" line="340" namespace="global" package="Default">
        <name>$fontSize</name>
        <default>'13px'</default>
      </property>
      <property final="false" static="false" visibility="public" line="341" namespace="global" package="Default">
        <name>$fontFace</name>
        <default>'Arial, sans-serif'</default>
      </property>
      <property final="false" static="false" visibility="public" line="342" namespace="global" package="Default">
        <name>$recursionLimit</name>
        <default>10</default>
      </property>
      <property final="false" static="false" visibility="public" line="343" namespace="global" package="Default">
        <name>$level</name>
        <default>'error'</default>
      </property>
      <property final="false" static="false" visibility="public" line="344" namespace="global" package="Default">
        <name>$minTime</name>
        <default>2</default>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpCommon/logger.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_phpCommon_logger</critical>
      <error line="30" code="50018">No DocBlock was found for property $instance</error>
      <error line="31" code="50018">No DocBlock was found for property $logData</error>
      <error line="32" code="50018">No DocBlock was found for property $levels</error>
      <error line="40" code="50018">No DocBlock was found for property $settings</error>
      <error line="43" code="50010">No DocBlock was found for method __construct()</error>
      <error line="51" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="60" code="50010">No DocBlock was found for method __clone()</error>
      <error line="66" code="50010">No DocBlock was found for method __wakeup()</error>
      <error line="72" code="50010">No DocBlock was found for method dump()</error>
      <error line="83" code="50010">No DocBlock was found for method log()</error>
      <error line="92" code="50010">No DocBlock was found for method logAdd()</error>
      <error line="98" code="50010">No DocBlock was found for method trace()</error>
      <error line="107" code="50010">No DocBlock was found for method _log()</error>
      <error line="127" code="50010">No DocBlock was found for method dumpLog()</error>
      <error line="212" code="50010">No DocBlock was found for method dataDumpRecursion()</error>
      <error line="250" code="50010">No DocBlock was found for method dumpObjectMethods()</error>
      <error line="284" code="50010">No DocBlock was found for method outputWrapper()</error>
      <error line="308" code="50010">No DocBlock was found for method calcTime()</error>
      <error line="320" code="50010">No DocBlock was found for method getTimestamp()</error>
      <error line="335" code="50000">No DocBlock was found for \com_greentiedev_phpCommon_loggerSettings</error>
      <error line="339" code="50018">No DocBlock was found for property $enabled</error>
      <error line="340" code="50018">No DocBlock was found for property $fontSize</error>
      <error line="341" code="50018">No DocBlock was found for property $fontFace</error>
      <error line="342" code="50018">No DocBlock was found for property $recursionLimit</error>
      <error line="343" code="50018">No DocBlock was found for property $level</error>
      <error line="344" code="50018">No DocBlock was found for property $minTime</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/phpSpring/bean/definition.php" hash="0bea691ab905f817653ca3b48f4164d7" package="Default">
    <class final="false" abstract="false" namespace="global" line="26" package="com\greentiedev\phpSpring\bean">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_phpSpring_bean_definition</name>
      <full_name>\com_greentiedev_phpSpring_bean_definition</full_name>
      <docblock line="3">
        <description></description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.greentiedev.phpSpring.bean"/>
        <tag line="3" name="title" description="definition.php"/>
        <tag line="3" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               ColdSpring, Copyright (c) 2005, David Ross, Chris Scott, Kurt Wiersma, Sean Corfield&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
        <tag line="3" name="todo" description="Add support for parent/child beans."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="35" namespace="global" package="Default">
        <name>$beanFactory</name>
        <default></default>
        <docblock line="31">
          <description>This property is a reference to the bean factory to which this bean definition belongs.</description>
          <long-description></long-description>
          <tag line="31" name="type" description="com_greentiedev_phpSpring_bean_factory_iFactory"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Default">
        <name>$id</name>
        <default></default>
        <docblock line="37">
          <description>This property is the unique id string for this bean definition.</description>
          <long-description>&lt;p&gt;This value is use to reference
and retrieve a bean from a bean factory.&lt;/p&gt;</long-description>
          <tag line="37" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="global" package="Default">
        <name>$beanClass</name>
        <default></default>
        <docblock line="44">
          <description>This property contains the PHP class which is used to create the bean.</description>
          <long-description></long-description>
          <tag line="44" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="55" namespace="global" package="Default">
        <name>$beanInstance</name>
        <default>null</default>
        <docblock line="50">
          <description>This property contains a reference to the bean created using the definition.</description>
          <long-description>&lt;p&gt;(Note: this value
will always be null if the bean is not a singleton.&lt;/p&gt;</long-description>
          <tag line="50" name="type" description="object"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="global" package="Default">
        <name>$properties</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="58" namespace="global" package="Default">
        <name>$singleton</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="private" line="59" namespace="global" package="Default">
        <name>$innerBean</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="60" namespace="global" package="Default">
        <name>$initMethod</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$initMethodWasCalled</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="62" namespace="global" package="Default">
        <name>$lazyInit</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="private" line="63" namespace="global" package="Default">
        <name>$dependencies</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="64" namespace="global" package="Default">
        <name>$constructed</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="67" namespace="global" package="Default">
        <name>$dependenciesChecked</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="68" namespace="global" package="Default">
        <name>$dependentBeans</name>
        <default>0</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="com\greentiedev\phpSpring\bean">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="71">
          <name>$beanFactory</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_factory_iFactory</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="com\greentiedev\phpSpring\bean">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="com\greentiedev\phpSpring\bean">
        <name>getBeanInstance</name>
        <full_name>getBeanInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="com\greentiedev\phpSpring\bean">
        <name>getBeanFactory</name>
        <full_name>getBeanFactory</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="com\greentiedev\phpSpring\bean">
        <name>setBeanFactory</name>
        <full_name>setBeanFactory</full_name>
        <argument line="145">
          <name>$beanFactory</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_factory_iFactory</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="152" package="com\greentiedev\phpSpring\bean">
        <name>getID</name>
        <full_name>getID</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="com\greentiedev\phpSpring\bean">
        <name>setID</name>
        <full_name>setID</full_name>
        <argument line="159">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="166" package="com\greentiedev\phpSpring\bean">
        <name>getClass</name>
        <full_name>getClass</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="com\greentiedev\phpSpring\bean">
        <name>setClass</name>
        <full_name>setClass</full_name>
        <argument line="173">
          <name>$beanClass</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="com\greentiedev\phpSpring\bean">
        <name>getProperties</name>
        <full_name>getProperties</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="191" package="com\greentiedev\phpSpring\bean">
        <name>setProperties</name>
        <full_name>setProperties</full_name>
        <argument line="191">
          <name>$properties</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="com\greentiedev\phpSpring\bean">
        <name>addProperty</name>
        <full_name>addProperty</full_name>
        <argument line="198">
          <name>$property</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_property</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="com\greentiedev\phpSpring\bean">
        <name>getProperty</name>
        <full_name>getProperty</full_name>
        <argument line="205">
          <name>$propertyName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="com\greentiedev\phpSpring\bean">
        <name>addDependency</name>
        <full_name>addDependency</full_name>
        <argument line="217">
          <name>$refName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="226" package="com\greentiedev\phpSpring\bean">
        <name>setDependenciesForCopy</name>
        <full_name>setDependenciesForCopy</full_name>
        <argument line="226">
          <name>$dependencies</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="233" package="com\greentiedev\phpSpring\bean">
        <name>getDependenciesForCopy</name>
        <full_name>getDependenciesForCopy</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="240" package="com\greentiedev\phpSpring\bean">
        <name>getDependencies</name>
        <full_name>getDependencies</full_name>
        <argument line="240">
          <name>$grouping</name>
          <default>'local'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="com\greentiedev\phpSpring\bean">
        <name>dependenciesChecked</name>
        <full_name>dependenciesChecked</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="264" package="com\greentiedev\phpSpring\bean">
        <name>getDependentBeans</name>
        <full_name>getDependentBeans</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="271" package="com\greentiedev\phpSpring\bean">
        <name>isSingleton</name>
        <full_name>isSingleton</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="278" package="com\greentiedev\phpSpring\bean">
        <name>setSingleton</name>
        <full_name>setSingleton</full_name>
        <argument line="278">
          <name>$singleton</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="291" package="com\greentiedev\phpSpring\bean">
        <name>isLazyInit</name>
        <full_name>isLazyInit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="298" package="com\greentiedev\phpSpring\bean">
        <name>setLazyInit</name>
        <full_name>setLazyInit</full_name>
        <argument line="298">
          <name>$lazyInit</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="305" package="com\greentiedev\phpSpring\bean">
        <name>isInnerBean</name>
        <full_name>isInnerBean</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="312" package="com\greentiedev\phpSpring\bean">
        <name>setInnerBean</name>
        <full_name>setInnerBean</full_name>
        <argument line="312">
          <name>$innerBean</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="319" package="com\greentiedev\phpSpring\bean">
        <name>isConstructed</name>
        <full_name>isConstructed</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="326" package="com\greentiedev\phpSpring\bean">
        <name>setIsConstructed</name>
        <full_name>setIsConstructed</full_name>
        <argument line="326">
          <name>$constructed</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="333" package="com\greentiedev\phpSpring\bean">
        <name>setInitMethod</name>
        <full_name>setInitMethod</full_name>
        <argument line="333">
          <name>$initMethod</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="340" package="com\greentiedev\phpSpring\bean">
        <name>getInitMethod</name>
        <full_name>getInitMethod</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="347" package="com\greentiedev\phpSpring\bean">
        <name>hasInitMethod</name>
        <full_name>hasInitMethod</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="359" package="com\greentiedev\phpSpring\bean">
        <name>setInitMethodWasCalled</name>
        <full_name>setInitMethodWasCalled</full_name>
        <argument line="359">
          <name>$initMethodWasCalled</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="366" package="com\greentiedev\phpSpring\bean">
        <name>getInitMethodWasCalled</name>
        <full_name>getInitMethodWasCalled</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpSpring/bean/definition.php</error>
      <critical line="3" code="50005">No short description for class \com_greentiedev_phpSpring_bean_definition</critical>
      <error line="57" code="50018">No DocBlock was found for property $properties</error>
      <error line="58" code="50018">No DocBlock was found for property $singleton</error>
      <error line="59" code="50018">No DocBlock was found for property $innerBean</error>
      <error line="60" code="50018">No DocBlock was found for property $initMethod</error>
      <error line="61" code="50018">No DocBlock was found for property $initMethodWasCalled</error>
      <error line="62" code="50018">No DocBlock was found for property $lazyInit</error>
      <error line="63" code="50018">No DocBlock was found for property $dependencies</error>
      <error line="64" code="50018">No DocBlock was found for property $constructed</error>
      <error line="67" code="50018">No DocBlock was found for property $dependenciesChecked</error>
      <error line="68" code="50018">No DocBlock was found for property $dependentBeans</error>
      <error line="71" code="50010">No DocBlock was found for method __construct()</error>
      <error line="78" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="85" code="50010">No DocBlock was found for method getBeanInstance()</error>
      <error line="138" code="50010">No DocBlock was found for method getBeanFactory()</error>
      <error line="145" code="50010">No DocBlock was found for method setBeanFactory()</error>
      <error line="152" code="50010">No DocBlock was found for method getID()</error>
      <error line="159" code="50010">No DocBlock was found for method setID()</error>
      <error line="166" code="50010">No DocBlock was found for method getClass()</error>
      <error line="173" code="50010">No DocBlock was found for method setClass()</error>
      <error line="184" code="50010">No DocBlock was found for method getProperties()</error>
      <error line="191" code="50010">No DocBlock was found for method setProperties()</error>
      <error line="198" code="50010">No DocBlock was found for method addProperty()</error>
      <error line="205" code="50010">No DocBlock was found for method getProperty()</error>
      <error line="217" code="50010">No DocBlock was found for method addDependency()</error>
      <error line="226" code="50010">No DocBlock was found for method setDependenciesForCopy()</error>
      <error line="233" code="50010">No DocBlock was found for method getDependenciesForCopy()</error>
      <error line="240" code="50010">No DocBlock was found for method getDependencies()</error>
      <error line="257" code="50010">No DocBlock was found for method dependenciesChecked()</error>
      <error line="264" code="50010">No DocBlock was found for method getDependentBeans()</error>
      <error line="271" code="50010">No DocBlock was found for method isSingleton()</error>
      <error line="278" code="50010">No DocBlock was found for method setSingleton()</error>
      <error line="291" code="50010">No DocBlock was found for method isLazyInit()</error>
      <error line="298" code="50010">No DocBlock was found for method setLazyInit()</error>
      <error line="305" code="50010">No DocBlock was found for method isInnerBean()</error>
      <error line="312" code="50010">No DocBlock was found for method setInnerBean()</error>
      <error line="319" code="50010">No DocBlock was found for method isConstructed()</error>
      <error line="326" code="50010">No DocBlock was found for method setIsConstructed()</error>
      <error line="333" code="50010">No DocBlock was found for method setInitMethod()</error>
      <error line="340" code="50010">No DocBlock was found for method getInitMethod()</error>
      <error line="347" code="50010">No DocBlock was found for method hasInitMethod()</error>
      <error line="359" code="50010">No DocBlock was found for method setInitMethodWasCalled()</error>
      <error line="366" code="50010">No DocBlock was found for method getInitMethodWasCalled()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/phpSpring/bean/factory/aFactory.php" hash="34676100f5580fd681fd93d4009f02d6" package="Default">
    <class final="false" abstract="true" namespace="global" line="25" package="com\greentiedev\phpSpring\bean\factory">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_phpSpring_bean_factory_aFactory</name>
      <full_name>\com_greentiedev_phpSpring_bean_factory_aFactory</full_name>
      <docblock line="3">
        <description></description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.greentiedev.phpSpring.bean.factory"/>
        <tag line="3" name="title" description="aFactory.php"/>
        <tag line="3" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               ColdSpring, Copyright (c) 2005, David Ross, Chris Scott, Kurt Wiersma, Sean Corfield&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$id</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$beanDefinitions</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$parentFactory</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$singletonCache</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$aliasMap</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$knownBeanFactoryPostProcessors</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$knownBeanPostProcessors</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$frameworkPropertiesFile</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$frameworkProperties</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$defaultProperties</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$defaultAttributes</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="43" package="com\greentiedev\phpSpring\bean\factory">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="43">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$defaultAttributes</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="43">
          <name>$defaultProperties</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="com\greentiedev\phpSpring\bean\factory">
        <name>getParent</name>
        <full_name>getParent</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="com\greentiedev\phpSpring\bean\factory">
        <name>setParent</name>
        <full_name>setParent</full_name>
        <argument line="59">
          <name>$parent</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_factory_iFactory</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="com\greentiedev\phpSpring\bean\factory">
        <name>singletonCacheContainsBean</name>
        <full_name>singletonCacheContainsBean</full_name>
        <argument line="66">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="com\greentiedev\phpSpring\bean\factory">
        <name>getBeanFromSingletonCache</name>
        <full_name>getBeanFromSingletonCache</full_name>
        <argument line="77">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="com\greentiedev\phpSpring\bean\factory">
        <name>addBeanToSingletonCache</name>
        <full_name>addBeanToSingletonCache</full_name>
        <argument line="106">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$beanObject</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="com\greentiedev\phpSpring\bean\factory">
        <name>getBeanDefinition</name>
        <full_name>getBeanDefinition</full_name>
        <argument line="118">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="137" package="com\greentiedev\phpSpring\bean\factory">
        <name>beanDefinitionExists</name>
        <full_name>beanDefinitionExists</full_name>
        <argument line="137">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="com\greentiedev\phpSpring\bean\factory">
        <name>getBeanDefinitionList</name>
        <full_name>getBeanDefinitionList</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="com\greentiedev\phpSpring\bean\factory">
        <name>registerAlias</name>
        <full_name>registerAlias</full_name>
        <argument line="163">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="163">
          <name>$alias</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="com\greentiedev\phpSpring\bean\factory">
        <name>resolveBeanName</name>
        <full_name>resolveBeanName</full_name>
        <argument line="175">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="com\greentiedev\phpSpring\bean\factory">
        <name>getVersion</name>
        <full_name>getVersion</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="com\greentiedev\phpSpring\bean\factory">
        <name>getFrameworkProperties</name>
        <full_name>getFrameworkProperties</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="202" package="com\greentiedev\phpSpring\bean\factory">
        <name>loadFrameworkProperties</name>
        <full_name>loadFrameworkProperties</full_name>
        <argument line="202">
          <name>$propertiesFile</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="229" package="com\greentiedev\phpSpring\bean\factory">
        <name>createBeanDefinition</name>
        <full_name>createBeanDefinition</full_name>
        <docblock line="209">
          <description>This method takes in several parameters and uses them to create a new BeanDefinition object.</description>
          <long-description>&lt;p&gt;It also facilitates the creation of bean properties.&lt;/p&gt;</long-description>
          <tag line="209" name="param" description="Identification key for a bean." type="string" variable="$beanID">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="param" description="PHP class name of the bean" type="string" variable="$beanClass">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="param" description="Array of child XML nodes." type="array" variable="$children">
            <type by_reference="false">array</type>
          </tag>
          <tag line="209" name="param" description="Boolean to determine if the bean is a singleton or transient." type="boolean" variable="$isSingleton">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="209" name="param" description="Boolean to determine if the bean is nested inside another bean." type="boolean" variable="$isInnerBean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="209" name="param" description="Boolean to determine if the bean should be initialized&#10;                               imediately or upon request." type="boolean" variable="$isLazyInit">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="209" name="param" description="Name of a method with the bean to call imediately after it&#10;                               is created. (Note: this is not the same as the constructor.)" type="string" variable="$initMethod">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="return" description="" type="\com_greentiedev_phpSpring_bean_definition">
            <type by_reference="false">\com_greentiedev_phpSpring_bean_definition</type>
          </tag>
          <tag line="209" name="todo" description="Add support for parent/child beans."/>
          <tag line="209" name="todo" description="Add support for constructor-arg child nodes."/>
          <tag line="209" name="todo" description="Move bean child xml parsing into this class rather than doing it inside the property&#10;        definition object."/>
        </docblock>
        <argument line="229">
          <name>$beanID</name>
          <default></default>
          <type/>
        </argument>
        <argument line="229">
          <name>$beanClass</name>
          <default></default>
          <type/>
        </argument>
        <argument line="229">
          <name>$isSingleton</name>
          <default></default>
          <type/>
        </argument>
        <argument line="229">
          <name>$isInnerBean</name>
          <default></default>
          <type/>
        </argument>
        <argument line="230">
          <name>$isLazyInit</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="230">
          <name>$initMethod</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="256" package="com\greentiedev\phpSpring\bean\factory">
        <name>createPropertyDefinition</name>
        <full_name>createPropertyDefinition</full_name>
        <argument line="256">
          <name>$beanDefinition</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_definition</type>
        </argument>
        <argument line="257">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="257">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="280" package="com\greentiedev\phpSpring\bean\factory">
        <name>localFactoryContainsBean</name>
        <full_name>localFactoryContainsBean</full_name>
        <docblock line="273">
          <description>This method takes in a beanName/ID uses it to determine if the bean has already been registered
with the local bean factory.</description>
          <long-description></long-description>
          <tag line="273" name="param" description="Identification key for a bean." type="string" variable="$beanName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="273" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="com\greentiedev\phpSpring\bean\factory">
        <name>containsBean</name>
        <full_name>containsBean</full_name>
        <docblock line="287">
          <description>This method takes in a beanName/ID uses it to determine if the bean has already been registered
with the local bean factory or any factories within the inheritance tree.</description>
          <long-description></long-description>
          <tag line="287" name="param" description="Identification key for a bean." type="string" variable="$beanName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="287" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="294">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="322" package="com\greentiedev\phpSpring\bean\factory">
        <name>getBean</name>
        <full_name>getBean</full_name>
        <docblock line="312">
          <description>This method takes in a beanName/ID and uses it to pull a bean out of the beanDefinition tree.</description>
          <long-description>&lt;p&gt;It is at this point that if the bean hasn't already been initialized or is not a singleton it
will be created.&lt;/p&gt;</long-description>
          <tag line="312" name="param" description="Identification key for a bean." type="string" variable="$beanName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="312" name="todo" description="Move this functionaility into the abstractFactory."/>
        </docblock>
        <argument line="322">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="377" package="com\greentiedev\phpSpring\bean\factory">
        <name>initNonLazyBeans</name>
        <full_name>initNonLazyBeans</full_name>
        <docblock line="371">
          <description>This method loops over all bean definitions in the local bean factory and initilizes them if
they match the criteria for a non-lazy bean.</description>
          <long-description></long-description>
          <tag line="371" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="411" package="com\greentiedev\phpSpring\bean\factory">
        <name>constructBean</name>
        <full_name>constructBean</full_name>
        <docblock line="393">
          <description>This method is probably the most complicated method in the aFactory class.</description>
          <long-description>&lt;p&gt;Taking in a bean
name/id, this function first retrieves the beanDefinition to confirm that it is a valid bean.
then it creates an array of bean definitions based on the hiararchy of dependent beans. The
list is then looped through in reverse, ensuring that the "most dependent" beans are dealt
with first. During this loop singleton beans are initialized if they not not already been
then added to the singleton cache and transient beans are instantiated and added to a local
variable for later reference. After each bean is created it's properties are fetched and
looped through to ensure any value and dependency injection that needs to occur does. Once
this loop is complete the the bean definitions are again looped over in reverse this time
executing any init methods that have been defined in the bean definitions. Finally the bean
is returned if the $returnInstance parameter is true.&lt;/p&gt;</long-description>
          <tag line="393" name="param" description="The name/id of the bean to be constructed." type="string" variable="$beanName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="393" name="param" description="Whether or not to return the bean once it has been cunstructed." type="boolean" variable="$returnInstance">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="393" name="return" description="" type="\void[object]">
            <type by_reference="false">\void[object]</type>
          </tag>
        </docblock>
        <argument line="411">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="411">
          <name>$returnInstance</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="534" package="com\greentiedev\phpSpring\bean\factory">
        <name>constructComplexProperty</name>
        <full_name>constructComplexProperty</full_name>
        <argument line="534">
          <name>$complexProperty</name>
          <default></default>
          <type/>
        </argument>
        <argument line="534">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="534">
          <name>$localBeanCache</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="549" package="com\greentiedev\phpSpring\bean\factory">
        <name>findComplexPropertyRefs</name>
        <full_name>findComplexPropertyRefs</full_name>
        <argument line="549">
          <name>$complexProperty</name>
          <default></default>
          <type/>
        </argument>
        <argument line="549">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="549">
          <name>$localBeanCache</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="588" package="com\greentiedev\phpSpring\bean\factory">
        <name>getDefaultProperties</name>
        <full_name>getDefaultProperties</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="595" package="com\greentiedev\phpSpring\bean\factory">
        <name>setDefaultProperties</name>
        <full_name>setDefaultProperties</full_name>
        <argument line="595">
          <name>$defaultProperties</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="602" package="com\greentiedev\phpSpring\bean\factory">
        <name>getDefaultAttributes</name>
        <full_name>getDefaultAttributes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="609" package="com\greentiedev\phpSpring\bean\factory">
        <name>setDefaultAttributes</name>
        <full_name>setDefaultAttributes</full_name>
        <argument line="609">
          <name>$defaultAttributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="616" package="com\greentiedev\phpSpring\bean\factory">
        <name>getDefaultValue</name>
        <full_name>getDefaultValue</full_name>
        <argument line="616">
          <name>$attributeName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="616">
          <name>$attributeValue</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="642" package="com\greentiedev\phpSpring\bean\factory">
        <name>getClass</name>
        <full_name>getClass</full_name>
        <argument line="642">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="205">Implement this method.  CF version used Java.</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpSpring/bean/factory/aFactory.php</error>
      <critical line="3" code="50005">No short description for class \com_greentiedev_phpSpring_bean_factory_aFactory</critical>
      <error line="30" code="50018">No DocBlock was found for property $id</error>
      <error line="31" code="50018">No DocBlock was found for property $beanDefinitions</error>
      <error line="32" code="50018">No DocBlock was found for property $parentFactory</error>
      <error line="33" code="50018">No DocBlock was found for property $singletonCache</error>
      <error line="34" code="50018">No DocBlock was found for property $aliasMap</error>
      <error line="35" code="50018">No DocBlock was found for property $knownBeanFactoryPostProcessors</error>
      <error line="36" code="50018">No DocBlock was found for property $knownBeanPostProcessors</error>
      <error line="37" code="50018">No DocBlock was found for property $frameworkPropertiesFile</error>
      <error line="38" code="50018">No DocBlock was found for property $frameworkProperties</error>
      <error line="39" code="50018">No DocBlock was found for property $defaultProperties</error>
      <error line="40" code="50018">No DocBlock was found for property $defaultAttributes</error>
      <error line="43" code="50010">No DocBlock was found for method __construct()</error>
      <error line="52" code="50010">No DocBlock was found for method getParent()</error>
      <error line="59" code="50010">No DocBlock was found for method setParent()</error>
      <error line="66" code="50010">No DocBlock was found for method singletonCacheContainsBean()</error>
      <error line="77" code="50010">No DocBlock was found for method getBeanFromSingletonCache()</error>
      <error line="106" code="50010">No DocBlock was found for method addBeanToSingletonCache()</error>
      <error line="118" code="50010">No DocBlock was found for method getBeanDefinition()</error>
      <error line="137" code="50010">No DocBlock was found for method beanDefinitionExists()</error>
      <error line="156" code="50010">No DocBlock was found for method getBeanDefinitionList()</error>
      <error line="163" code="50010">No DocBlock was found for method registerAlias()</error>
      <error line="175" code="50010">No DocBlock was found for method resolveBeanName()</error>
      <error line="188" code="50010">No DocBlock was found for method getVersion()</error>
      <error line="195" code="50010">No DocBlock was found for method getFrameworkProperties()</error>
      <error line="202" code="50010">No DocBlock was found for method loadFrameworkProperties()</error>
      <error line="209" code="50014">Name of argument $isSingleton does not match with the DocBlock's name $children in createBeanDefinition()</error>
      <error line="209" code="50014">Name of argument $isInnerBean does not match with the DocBlock's name $isSingleton in createBeanDefinition()</error>
      <error line="209" code="50014">Name of argument $isLazyInit does not match with the DocBlock's name $isInnerBean in createBeanDefinition()</error>
      <error line="209" code="50014">Name of argument $initMethod does not match with the DocBlock's name $isLazyInit in createBeanDefinition()</error>
      <notice line="209" code="50013">Parameter $children could not be found in createBeanDefinition()</notice>
      <error line="256" code="50010">No DocBlock was found for method createPropertyDefinition()</error>
      <error line="534" code="50010">No DocBlock was found for method constructComplexProperty()</error>
      <error line="549" code="50010">No DocBlock was found for method findComplexPropertyRefs()</error>
      <error line="588" code="50010">No DocBlock was found for method getDefaultProperties()</error>
      <error line="595" code="50010">No DocBlock was found for method setDefaultProperties()</error>
      <error line="602" code="50010">No DocBlock was found for method getDefaultAttributes()</error>
      <error line="609" code="50010">No DocBlock was found for method setDefaultAttributes()</error>
      <error line="616" code="50010">No DocBlock was found for method getDefaultValue()</error>
      <error line="642" code="50010">No DocBlock was found for method getClass()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/phpSpring/bean/factory/default.php" hash="99d73e9f72dbf6f475207dd78895a580" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\greentiedev\phpSpring\bean\factory">
      <extends>\com_greentiedev_phpSpring_bean_factory_aFactory</extends>
      <implements>\com_greentiedev_phpSpring_bean_factory_iFactory</implements>
      <name>com_greentiedev_phpSpring_bean_factory_default</name>
      <full_name>\com_greentiedev_phpSpring_bean_factory_default</full_name>
      <docblock line="3">
        <description>This class is a specific bean factory implementation ({@see com_greentiedev_phpSpring_bean_factory_aFactory}})
which takes in xml configuration files to define beans and their properties/dependencies.</description>
        <long-description>&lt;p&gt;Only
code specific to the XML implementation of this bean factory, its bean definitions and properties.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="com.greentiedev.phpSpring.bean.factory"/>
        <tag line="3" name="title" description="default.php"/>
        <tag line="3" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="extends" description="com_greentiedev_phpSpring_bean_factory_aFactory"/>
        <tag line="3" name="implements" description="com_greentiedev_phpSpring_bean_factory_iFactory"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;              ColdSpring, Copyright (c) 2005, David Ross, Chris Scott, Kurt Wiersma, Sean Corfield&#10;              Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;              you may not use this file except in compliance with the License.&#10;              You may obtain a copy of the License at&#10;                 http://www.apache.org/licenses/LICENSE-2.0&#10;              Unless required by applicable law or agreed to in writing, software&#10;              distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;              See the License for the specific language governing permissions and&#10;              limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="com\greentiedev\phpSpring\bean\factory">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>This constructor method accepts a file path to an XML configuration file.</description>
          <long-description>&lt;p&gt;It then uses this
path hashed as the id for this beanFactory. Then it sends the path on to the
loadBeansFromXmlFile method.&lt;/p&gt;</long-description>
          <tag line="37" name="param" description="A path to an xml configuration file." type="string" variable="$xmlFilePath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="" type="array" variable="$defaultAttributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="param" description="Associative array of properties which can be reference by&#10;                                     ${key} in the XML configuration." type="array" variable="$defaultProperties">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$xmlFilePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="49">
          <name>$defaultAttributes</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="49">
          <name>$defaultProperties</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="74" package="com\greentiedev\phpSpring\bean\factory">
        <name>loadBeansFromXmlFile</name>
        <full_name>loadBeansFromXmlFile</full_name>
        <docblock line="66">
          <description>This method takes in a path to an xml configuration file and passes it to an the findImports
method along with a reference to an array of XML objects.</description>
          <long-description>&lt;p&gt;Then it passes the XML objects over
to the processBeanLoad method.&lt;/p&gt;</long-description>
          <tag line="66" name="param" description="A path to an xml configuration file." type="string" variable="$xmlFilePath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$xmlFilePath</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="93" package="com\greentiedev\phpSpring\bean\factory">
        <name>findImports</name>
        <full_name>findImports</full_name>
        <docblock line="83">
          <description>This method takes in an array of xmlData from other files and a xml file path.</description>
          <long-description>&lt;p&gt;If the file
exists it is loaded in as a "simpleXml" object and added to array.&lt;/p&gt;</long-description>
          <tag line="83" name="param" description="An array of simpleXml objects" type="array" variable="$xmlObjects">
            <type by_reference="false">array</type>
          </tag>
          <tag line="83" name="param" description="A path to an xml configuration file." type="string" variable="$xmlFilePath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="83" name="todo" description="Add recurive look up of include files"/>
        </docblock>
        <argument line="93">
          <name>$xmlObjects</name>
          <default></default>
          <type/>
        </argument>
        <argument line="93">
          <name>$xmlFilePath</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="112" package="com\greentiedev\phpSpring\bean\factory">
        <name>processBeanLoad</name>
        <full_name>processBeanLoad</full_name>
        <docblock line="103">
          <description>This method takes in an array of simpleXml objects and loops over them passing each object to
the loadBeanDefinition method for conversion into a BeanDefinition object.</description>
          <long-description>&lt;p&gt;Then it call the
initNonLazyBeans method to insure that any beans marked as non-lazy (lazy-init=false) are
automatically loaded.&lt;/p&gt;</long-description>
          <tag line="103" name="param" description="An array of simpleXML objects." type="array" variable="$beanXmlObjects">
            <type by_reference="false">array</type>
          </tag>
          <tag line="103" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$beanXmlObjects</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="139" package="com\greentiedev\phpSpring\bean\factory">
        <name>loadBeanDefinitions</name>
        <full_name>loadBeanDefinitions</full_name>
        <docblock line="121">
          <description>This method takes in a simpleXml object containing bean configuration XML.</description>
          <long-description>&lt;p&gt;It loops over each
individual bean object within the XML and prepares the data to be passed to the
createBeanDefinition method.&lt;/p&gt;</long-description>
          <tag line="121" name="param" description="A simpleXml object containing configuration data for a bean." type="\SimpleXMLElement" variable="$beanXmlObject">
            <type by_reference="false">\SimpleXMLElement</type>
          </tag>
          <tag line="121" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="121" name="todo" description="Add support for custom factory beans and any other beans that do not have both an&#10;         'id' and 'class' attribute."/>
          <tag line="121" name="todo" description="Pull default lazy-init from the factory config."/>
          <tag line="121" name="todo" description="Add support for 'autowire' by type and name attribute. Also pull default from config&#10;         file."/>
          <tag line="121" name="todo" description="Add support for 'factory-post-processor' attribute."/>
          <tag line="121" name="todo" description="Add support for 'bean-post-processor' attribute."/>
          <tag line="121" name="todo" description="Add support for 'abstract' attribute."/>
          <tag line="121" name="todo" description="Add support for 'parent' attribute."/>
        </docblock>
        <argument line="139">
          <name>$beanXmlObject</name>
          <default></default>
          <type>\SimpleXMLElement</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="215" package="com\greentiedev\phpSpring\bean\factory">
        <name>parseBeanChildren</name>
        <full_name>parseBeanChildren</full_name>
        <docblock line="205">
          <description>This method takes in a reference to a newly created Bean Definition ({@see com_greentiedev_phpSpring_bean_definition}}),
an xml representation of the bean's children and then passes them to an appropriate method for
conversion into a definition object.</description>
          <long-description></long-description>
          <tag line="205" name="param" description="A simpleXml object containing configuration data for a bean." type="\com_greentiedev_phpSpring_bean_definition" variable="$beanDefinition">
            <type by_reference="false">\com_greentiedev_phpSpring_bean_definition</type>
          </tag>
          <tag line="205" name="param" description="An array of simpleXml object containing configuration data&#10;                              for a bean property." type="array" variable="$childrenXml">
            <type by_reference="false">array</type>
          </tag>
          <tag line="205" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="215">
          <name>$beanDefinition</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_definition</type>
        </argument>
        <argument line="216">
          <name>$childrenXml</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="240" package="com\greentiedev\phpSpring\bean\factory">
        <name>parsePropertyDefinition</name>
        <full_name>parsePropertyDefinition</full_name>
        <docblock line="229">
          <description>This method takes in a reference to a newly created Bean Definition ({@see com_greentiedev_phpSpring_bean_definition}}),
an xml representation of a property, and an array of properties.</description>
          <long-description>&lt;p&gt;It then parses the xml and
creates a new Property Definition object ({@see com_greentiedev_phpSpring_bean_property}})&lt;/p&gt;</long-description>
          <tag line="229" name="param" description="A simpleXml object containing configuration data for a bean." type="\com_greentiedev_phpSpring_bean_definition" variable="$beanDefinition">
            <type by_reference="false">\com_greentiedev_phpSpring_bean_definition</type>
          </tag>
          <tag line="229" name="param" description="A simpleXml object containing configuration data&#10;                                         for a bean property." type="\SimpleXMLElement" variable="$propertyXml">
            <type by_reference="false">\SimpleXMLElement</type>
          </tag>
          <tag line="229" name="param" description="" type="array" variable="$properties">
            <type by_reference="false">array</type>
          </tag>
          <tag line="229" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$beanDefinition</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_definition</type>
        </argument>
        <argument line="241">
          <name>$propertyXml</name>
          <default></default>
          <type>\SimpleXMLElement</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="291" package="com\greentiedev\phpSpring\bean\factory">
        <name>parseChildNode</name>
        <full_name>parseChildNode</full_name>
        <docblock line="280">
          <description>This method takes in a reference to a newly created Property Definition ({@see com_greentiedev_phpSpring_bean_definition}}),
an xml representation of a property child, and an array of properties.</description>
          <long-description>&lt;p&gt;It then parses the xml
and parses the child XML to determine the property value.&lt;/p&gt;</long-description>
          <tag line="280" name="param" description="A simpleXml object containing configuration data for a bean." type="\com_greentiedev_phpSpring_bean_definition" variable="$beanDefinition">
            <type by_reference="false">\com_greentiedev_phpSpring_bean_definition</type>
          </tag>
          <tag line="280" name="param" description="A simpleXml object containing configuration data&#10;                                         for a bean property." type="\SimpleXMLElement" variable="$propertyXml">
            <type by_reference="false">\SimpleXMLElement</type>
          </tag>
          <tag line="280" name="param" description="" type="array" variable="$properties">
            <type by_reference="false">array</type>
          </tag>
          <tag line="280" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="291">
          <name>$propertyDefinition</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_property</type>
        </argument>
        <argument line="292">
          <name>$propertyChild</name>
          <default></default>
          <type>\SimpleXMLElement</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="373" package="com\greentiedev\phpSpring\bean\factory">
        <name>parseEntries</name>
        <full_name>parseEntries</full_name>
        <docblock line="363">
          <description>This method is used to parse map and list property values.</description>
          <long-description>&lt;p&gt;A reference to a property definition
is passed to that the data can be inserted into it once it is parsed. The map/list xml data is
also passed in along with the type of property it is and an array of possible default properties.&lt;/p&gt;</long-description>
          <tag line="363" name="param" description="" type="\com_greentiedev_phpSpring_bean_property" variable="$propertyDefinition">
            <type by_reference="false">\com_greentiedev_phpSpring_bean_property</type>
          </tag>
          <tag line="363" name="param" description="" type="array" variable="$mapEntries">
            <type by_reference="false">array</type>
          </tag>
          <tag line="363" name="param" description="" type="string" variable="$returnType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="363" name="param" description="" type="array" variable="$properties">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="373">
          <name>$propertyDefinition</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_property</type>
        </argument>
        <argument line="374">
          <name>$mapEntries</name>
          <default></default>
          <type/>
        </argument>
        <argument line="374">
          <name>$returnType</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="476" package="com\greentiedev\phpSpring\bean\factory">
        <name>parseValue</name>
        <full_name>parseValue</full_name>
        <argument line="476">
          <name>$rawValue</name>
          <default></default>
          <type/>
        </argument>
        <argument line="476">
          <name>$returnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="495" package="com\greentiedev\phpSpring\bean\factory">
        <name>createInnerBeanDefinition</name>
        <full_name>createInnerBeanDefinition</full_name>
        <argument line="495">
          <name>$propertyDefinition</name>
          <default></default>
          <type/>
        </argument>
        <argument line="495">
          <name>$beanXml</name>
          <default></default>
          <type>\SimpleXMLElement</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="537" package="com\greentiedev\phpSpring\bean\factory">
        <name>cacheDirExists</name>
        <full_name>cacheDirExists</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="549" package="com\greentiedev\phpSpring\bean\factory">
        <name>cacheFileExists</name>
        <full_name>cacheFileExists</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="561" package="com\greentiedev\phpSpring\bean\factory">
        <name>loadBeanDefinitionsFromCache</name>
        <full_name>loadBeanDefinitionsFromCache</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="569" package="com\greentiedev\phpSpring\bean\factory">
        <name>saveBeanDefinitionsToCache</name>
        <full_name>saveBeanDefinitionsToCache</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpSpring/bean/factory/default.php</error>
      <notice line="229" code="50013">Parameter $properties could not be found in parsePropertyDefinition()</notice>
      <error line="280" code="50014">Name of argument $propertyDefinition does not match with the DocBlock's name $beanDefinition in parseChildNode()</error>
      <error line="280" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $propertyDefinition in parseChildNode()</error>
      <error line="280" code="50014">Name of argument $propertyChild does not match with the DocBlock's name $propertyXml in parseChildNode()</error>
      <notice line="280" code="50013">Parameter $beanDefinition could not be found in parseChildNode()</notice>
      <notice line="280" code="50013">Parameter $propertyXml could not be found in parseChildNode()</notice>
      <notice line="280" code="50013">Parameter $properties could not be found in parseChildNode()</notice>
      <notice line="363" code="50013">Parameter $properties could not be found in parseEntries()</notice>
      <error line="476" code="50010">No DocBlock was found for method parseValue()</error>
      <error line="495" code="50010">No DocBlock was found for method createInnerBeanDefinition()</error>
      <error line="537" code="50010">No DocBlock was found for method cacheDirExists()</error>
      <error line="549" code="50010">No DocBlock was found for method cacheFileExists()</error>
      <error line="561" code="50010">No DocBlock was found for method loadBeanDefinitionsFromCache()</error>
      <error line="569" code="50010">No DocBlock was found for method saveBeanDefinitionsToCache()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/phpSpring/bean/factory/iFactory.php" hash="1c7a027fbbbe36befc7b633e8a7ac70a" package="Default">
    <interface namespace="global" line="25" package="com\greentiedev\phpSpring\bean\factory">
      <name>com_greentiedev_phpSpring_bean_factory_iFactory</name>
      <full_name>\com_greentiedev_phpSpring_bean_factory_iFactory</full_name>
      <docblock line="3">
        <description></description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.greentiedev.phpSpring.bean.factory"/>
        <tag line="3" name="title" description="iFactory.php"/>
        <tag line="3" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               ColdSpring, Copyright (c) 2005, David Ross, Chris Scott, Kurt Wiersma, Sean Corfield&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="com\greentiedev\phpSpring\bean\factory">
        <name>getBean</name>
        <full_name>getBean</full_name>
        <argument line="28">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="com\greentiedev\phpSpring\bean\factory">
        <name>containsBean</name>
        <full_name>containsBean</full_name>
        <argument line="30">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="com\greentiedev\phpSpring\bean\factory">
        <name>getClass</name>
        <full_name>getClass</full_name>
        <argument line="32">
          <name>$beanName</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpSpring/bean/factory/iFactory.php</error>
      <error line="28" code="50010">No DocBlock was found for method getBean()</error>
      <error line="30" code="50010">No DocBlock was found for method containsBean()</error>
      <error line="32" code="50010">No DocBlock was found for method getClass()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/phpSpring/bean/property.php" hash="f7de8f9aabef411adc742b4ad9816345" package="Default">
    <class final="false" abstract="false" namespace="global" line="25" package="com\greentiedev\phpSpring\bean">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_phpSpring_bean_property</name>
      <full_name>\com_greentiedev_phpSpring_bean_property</full_name>
      <docblock line="3">
        <description></description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.greentiedev.phpSpring.bean"/>
        <tag line="3" name="title" description="property.php"/>
        <tag line="3" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               ColdSpring, Copyright (c) 2005, David Ross, Chris Scott, Kurt Wiersma, Sean Corfield&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="30" namespace="global" package="Default">
        <name>$beanDefinition</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="global" package="Default">
        <name>$name</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$type</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="global" package="Default">
        <name>$value</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="global" package="Default">
        <name>$argName</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="com\greentiedev\phpSpring\bean">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="37">
          <name>$bean</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_definition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="com\greentiedev\phpSpring\bean">
        <name>addParentDefinitionDependency</name>
        <full_name>addParentDefinitionDependency</full_name>
        <argument line="44">
          <name>$refName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="com\greentiedev\phpSpring\bean">
        <name>getParentBeanDefinition</name>
        <full_name>getParentBeanDefinition</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="com\greentiedev\phpSpring\bean">
        <name>setParentBeanDefinition</name>
        <full_name>setParentBeanDefinition</full_name>
        <argument line="61">
          <name>$bean</name>
          <default></default>
          <type>\com_greentiedev_phpSpring_bean_definition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="com\greentiedev\phpSpring\bean">
        <name>getName</name>
        <full_name>getName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="com\greentiedev\phpSpring\bean">
        <name>setName</name>
        <full_name>setName</full_name>
        <argument line="75">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="com\greentiedev\phpSpring\bean">
        <name>getType</name>
        <full_name>getType</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="com\greentiedev\phpSpring\bean">
        <name>setType</name>
        <full_name>setType</full_name>
        <argument line="89">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="com\greentiedev\phpSpring\bean">
        <name>getValue</name>
        <full_name>getValue</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="com\greentiedev\phpSpring\bean">
        <name>setValue</name>
        <full_name>setValue</full_name>
        <argument line="103">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="com\greentiedev\phpSpring\bean">
        <name>getArgumentName</name>
        <full_name>getArgumentName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="com\greentiedev\phpSpring\bean">
        <name>setArgumentName</name>
        <full_name>setArgumentName</full_name>
        <argument line="122">
          <name>$argName</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpSpring/bean/property.php</error>
      <critical line="3" code="50005">No short description for class \com_greentiedev_phpSpring_bean_property</critical>
      <error line="30" code="50018">No DocBlock was found for property $beanDefinition</error>
      <error line="31" code="50018">No DocBlock was found for property $name</error>
      <error line="32" code="50018">No DocBlock was found for property $type</error>
      <error line="33" code="50018">No DocBlock was found for property $value</error>
      <error line="34" code="50018">No DocBlock was found for property $argName</error>
      <error line="37" code="50010">No DocBlock was found for method __construct()</error>
      <error line="44" code="50010">No DocBlock was found for method addParentDefinitionDependency()</error>
      <error line="54" code="50010">No DocBlock was found for method getParentBeanDefinition()</error>
      <error line="61" code="50010">No DocBlock was found for method setParentBeanDefinition()</error>
      <error line="68" code="50010">No DocBlock was found for method getName()</error>
      <error line="75" code="50010">No DocBlock was found for method setName()</error>
      <error line="82" code="50010">No DocBlock was found for method getType()</error>
      <error line="89" code="50010">No DocBlock was found for method setType()</error>
      <error line="96" code="50010">No DocBlock was found for method getValue()</error>
      <error line="103" code="50010">No DocBlock was found for method setValue()</error>
      <error line="110" code="50010">No DocBlock was found for method getArgumentName()</error>
      <error line="122" code="50010">No DocBlock was found for method setArgumentName()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/phpSpring/bean/reference.php" hash="b1b7bc15a9344dcf7fc0dbffc96f2821" package="Default">
    <class final="false" abstract="false" namespace="global" line="28" package="com\greentiedev\phpSpring\bean">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_phpSpring_bean_reference</name>
      <full_name>\com_greentiedev_phpSpring_bean_reference</full_name>
      <docblock line="3">
        <description>This class servers as a simple placeholder for a bean reference that can be passed around until a
concrete bean definition is available.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.greentiedev.phpSpring.bean"/>
        <tag line="3" name="title" description="reference.php"/>
        <tag line="3" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               ColdSpring, Copyright (c) 2005, David Ross, Chris Scott, Kurt Wiersma, Sean Corfield&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="40" namespace="global" package="Default">
        <name>$beanID</name>
        <default></default>
        <docblock line="33">
          <description>This bean ID property servers the same purpose as the ID property of the Bean Definition class
({@see com_greentiedev_phpSpring_bean_definition }}).</description>
          <long-description></long-description>
          <tag line="33" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="com\greentiedev\phpSpring\bean">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="43">
          <description>This constructor method accepts a bean id string.</description>
          <long-description></long-description>
          <tag line="43" name="param" description="" type="string" variable="$beanID">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$beanID</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="com\greentiedev\phpSpring\bean">
        <name>getID</name>
        <full_name>getID</full_name>
        <docblock line="60">
          <description>A getter method for the bean id property.</description>
          <long-description></long-description>
          <tag line="60" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/phpSpring/bean/reference.php</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/abstract/dao.php" hash="23151cdc5e7e86caabfda517d442d3e5" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\abstract">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_wppf_abstract_dao</name>
      <full_name>\com_greentiedev_wppf_abstract_dao</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.abstract"/>
        <tag line="5" name="title" description="dao.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="com\greentiedev\wppf\abstract">
        <name>getEntityPrototype</name>
        <full_name>getEntityPrototype</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="com\greentiedev\wppf\abstract">
        <name>setEntityPrototype</name>
        <full_name>setEntityPrototype</full_name>
        <argument line="40">
          <name>$entity</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iEntity</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/abstract/dao.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_abstract_dao</critical>
      <error line="33" code="50010">No DocBlock was found for method getEntityPrototype()</error>
      <error line="40" code="50010">No DocBlock was found for method setEntityPrototype()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/abstract/entity.php" hash="52922d818d65720a4907eb8f66e9b6e4" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\abstract">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_wppf_abstract_entity</name>
      <full_name>\com_greentiedev_wppf_abstract_entity</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.abstract"/>
        <tag line="5" name="title" description="entity.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/abstract/entity.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_abstract_entity</critical>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/abstract/helper.php" hash="a4b24d16c649ab54b071c4672a20b04c" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\abstract">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_wppf_abstract_helper</name>
      <full_name>\com_greentiedev_wppf_abstract_helper</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.abstract"/>
        <tag line="5" name="title" description="helper.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/abstract/helper.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_abstract_helper</critical>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/abstract/hook.php" hash="8b00c4a1e3aec5f3edb342e51603ed07" package="Default">
    <class final="false" abstract="false" namespace="global" line="28" package="com\greentiedev\wppf\abstract">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_wppf_abstract_hook</name>
      <full_name>\com_greentiedev_wppf_abstract_hook</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.abstract"/>
        <tag line="5" name="title" description="hook.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="35" namespace="global" package="Default">
        <name>$plugin</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="global" package="Default">
        <name>$isAction</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="37" namespace="global" package="Default">
        <name>$isFilter</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="38" namespace="global" package="Default">
        <name>$hookName</name>
        <default>''</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="com\greentiedev\wppf\abstract">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="64" package="com\greentiedev\wppf\abstract">
        <name>_execute</name>
        <full_name>_execute</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="com\greentiedev\wppf\abstract">
        <name>getPlugin</name>
        <full_name>getPlugin</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="com\greentiedev\wppf\abstract">
        <name>setPlugin</name>
        <full_name>setPlugin</full_name>
        <argument line="88">
          <name>$obj</name>
          <default></default>
          <type>\com_greentiedev_wppf_bootstrap</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/abstract/hook.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_abstract_hook</critical>
      <error line="35" code="50018">No DocBlock was found for property $plugin</error>
      <error line="36" code="50018">No DocBlock was found for property $isAction</error>
      <error line="37" code="50018">No DocBlock was found for property $isFilter</error>
      <error line="38" code="50018">No DocBlock was found for property $hookName</error>
      <error line="43" code="50010">No DocBlock was found for method __construct()</error>
      <error line="64" code="50010">No DocBlock was found for method _execute()</error>
      <error line="82" code="50010">No DocBlock was found for method getPlugin()</error>
      <error line="88" code="50010">No DocBlock was found for method setPlugin()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/abstract/hookManager.php" hash="0f7114c58f84238a6b97567991a639da" package="Default">
    <class final="false" abstract="false" namespace="global" line="28" package="com\greentiedev\wppf\abstract">
      <extends>\com_greentiedev_wppf_abstract_manager</extends>
      <name>com_greentiedev_wppf_abstract_hookManager</name>
      <full_name>\com_greentiedev_wppf_abstract_hookManager</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.abstract"/>
        <tag line="5" name="title" description="hookManager.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_manager"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="com\greentiedev\wppf\abstract">
        <name>register</name>
        <full_name>register</full_name>
        <argument line="33">
          <name>$obj</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iManaged</type>
        </argument>
        <argument line="33">
          <name>$hooks</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/abstract/hookManager.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_abstract_hookManager</critical>
      <error line="33" code="50010">No DocBlock was found for method register()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/abstract/manager.php" hash="680837cef5bfe20c2f750e85ecad6f52" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\abstract">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_wppf_abstract_manager</name>
      <full_name>\com_greentiedev_wppf_abstract_manager</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.abstract"/>
        <tag line="5" name="title" description="manager.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="35" namespace="global" package="Default">
        <name>$plugin</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$managed</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="com\greentiedev\wppf\abstract">
        <name>register</name>
        <full_name>register</full_name>
        <argument line="41">
          <name>$obj</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iManaged</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="com\greentiedev\wppf\abstract">
        <name>getPlugin</name>
        <full_name>getPlugin</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="com\greentiedev\wppf\abstract">
        <name>setPlugin</name>
        <full_name>setPlugin</full_name>
        <argument line="58">
          <name>$obj</name>
          <default></default>
          <type>\com_greentiedev_wppf_bootstrap</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/abstract/manager.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_abstract_manager</critical>
      <error line="35" code="50018">No DocBlock was found for property $plugin</error>
      <error line="36" code="50018">No DocBlock was found for property $managed</error>
      <error line="41" code="50010">No DocBlock was found for method register()</error>
      <error line="52" code="50010">No DocBlock was found for method getPlugin()</error>
      <error line="58" code="50010">No DocBlock was found for method setPlugin()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/abstract/service.php" hash="9eeb15eb27305c476541988e1685e822" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\abstract">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_wppf_abstract_service</name>
      <full_name>\com_greentiedev_wppf_abstract_service</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.abstract"/>
        <tag line="5" name="title" description="service.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="com\greentiedev\wppf\abstract">
        <name>getDAO</name>
        <full_name>getDAO</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="com\greentiedev\wppf\abstract">
        <name>setDAO</name>
        <full_name>setDAO</full_name>
        <argument line="44">
          <name>$dao</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iDao</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/abstract/service.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_abstract_service</critical>
      <error line="33" code="50010">No DocBlock was found for method getDAO()</error>
      <error line="44" code="50010">No DocBlock was found for method setDAO()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/abstract/view.php" hash="bbf67c29b801a1cb3dae628ae7029a90" package="Default">
    <include line="88" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="global" line="29" package="com\greentiedev\wppf\abstract">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_greentiedev_wppf_abstract_view</name>
      <full_name>\com_greentiedev_wppf_abstract_view</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.abstract"/>
        <tag line="5" name="title" description="view.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$data</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$useTemplateEngine</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$template</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="39" namespace="global" package="Default">
        <name>$templateEngine</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="com\greentiedev\wppf\abstract">
        <name>render</name>
        <full_name>render</full_name>
        <argument line="42">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="com\greentiedev\wppf\abstract">
        <name>out</name>
        <full_name>out</full_name>
        <argument line="49">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="56" package="com\greentiedev\wppf\abstract">
        <name>processTemplate</name>
        <full_name>processTemplate</full_name>
        <argument line="56">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="71" package="com\greentiedev\wppf\abstract">
        <name>processTemplateAsPhp</name>
        <full_name>processTemplateAsPhp</full_name>
        <argument line="71">
          <name>$__data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="98" package="com\greentiedev\wppf\abstract">
        <name>setTemplate</name>
        <full_name>setTemplate</full_name>
        <argument line="98">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="104" package="com\greentiedev\wppf\abstract">
        <name>setTemplateEngine</name>
        <full_name>setTemplateEngine</full_name>
        <argument line="104">
          <name>$engine</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iTemplateEngine</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="111" package="com\greentiedev\wppf\abstract">
        <name>getTemplateEngine</name>
        <full_name>getTemplateEngine</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/abstract/view.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_abstract_view</critical>
      <error line="35" code="50018">No DocBlock was found for property $data</error>
      <error line="36" code="50018">No DocBlock was found for property $useTemplateEngine</error>
      <error line="37" code="50018">No DocBlock was found for property $template</error>
      <error line="39" code="50018">No DocBlock was found for property $templateEngine</error>
      <error line="42" code="50010">No DocBlock was found for method render()</error>
      <error line="49" code="50010">No DocBlock was found for method out()</error>
      <error line="56" code="50010">No DocBlock was found for method processTemplate()</error>
      <error line="71" code="50010">No DocBlock was found for method processTemplateAsPhp()</error>
      <error line="98" code="50010">No DocBlock was found for method setTemplate()</error>
      <error line="104" code="50010">No DocBlock was found for method setTemplateEngine()</error>
      <error line="111" code="50010">No DocBlock was found for method getTemplateEngine()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/abstract/widget.php" hash="d8e3b701134318d4219bcfe8540a8e5f" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\abstract">
      <extends>\WP_Widget</extends>
      <name>com_greentiedev_wppf_abstract_widget</name>
      <full_name>\com_greentiedev_wppf_abstract_widget</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.abstract"/>
        <tag line="5" name="title" description="widget.php"/>
        <tag line="5" name="extends" description="WP_Widget"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$options</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$controls</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="83" namespace="global" package="Default">
        <name>$logger</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="com\greentiedev\wppf\abstract">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="41">
          <name>$id_base</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="41">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="57" package="com\greentiedev\wppf\abstract">
        <name>getOptionData</name>
        <full_name>getOptionData</full_name>
        <docblock line="50">
          <description>This method both gets and parses widget option data.</description>
          <long-description></long-description>
          <tag line="50" name="param" description="An array of widget instance data" type="array" variable="$instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="50" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="86" package="com\greentiedev\wppf\abstract">
        <name>initLogger</name>
        <full_name>initLogger</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="com\greentiedev\wppf\abstract">
        <name>dump</name>
        <full_name>dump</full_name>
        <argument line="94">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="com\greentiedev\wppf\abstract">
        <name>log</name>
        <full_name>log</full_name>
        <argument line="102">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="com\greentiedev\wppf\abstract">
        <name>logAdd</name>
        <full_name>logAdd</full_name>
        <argument line="110">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="com\greentiedev\wppf\abstract">
        <name>trace</name>
        <full_name>trace</full_name>
        <argument line="118">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="126" package="com\greentiedev\wppf\abstract">
        <name>dumpLog</name>
        <full_name>dumpLog</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="com\greentiedev\wppf\abstract">
        <name>loggerSetting</name>
        <full_name>loggerSetting</full_name>
        <argument line="133">
          <name>$setting</name>
          <default></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/abstract/widget.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_abstract_widget</critical>
      <error line="35" code="50018">No DocBlock was found for property $options</error>
      <error line="36" code="50018">No DocBlock was found for property $controls</error>
      <error line="83" code="50018">No DocBlock was found for property $logger</error>
      <error line="41" code="50010">No DocBlock was found for method __construct()</error>
      <error line="86" code="50010">No DocBlock was found for method initLogger()</error>
      <error line="94" code="50010">No DocBlock was found for method dump()</error>
      <error line="102" code="50010">No DocBlock was found for method log()</error>
      <error line="110" code="50010">No DocBlock was found for method logAdd()</error>
      <error line="118" code="50010">No DocBlock was found for method trace()</error>
      <error line="126" code="50010">No DocBlock was found for method dumpLog()</error>
      <error line="133" code="50010">No DocBlock was found for method loggerSetting()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/action/action.php" hash="8b39a3eb3b8184832b280938d448c121" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\action">
      <extends>\com_greentiedev_wppf_abstract_hook</extends>
      <implements>\com_greentiedev_wppf_interface_iManaged</implements>
      <name>com_greentiedev_wppf_action_action</name>
      <full_name>\com_greentiedev_wppf_action_action</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.action"/>
        <tag line="5" name="title" description="action.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_hook"/>
        <tag line="5" name="implements" description="com_greentiedev_wppf_interface_iManaged"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="34" package="com\greentiedev\wppf\action">
        <name>execute</name>
        <full_name>execute</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/action/action.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_action_action</critical>
      <error line="34" code="50010">No DocBlock was found for method execute()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/action/manager.php" hash="5a8603f16cf817f0af3bcc812a531afe" package="Default">
    <class final="false" abstract="false" namespace="global" line="29" package="com\greentiedev\wppf\action">
      <extends>\com_greentiedev_wppf_abstract_hookManager</extends>
      <implements>\com_greentiedev_phpCommon_iSingleton</implements>
      <name>com_greentiedev_wppf_action_manager</name>
      <full_name>\com_greentiedev_wppf_action_manager</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.action"/>
        <tag line="5" name="title" description="manager.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_hookManager"/>
        <tag line="5" name="implements" description="com_greentiedev_phpCommon_iSingleton"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="37" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="40" package="com\greentiedev\wppf\action">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="51" package="com\greentiedev\wppf\action">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="com\greentiedev\wppf\action">
        <name>register</name>
        <full_name>register</full_name>
        <argument line="58">
          <name>$obj</name>
          <default></default>
          <type>\com_greentiedev_wppf_action_action</type>
        </argument>
        <argument line="58">
          <name>$hooks</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/action/manager.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_action_manager</critical>
      <error line="37" code="50018">No DocBlock was found for property $instance</error>
      <error line="40" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="51" code="50010">No DocBlock was found for method __construct()</error>
      <error line="58" code="50010">No DocBlock was found for method register()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/bootstrap.php" hash="ec6a66d16ce0407945e5e7aaad5d4591" package="Default">
    <class final="false" abstract="true" namespace="global" line="26" package="com\greentiedev\wppf">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_wppf_bootstrap</name>
      <full_name>\com_greentiedev_wppf_bootstrap</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf"/>
        <tag line="5" name="title" description="bootstrap.php"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                   http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="30" namespace="global" package="Default">
        <name>$reflection</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="global" package="Default">
        <name>$className</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$classFile</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="global" package="Default">
        <name>$pluginPath</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="global" package="Default">
        <name>$pluginUrl</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="global" package="Default">
        <name>$options</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$wppf_serviceFactory</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$os</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$am</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$fm</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$sm</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="44" package="com\greentiedev\wppf">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="global" line="66" package="com\greentiedev\wppf">
        <name>initPlugin</name>
        <full_name>initPlugin</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="94" package="com\greentiedev\wppf">
        <name>wppf_init</name>
        <full_name>wppf_init</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="100" package="com\greentiedev\wppf">
        <name>init</name>
        <full_name>init</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="106" package="com\greentiedev\wppf">
        <name>wppf_adminInit</name>
        <full_name>wppf_adminInit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="114" package="com\greentiedev\wppf">
        <name>adminInit</name>
        <full_name>adminInit</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="120" package="com\greentiedev\wppf">
        <name>wppf_shutdown</name>
        <full_name>wppf_shutdown</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="127" package="com\greentiedev\wppf">
        <name>shutdown</name>
        <full_name>shutdown</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="133" package="com\greentiedev\wppf">
        <name>wppf_activate</name>
        <full_name>wppf_activate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="139" package="com\greentiedev\wppf">
        <name>activate</name>
        <full_name>activate</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="145" package="com\greentiedev\wppf">
        <name>wppf_deactivate</name>
        <full_name>wppf_deactivate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="151" package="com\greentiedev\wppf">
        <name>deactivate</name>
        <full_name>deactivate</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="157" package="com\greentiedev\wppf">
        <name>wppf_uninstall</name>
        <full_name>wppf_uninstall</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="165" package="com\greentiedev\wppf">
        <name>uninstall</name>
        <full_name>uninstall</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="global" line="170" package="com\greentiedev\wppf">
        <name>wppf_options</name>
        <full_name>wppf_options</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="176" package="com\greentiedev\wppf">
        <name>options</name>
        <full_name>options</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="global" line="181" package="com\greentiedev\wppf">
        <name>wppf_actions</name>
        <full_name>wppf_actions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="187" package="com\greentiedev\wppf">
        <name>actions</name>
        <full_name>actions</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="global" line="192" package="com\greentiedev\wppf">
        <name>wppf_filters</name>
        <full_name>wppf_filters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="198" package="com\greentiedev\wppf">
        <name>filters</name>
        <full_name>filters</full_name>
      </method>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="global" line="203" package="com\greentiedev\wppf">
        <name>wppf_shortcodes</name>
        <full_name>wppf_shortcodes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="210" package="com\greentiedev\wppf">
        <name>shortcodes</name>
        <full_name>shortcodes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="215" package="com\greentiedev\wppf">
        <name>setPluginPath</name>
        <full_name>setPluginPath</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="220" package="com\greentiedev\wppf">
        <name>getClassName</name>
        <full_name>getClassName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="226" package="com\greentiedev\wppf">
        <name>getPluginUrl</name>
        <full_name>getPluginUrl</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="com\greentiedev\wppf">
        <name>getPluginPath</name>
        <full_name>getPluginPath</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="com\greentiedev\wppf">
        <name>getPluginBaseDir</name>
        <full_name>getPluginBaseDir</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/bootstrap.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_bootstrap</critical>
      <error line="30" code="50018">No DocBlock was found for property $reflection</error>
      <error line="31" code="50018">No DocBlock was found for property $className</error>
      <error line="32" code="50018">No DocBlock was found for property $classFile</error>
      <error line="33" code="50018">No DocBlock was found for property $pluginPath</error>
      <error line="34" code="50018">No DocBlock was found for property $pluginUrl</error>
      <error line="35" code="50018">No DocBlock was found for property $options</error>
      <error line="37" code="50018">No DocBlock was found for property $wppf_serviceFactory</error>
      <error line="38" code="50018">No DocBlock was found for property $os</error>
      <error line="39" code="50018">No DocBlock was found for property $am</error>
      <error line="40" code="50018">No DocBlock was found for property $fm</error>
      <error line="41" code="50018">No DocBlock was found for property $sm</error>
      <error line="44" code="50010">No DocBlock was found for method __construct()</error>
      <error line="66" code="50010">No DocBlock was found for method initPlugin()</error>
      <error line="94" code="50010">No DocBlock was found for method wppf_init()</error>
      <error line="100" code="50010">No DocBlock was found for method init()</error>
      <error line="106" code="50010">No DocBlock was found for method wppf_adminInit()</error>
      <error line="114" code="50010">No DocBlock was found for method adminInit()</error>
      <error line="120" code="50010">No DocBlock was found for method wppf_shutdown()</error>
      <error line="127" code="50010">No DocBlock was found for method shutdown()</error>
      <error line="133" code="50010">No DocBlock was found for method wppf_activate()</error>
      <error line="139" code="50010">No DocBlock was found for method activate()</error>
      <error line="145" code="50010">No DocBlock was found for method wppf_deactivate()</error>
      <error line="151" code="50010">No DocBlock was found for method deactivate()</error>
      <error line="157" code="50010">No DocBlock was found for method wppf_uninstall()</error>
      <error line="165" code="50010">No DocBlock was found for method uninstall()</error>
      <error line="170" code="50010">No DocBlock was found for method wppf_options()</error>
      <error line="176" code="50010">No DocBlock was found for method options()</error>
      <error line="181" code="50010">No DocBlock was found for method wppf_actions()</error>
      <error line="187" code="50010">No DocBlock was found for method actions()</error>
      <error line="192" code="50010">No DocBlock was found for method wppf_filters()</error>
      <error line="198" code="50010">No DocBlock was found for method filters()</error>
      <error line="203" code="50010">No DocBlock was found for method wppf_shortcodes()</error>
      <error line="210" code="50010">No DocBlock was found for method shortcodes()</error>
      <error line="215" code="50010">No DocBlock was found for method setPluginPath()</error>
      <error line="220" code="50010">No DocBlock was found for method getClassName()</error>
      <error line="226" code="50010">No DocBlock was found for method getPluginUrl()</error>
      <error line="232" code="50010">No DocBlock was found for method getPluginPath()</error>
      <error line="238" code="50010">No DocBlock was found for method getPluginBaseDir()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/data/service.php" hash="ec8aca6b84beb7e62a5660afcf7273db" package="Default">
    <class final="false" abstract="false" namespace="global" line="28" package="com\greentiedev\wppf\data">
      <extends>\com_greentiedev_wppf_abstract_service</extends>
      <implements>\com_greentiedev_wppf_interface_iDataService</implements>
      <name>com_greentiedev_wppf_data_service</name>
      <full_name>\com_greentiedev_wppf_data_service</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.data"/>
        <tag line="5" name="title" description="service.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_service"/>
        <tag line="5" name="implements" description="com_greentiedev_wppf_interface_iDataService"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="36" namespace="global" package="Default">
        <name>$cacheDir</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="37" namespace="global" package="Default">
        <name>$cacheTime</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="38" namespace="global" package="Default">
        <name>$clearCache</name>
        <default>false</default>
      </property>
      <property final="false" static="true" visibility="private" line="43" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="46" package="com\greentiedev\wppf\data">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="57" package="com\greentiedev\wppf\data">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="com\greentiedev\wppf\data">
        <name>getData</name>
        <full_name>getData</full_name>
        <argument line="66">
          <name>$url</name>
          <default></default>
          <type>\com_greentiedev_wppf_data_webServiceUrl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="com\greentiedev\wppf\data">
        <name>clearCache</name>
        <full_name>clearCache</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="113" package="com\greentiedev\wppf\data">
        <name>resolveCachedData</name>
        <full_name>resolveCachedData</full_name>
        <argument line="113">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="137" package="com\greentiedev\wppf\data">
        <name>establishCachedData</name>
        <full_name>establishCachedData</full_name>
        <argument line="137">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$rawData</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="165" package="com\greentiedev\wppf\data">
        <name>getCachedFileName</name>
        <full_name>getCachedFileName</full_name>
        <argument line="165">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="176" package="com\greentiedev\wppf\data">
        <name>getCacheDir</name>
        <full_name>getCacheDir</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="182" package="com\greentiedev\wppf\data">
        <name>setCacheDir</name>
        <full_name>setCacheDir</full_name>
        <argument line="182">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="187" package="com\greentiedev\wppf\data">
        <name>getCacheTime</name>
        <full_name>getCacheTime</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="193" package="com\greentiedev\wppf\data">
        <name>setCacheTime</name>
        <full_name>setCacheTime</full_name>
        <argument line="193">
          <name>$minutes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="com\greentiedev\wppf\data">
        <name>getClearCache</name>
        <full_name>getClearCache</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="204" package="com\greentiedev\wppf\data">
        <name>setClearCache</name>
        <full_name>setClearCache</full_name>
        <argument line="204">
          <name>$clear</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="210" package="com\greentiedev\wppf\data">
        <name>getDataInterpreter</name>
        <full_name>getDataInterpreter</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="com\greentiedev\wppf\data">
        <name>setDataInterpreter</name>
        <full_name>setDataInterpreter</full_name>
        <argument line="217">
          <name>$di</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iDataInterpreter</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/data/service.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_data_service</critical>
      <error line="36" code="50018">No DocBlock was found for property $cacheDir</error>
      <error line="37" code="50018">No DocBlock was found for property $cacheTime</error>
      <error line="38" code="50018">No DocBlock was found for property $clearCache</error>
      <error line="43" code="50018">No DocBlock was found for property $instance</error>
      <error line="46" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="57" code="50010">No DocBlock was found for method __construct()</error>
      <error line="66" code="50010">No DocBlock was found for method getData()</error>
      <error line="102" code="50010">No DocBlock was found for method clearCache()</error>
      <error line="113" code="50010">No DocBlock was found for method resolveCachedData()</error>
      <error line="137" code="50010">No DocBlock was found for method establishCachedData()</error>
      <error line="165" code="50010">No DocBlock was found for method getCachedFileName()</error>
      <error line="176" code="50010">No DocBlock was found for method getCacheDir()</error>
      <error line="182" code="50010">No DocBlock was found for method setCacheDir()</error>
      <error line="187" code="50010">No DocBlock was found for method getCacheTime()</error>
      <error line="193" code="50010">No DocBlock was found for method setCacheTime()</error>
      <error line="198" code="50010">No DocBlock was found for method getClearCache()</error>
      <error line="204" code="50010">No DocBlock was found for method setClearCache()</error>
      <error line="210" code="50010">No DocBlock was found for method getDataInterpreter()</error>
      <error line="217" code="50010">No DocBlock was found for method setDataInterpreter()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/data/webServiceUrl.php" hash="32a66dbf285087f157bb8abc056060f8" package="Default">
    <class final="false" abstract="false" namespace="global" line="27" package="com\greentiedev\wppf\data">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <name>com_greentiedev_wppf_data_webServiceUrl</name>
      <full_name>\com_greentiedev_wppf_data_webServiceUrl</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.data"/>
        <tag line="5" name="title" description="webServiceUrl.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="34" namespace="global" package="Default">
        <name>$domain</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="global" package="Default">
        <name>$scriptPath</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="global" package="Default">
        <name>$parameters</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="37" namespace="global" package="Default">
        <name>$cacheSetting</name>
        <default>'none'</default>
      </property>
      <property final="false" static="false" visibility="private" line="38" namespace="global" package="Default">
        <name>$context</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="com\greentiedev\wppf\data">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="com\greentiedev\wppf\data">
        <name>hasParameter</name>
        <full_name>hasParameter</full_name>
        <argument line="51">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="com\greentiedev\wppf\data">
        <name>removeParameter</name>
        <full_name>removeParameter</full_name>
        <argument line="58">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="com\greentiedev\wppf\data">
        <name>clearParameters</name>
        <full_name>clearParameters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="com\greentiedev\wppf\data">
        <name>toString</name>
        <full_name>toString</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="com\greentiedev\wppf\data">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="104" package="com\greentiedev\wppf\data">
        <name>myUrlEncode</name>
        <full_name>myUrlEncode</full_name>
        <argument line="104">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="com\greentiedev\wppf\data">
        <name>setDomain</name>
        <full_name>setDomain</full_name>
        <argument line="114">
          <name>$domain</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="com\greentiedev\wppf\data">
        <name>getDomain</name>
        <full_name>getDomain</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="com\greentiedev\wppf\data">
        <name>setScriptPath</name>
        <full_name>setScriptPath</full_name>
        <argument line="128">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="135" package="com\greentiedev\wppf\data">
        <name>getScriptPath</name>
        <full_name>getScriptPath</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="com\greentiedev\wppf\data">
        <name>setParameter</name>
        <full_name>setParameter</full_name>
        <argument line="142">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="142">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="com\greentiedev\wppf\data">
        <name>getParameter</name>
        <full_name>getParameter</full_name>
        <argument line="148">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="com\greentiedev\wppf\data">
        <name>getParameters</name>
        <full_name>getParameters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="com\greentiedev\wppf\data">
        <name>setParameters</name>
        <full_name>setParameters</full_name>
        <argument line="162">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="com\greentiedev\wppf\data">
        <name>getCacheSetting</name>
        <full_name>getCacheSetting</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="177" package="com\greentiedev\wppf\data">
        <name>setCacheSetting</name>
        <full_name>setCacheSetting</full_name>
        <argument line="177">
          <name>$setting</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="189" package="com\greentiedev\wppf\data">
        <name>setContext</name>
        <full_name>setContext</full_name>
        <argument line="189">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="com\greentiedev\wppf\data">
        <name>getContext</name>
        <full_name>getContext</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/data/webServiceUrl.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_data_webServiceUrl</critical>
      <error line="34" code="50018">No DocBlock was found for property $domain</error>
      <error line="35" code="50018">No DocBlock was found for property $scriptPath</error>
      <error line="36" code="50018">No DocBlock was found for property $parameters</error>
      <error line="37" code="50018">No DocBlock was found for property $cacheSetting</error>
      <error line="38" code="50018">No DocBlock was found for property $context</error>
      <error line="43" code="50010">No DocBlock was found for method __construct()</error>
      <error line="51" code="50010">No DocBlock was found for method hasParameter()</error>
      <error line="58" code="50010">No DocBlock was found for method removeParameter()</error>
      <error line="67" code="50010">No DocBlock was found for method clearParameters()</error>
      <error line="74" code="50010">No DocBlock was found for method toString()</error>
      <error line="96" code="50010">No DocBlock was found for method __toString()</error>
      <error line="104" code="50010">No DocBlock was found for method myUrlEncode()</error>
      <error line="114" code="50010">No DocBlock was found for method setDomain()</error>
      <error line="121" code="50010">No DocBlock was found for method getDomain()</error>
      <error line="128" code="50010">No DocBlock was found for method setScriptPath()</error>
      <error line="135" code="50010">No DocBlock was found for method getScriptPath()</error>
      <error line="142" code="50010">No DocBlock was found for method setParameter()</error>
      <error line="148" code="50010">No DocBlock was found for method getParameter()</error>
      <error line="155" code="50010">No DocBlock was found for method getParameters()</error>
      <error line="162" code="50010">No DocBlock was found for method setParameters()</error>
      <error line="171" code="50010">No DocBlock was found for method getCacheSetting()</error>
      <error line="177" code="50010">No DocBlock was found for method setCacheSetting()</error>
      <error line="189" code="50010">No DocBlock was found for method setContext()</error>
      <error line="195" code="50010">No DocBlock was found for method getContext()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/filter/filter.php" hash="3199b9a31f879552fa80af94dec8d6e5" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\filter">
      <extends>\com_greentiedev_wppf_abstract_hook</extends>
      <implements>\com_greentiedev_wppf_interface_iManaged</implements>
      <name>com_greentiedev_wppf_filter_filter</name>
      <full_name>\com_greentiedev_wppf_filter_filter</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.filter"/>
        <tag line="5" name="title" description="filter.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_hook"/>
        <tag line="5" name="implements" description="com_greentiedev_wppf_interface_iManaged"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="34" package="com\greentiedev\wppf\filter">
        <name>execute</name>
        <full_name>execute</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/filter/filter.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_filter_filter</critical>
      <error line="34" code="50010">No DocBlock was found for method execute()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/filter/manager.php" hash="7b121e18028846b0362a16f68d0ccb42" package="Default">
    <class final="false" abstract="false" namespace="global" line="28" package="com\greentiedev\wppf\filter">
      <extends>\com_greentiedev_wppf_abstract_hookManager</extends>
      <implements>\com_greentiedev_phpCommon_iSingleton</implements>
      <name>com_greentiedev_wppf_filter_manager</name>
      <full_name>\com_greentiedev_wppf_filter_manager</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.filter"/>
        <tag line="5" name="title" description="manager.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_hookManager"/>
        <tag line="5" name="implements" description="com_greentiedev_phpCommon_iSingleton"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="36" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="39" package="com\greentiedev\wppf\filter">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="45" package="com\greentiedev\wppf\filter">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="com\greentiedev\wppf\filter">
        <name>register</name>
        <full_name>register</full_name>
        <argument line="56">
          <name>$obj</name>
          <default></default>
          <type>\com_greentiedev_wppf_filter_filter</type>
        </argument>
        <argument line="56">
          <name>$hooks</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/filter/manager.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_filter_manager</critical>
      <error line="36" code="50018">No DocBlock was found for property $instance</error>
      <error line="39" code="50010">No DocBlock was found for method __construct()</error>
      <error line="45" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="56" code="50010">No DocBlock was found for method register()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iDao.php" hash="bc047f58b0d6406240c700cb4675158d" package="Default">
    <interface namespace="global" line="28" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iDao</name>
      <full_name>\com_greentiedev_wppf_interface_iDao</full_name>
      <extends>\com_greentiedev_phpCommon_iSingleton</extends>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iDao.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_iSingleton"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="com\greentiedev\wppf\interface">
        <name>findAll</name>
        <full_name>findAll</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="com\greentiedev\wppf\interface">
        <name>findById</name>
        <full_name>findById</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="com\greentiedev\wppf\interface">
        <name>getData</name>
        <full_name>getData</full_name>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iDao.php</error>
      <error line="31" code="50010">No DocBlock was found for method findAll()</error>
      <error line="32" code="50010">No DocBlock was found for method findById()</error>
      <error line="33" code="50010">No DocBlock was found for method getData()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iDataInterpreter.php" hash="3f5dbe757c60a6c25d9fedae6764cdba" package="Default">
    <interface namespace="global" line="27" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iDataInterpreter</name>
      <full_name>\com_greentiedev_wppf_interface_iDataInterpreter</full_name>
      <extends>\com_greentiedev_wppf_interface_iService</extends>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iDataInterpreter.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_interface_iService"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="com\greentiedev\wppf\interface">
        <name>parse</name>
        <full_name>parse</full_name>
        <argument line="32">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iDataInterpreter.php</error>
      <error line="32" code="50010">No DocBlock was found for method parse()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iDataService.php" hash="8023c2bde4514b06d5ff7cc171ca8b96" package="Default">
    <interface namespace="global" line="27" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iDataService</name>
      <full_name>\com_greentiedev_wppf_interface_iDataService</full_name>
      <extends>\com_greentiedev_wppf_interface_iService</extends>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iDataStrategy.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_interface_iService"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="com\greentiedev\wppf\interface">
        <name>getData</name>
        <full_name>getData</full_name>
        <argument line="32">
          <name>$url</name>
          <default></default>
          <type>\com_greentiedev_wppf_data_webServiceUrl</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iDataService.php</error>
      <error line="32" code="50010">No DocBlock was found for method getData()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iEntity.php" hash="9ca08fe163c51adf45b86af7d5126ce1" package="Default">
    <interface namespace="global" line="26" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iEntity</name>
      <full_name>\com_greentiedev_wppf_interface_iEntity</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iEntity.php"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iEntity.php</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iFactory.php" hash="0baaea67ef77554e631ef4ef7ab5d783" package="Default">
    <interface namespace="global" line="27" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iFactory</name>
      <full_name>\com_greentiedev_wppf_interface_iFactory</full_name>
      <extends>\com_greentiedev_phpCommon_iSingleton</extends>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iFactory.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_iSingleton"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="com\greentiedev\wppf\interface">
        <name>get</name>
        <full_name>get</full_name>
        <argument line="30">
          <name>$target</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="com\greentiedev\wppf\interface">
        <name>set</name>
        <full_name>set</full_name>
        <argument line="31">
          <name>$target</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iFactory.php</error>
      <error line="30" code="50010">No DocBlock was found for method get()</error>
      <error line="31" code="50010">No DocBlock was found for method set()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iManaged.php" hash="3fe50bbcc3809101ec3e05df63e5a8f4" package="Default">
    <interface namespace="global" line="26" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iManaged</name>
      <full_name>\com_greentiedev_wppf_interface_iManaged</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iManaged.php"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iManaged.php</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iOption.php" hash="ed02d359ccd7d3f117318c3b980a638b" package="Default">
    <interface namespace="global" line="27" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iOption</name>
      <full_name>\com_greentiedev_wppf_interface_iOption</full_name>
      <extends>\com_greentiedev_wppf_interface_iManaged</extends>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iOption.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_interface_iManaged"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="com\greentiedev\wppf\interface">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <argument line="30">
          <name>$input</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iOption.php</error>
      <error line="30" code="50010">No DocBlock was found for method sanitize()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iService.php" hash="f6a9d563d0355d754cc9bbbf6bbbf07a" package="Default">
    <interface namespace="global" line="27" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iService</name>
      <full_name>\com_greentiedev_wppf_interface_iService</full_name>
      <extends>\com_greentiedev_phpCommon_iSingleton</extends>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iService.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_iSingleton"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iService.php</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iTemplateEngine.php" hash="b55626468e1ee07e13c139a4f72eed6c" package="Default">
    <interface namespace="global" line="27" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iTemplateEngine</name>
      <full_name>\com_greentiedev_wppf_interface_iTemplateEngine</full_name>
      <extends>\com_greentiedev_phpCommon_iSingleton</extends>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iTemplateEngine.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_iSingleton"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="com\greentiedev\wppf\interface">
        <name>parseTemplate</name>
        <full_name>parseTemplate</full_name>
        <argument line="30">
          <name>$templatePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iTemplateEngine.php</error>
      <error line="30" code="50010">No DocBlock was found for method parseTemplate()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/interface/iView.php" hash="30e530d80ac4fa0190a4a573d595b253" package="Default">
    <interface namespace="global" line="26" package="com\greentiedev\wppf\interface">
      <name>com_greentiedev_wppf_interface_iView</name>
      <full_name>\com_greentiedev_wppf_interface_iView</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.interface"/>
        <tag line="5" name="title" description="iView.php"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="com\greentiedev\wppf\interface">
        <name>render</name>
        <full_name>render</full_name>
        <argument line="28">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="com\greentiedev\wppf\interface">
        <name>out</name>
        <full_name>out</full_name>
        <argument line="29">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/interface/iView.php</error>
      <error line="28" code="50010">No DocBlock was found for method render()</error>
      <error line="29" code="50010">No DocBlock was found for method out()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/json/service.php" hash="f77f0ac0fdb49c4c91113ca1adeeb362" package="Default">
    <class final="false" abstract="false" namespace="global" line="28" package="com\greentiedev\wppf\json">
      <extends>\com_greentiedev_wppf_abstract_service</extends>
      <implements>\com_greentiedev_wppf_interface_iDataInterpreter</implements>
      <name>com_greentiedev_wppf_json_service</name>
      <full_name>\com_greentiedev_wppf_json_service</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.json"/>
        <tag line="5" name="title" description="service.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_service"/>
        <tag line="5" name="implements" description="com_greentiedev_wppf_interface_iDataInterpreter"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="34" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="37" package="com\greentiedev\wppf\json">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="42" package="com\greentiedev\wppf\json">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="com\greentiedev\wppf\json">
        <name>parse</name>
        <full_name>parse</full_name>
        <argument line="51">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="71" package="com\greentiedev\wppf\json">
        <name>getJsonError</name>
        <full_name>getJsonError</full_name>
        <argument line="71">
          <name>$errorCode</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/json/service.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_json_service</critical>
      <error line="34" code="50018">No DocBlock was found for property $instance</error>
      <error line="37" code="50010">No DocBlock was found for method __construct()</error>
      <error line="42" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="51" code="50010">No DocBlock was found for method parse()</error>
      <error line="71" code="50010">No DocBlock was found for method getJsonError()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/option/manager.php" hash="b1c1d5eec241c9665121530a455f7d83" package="Default">
    <class final="false" abstract="false" namespace="global" line="28" package="com\greentiedev\wppf\option">
      <extends>\com_greentiedev_wppf_abstract_manager</extends>
      <implements>\com_greentiedev_phpCommon_iSingleton</implements>
      <name>com_greentiedev_wppf_option_manager</name>
      <full_name>\com_greentiedev_wppf_option_manager</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.option"/>
        <tag line="5" name="title" description="manager.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_manager"/>
        <tag line="5" name="implements" description="com_greentiedev_phpCommon_iSingleton"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;               http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="34" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="global" package="Default">
        <name>$groupName</name>
        <default>'wppfDefaultOptionGroup'</default>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="global" package="Default">
        <name>$canRegister</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="38" package="com\greentiedev\wppf\option">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="44" package="com\greentiedev\wppf\option">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="com\greentiedev\wppf\option">
        <name>register</name>
        <full_name>register</full_name>
        <argument line="56">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$default</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="com\greentiedev\wppf\option">
        <name>isRegistered</name>
        <full_name>isRegistered</full_name>
        <argument line="70">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="com\greentiedev\wppf\option">
        <name>setGroupName</name>
        <full_name>setGroupName</full_name>
        <argument line="82">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="com\greentiedev\wppf\option">
        <name>getGroupName</name>
        <full_name>getGroupName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="com\greentiedev\wppf\option">
        <name>getOptionList</name>
        <full_name>getOptionList</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="com\greentiedev\wppf\option">
        <name>getOption</name>
        <full_name>getOption</full_name>
        <argument line="116">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="com\greentiedev\wppf\option">
        <name>getOptions</name>
        <full_name>getOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="com\greentiedev\wppf\option">
        <name>registerWithWP</name>
        <full_name>registerWithWP</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="com\greentiedev\wppf\option">
        <name>unregisterWithWP</name>
        <full_name>unregisterWithWP</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="com\greentiedev\wppf\option">
        <name>getOptionValueFromWP</name>
        <full_name>getOptionValueFromWP</full_name>
        <argument line="162">
          <name>$option</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="com\greentiedev\wppf\option">
        <name>getSettingsFormHeader</name>
        <full_name>getSettingsFormHeader</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/option/manager.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_option_manager</critical>
      <error line="34" code="50018">No DocBlock was found for property $instance</error>
      <error line="35" code="50018">No DocBlock was found for property $groupName</error>
      <error line="53" code="50018">No DocBlock was found for property $canRegister</error>
      <error line="38" code="50010">No DocBlock was found for method __construct()</error>
      <error line="44" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="56" code="50010">No DocBlock was found for method register()</error>
      <error line="70" code="50010">No DocBlock was found for method isRegistered()</error>
      <error line="82" code="50010">No DocBlock was found for method setGroupName()</error>
      <error line="91" code="50010">No DocBlock was found for method getGroupName()</error>
      <error line="98" code="50010">No DocBlock was found for method getOptionList()</error>
      <error line="116" code="50010">No DocBlock was found for method getOption()</error>
      <error line="123" code="50010">No DocBlock was found for method getOptions()</error>
      <error line="130" code="50010">No DocBlock was found for method registerWithWP()</error>
      <error line="151" code="50010">No DocBlock was found for method unregisterWithWP()</error>
      <error line="162" code="50010">No DocBlock was found for method getOptionValueFromWP()</error>
      <error line="174" code="50010">No DocBlock was found for method getSettingsFormHeader()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/shortcode/manager.php" hash="3146e76a61d58746db5807317e312d06" package="Default">
    <class final="false" abstract="false" namespace="global" line="28" package="com\greentiedev\wppf\shortcode">
      <extends>\com_greentiedev_wppf_abstract_manager</extends>
      <implements>\com_greentiedev_phpCommon_iSingleton</implements>
      <name>com_greentiedev_wppf_shortcode_manager</name>
      <full_name>\com_greentiedev_wppf_shortcode_manager</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.shortcode"/>
        <tag line="5" name="title" description="manager.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_manager"/>
        <tag line="5" name="implements" description="com_greentiedev_phpCommon_iSingleton"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="34" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="37" package="com\greentiedev\wppf\shortcode">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="42" package="com\greentiedev\wppf\shortcode">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="com\greentiedev\wppf\shortcode">
        <name>register</name>
        <full_name>register</full_name>
        <argument line="51">
          <name>$obj</name>
          <default></default>
          <type>\com_greentiedev_wppf_shortcode_shortcode</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/shortcode/manager.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_shortcode_manager</critical>
      <error line="34" code="50018">No DocBlock was found for property $instance</error>
      <error line="37" code="50010">No DocBlock was found for method __construct()</error>
      <error line="42" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="51" code="50010">No DocBlock was found for method register()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/shortcode/shortcode.php" hash="a67d2814c3ef1997a7a386a39ad7b38e" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\shortcode">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <implements>\com_greentiedev_wppf_interface_iManaged</implements>
      <name>com_greentiedev_wppf_shortcode_shortcode</name>
      <full_name>\com_greentiedev_wppf_shortcode_shortcode</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.shortcode"/>
        <tag line="5" name="title" description="shortcode.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="implements" description="com_greentiedev_wppf_interface_iManaged"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="36" namespace="global" package="Default">
        <name>$plugin</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$attributes</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="42" package="com\greentiedev\wppf\shortcode">
        <name>execute</name>
        <full_name>execute</full_name>
        <argument line="42">
          <name>$attr</name>
          <default></default>
          <type/>
        </argument>
        <argument line="42">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="54" package="com\greentiedev\wppf\shortcode">
        <name>getAttributesData</name>
        <full_name>getAttributesData</full_name>
        <docblock line="47">
          <description>This method both gets and parses widget option data.</description>
          <long-description></long-description>
          <tag line="47" name="param" description="An array of shortcode instance data" type="array" variable="$instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="47" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$instance</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="com\greentiedev\wppf\shortcode">
        <name>getPlugin</name>
        <full_name>getPlugin</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="com\greentiedev\wppf\shortcode">
        <name>setPlugin</name>
        <full_name>setPlugin</full_name>
        <argument line="85">
          <name>$obj</name>
          <default></default>
          <type>\com_greentiedev_wppf_bootstrap</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/shortcode/shortcode.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_shortcode_shortcode</critical>
      <error line="36" code="50018">No DocBlock was found for property $plugin</error>
      <error line="37" code="50018">No DocBlock was found for property $attributes</error>
      <error line="42" code="50010">No DocBlock was found for method execute()</error>
      <error line="79" code="50010">No DocBlock was found for method getPlugin()</error>
      <error line="85" code="50010">No DocBlock was found for method setPlugin()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/template/defaultEngine.php" hash="b5529a0bb386450568c422cfcef8e5a5" package="Default">
    <class final="false" abstract="true" namespace="global" line="28" package="com\greentiedev\wppf\template">
      <extends>\com_greentiedev_phpCommon_abstractClass</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_greentiedev_wppf_template_defaultEngine</name>
      <full_name>\com_greentiedev_wppf_template_defaultEngine</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.template"/>
        <tag line="5" name="title" description="defaultEngine.php"/>
        <tag line="5" name="extends" description="com_greentiedev_phpCommon_abstractClass"/>
        <tag line="5" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="com\greentiedev\wppf\template">
        <name>parseTemplate</name>
        <full_name>parseTemplate</full_name>
        <argument line="34">
          <name>$templatePath</name>
          <default></default>
          <type/>
        </argument>
        <argument line="34">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/template/defaultEngine.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_template_defaultEngine</critical>
      <error line="34" code="50010">No DocBlock was found for method parseTemplate()</error>
    </parse_markers>
  </file>
  <file path="com/greentiedev/wppf/xml/service.php" hash="7333387fab42fc3ac311456d6122a580" package="Default">
    <class final="false" abstract="false" namespace="global" line="28" package="com\greentiedev\wppf\xml">
      <extends>\com_greentiedev_wppf_abstract_service</extends>
      <implements>\com_greentiedev_wppf_interface_iDataInterpreter</implements>
      <name>com_greentiedev_wppf_xml_service</name>
      <full_name>\com_greentiedev_wppf_xml_service</full_name>
      <docblock line="5">
        <description></description>
        <long-description></long-description>
        <tag line="5" name="package" description="com.greentiedev.wppf.xml"/>
        <tag line="5" name="title" description="service.php"/>
        <tag line="5" name="extends" description="com_greentiedev_wppf_abstract_service"/>
        <tag line="5" name="implements" description="com_greentiedev_wppf_interface_iDataInterpreter"/>
        <tag line="5" name="contributors" description="AJ Michels (http://greentiedev.com)"/>
        <tag line="5" name="version" description="1.0"/>
        <tag line="5" name="copyright" description="Copyright (c) 2012, AJ Michels&#10;               Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;               you may not use this file except in compliance with the License.&#10;               You may obtain a copy of the License at&#10;                  http://www.apache.org/licenses/LICENSE-2.0&#10;               Unless required by applicable law or agreed to in writing, software&#10;               distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;               WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;               See the License for the specific language governing permissions and&#10;               limitations under the License."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="34" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="global" package="Default">
        <name>$data</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="38" package="com\greentiedev\wppf\xml">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="43" package="com\greentiedev\wppf\xml">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="com\greentiedev\wppf\xml">
        <name>parse</name>
        <full_name>parse</full_name>
        <argument line="52">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="68" package="com\greentiedev\wppf\xml">
        <name>parseNode</name>
        <full_name>parseNode</full_name>
        <argument line="68">
          <name>$node</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$isAssociative</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="93" package="com\greentiedev\wppf\xml">
        <name>associativeTest</name>
        <full_name>associativeTest</full_name>
        <argument line="93">
          <name>$node</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/greentiedev/wppf/xml/service.php</error>
      <critical line="5" code="50005">No short description for class \com_greentiedev_wppf_xml_service</critical>
      <error line="34" code="50018">No DocBlock was found for property $instance</error>
      <error line="35" code="50018">No DocBlock was found for property $data</error>
      <error line="38" code="50010">No DocBlock was found for method __construct()</error>
      <error line="43" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="52" code="50010">No DocBlock was found for method parse()</error>
      <error line="68" code="50010">No DocBlock was found for method parseNode()</error>
      <error line="93" code="50010">No DocBlock was found for method associativeTest()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/abstract/widget.php" hash="697d8c5ee641c42e3c9493e0077b4a96" package="Default">
    <class final="false" abstract="true" namespace="global" line="30" package="com\wolfnet\wordpress\abstract">
      <extends>\com_greentiedev_wppf_abstract_widget</extends>
      <name>com_wolfnet_wordpress_abstract_widget</name>
      <full_name>\com_wolfnet_wordpress_abstract_widget</full_name>
      <docblock line="3">
        <description>This object provides some additional wolfnet specific logic to abstract widget class.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="abstract"/>
        <tag line="3" name="title" description="widget.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_widget"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$pluginInstance</name>
        <default></default>
        <docblock line="37">
          <description>This property holds a reference to the plugin instance.</description>
          <long-description>&lt;p&gt;It is used to provide access for the
widget to the resources that are available in the plugin such as the service factory. This
must be done this way as widget objects are called outside of the normal plugin request cycle.&lt;/p&gt;</long-description>
          <tag line="37" name="type" description="wolfnet"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$sf</name>
        <default></default>
        <docblock line="48">
          <description>This property holds a reference to the Service Factory retrieved from the plugin instance.</description>
          <long-description></long-description>
          <tag line="48" name="type" description="com_greentiedev_phpSpring_bean_factory_default"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="com\wolfnet\wordpress\abstract">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="59">
          <description>This constructor method passes data from the concrete Widget object to the wppf abstract
widget which in turn passes the data to the base WPWidget class.</description>
          <long-description></long-description>
          <tag line="59" name="param" description="" type="mixed" variable="$id_base">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="59" name="param" description="" type="mixed" variable="$name">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="59" name="param" description="" type="array" variable="$widget_options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="59" name="param" description="" type="array" variable="$control_options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="59" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$id_base</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="70">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$widget_options</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="70">
          <name>$control_options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/abstract/widget.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/action/addShortcodeBuilderButton.php" hash="482d41927d56ac6fe7ced17b170e59b3" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\action">
      <extends>\com_greentiedev_wppf_action_action</extends>
      <name>com_wolfnet_wordpress_action_addShortcodeBuilderButton</name>
      <full_name>\com_wolfnet_wordpress_action_addShortcodeBuilderButton</full_name>
      <docblock line="3">
        <description>This action is responsible for enqueuing any admin resources such as JavaScript and CSS that are
needed for any code generated in the WordPress admin for the plugin.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="action"/>
        <tag line="3" name="title" description="addShortcodeBuilderButton.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_action_action"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$pluginUrl</name>
        <default>''</default>
        <docblock line="37">
          <description>This property holds the URL string to the plugin directory.</description>
          <long-description>&lt;p&gt;This URL is needed to accurately
define the path to the resource files.&lt;/p&gt;</long-description>
          <tag line="37" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="com\wolfnet\wordpress\action">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="49">
          <description>This method is executed by the ActionManager when any hooks that this action is registered to
are encountered.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="com\wolfnet\wordpress\action">
        <name>addPluginJavaScript</name>
        <full_name>addPluginJavaScript</full_name>
        <argument line="70">
          <name>$plugins</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="com\wolfnet\wordpress\action">
        <name>registerButton</name>
        <full_name>registerButton</full_name>
        <argument line="84">
          <name>$buttons</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="com\wolfnet\wordpress\action">
        <name>getPluginUrl</name>
        <full_name>getPluginUrl</full_name>
        <docblock line="93">
          <description>GETTER: This method is a getter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="93" name="return" description="The absolute URL to this plugin's directory." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="com\wolfnet\wordpress\action">
        <name>setPluginUrl</name>
        <full_name>setPluginUrl</full_name>
        <docblock line="105">
          <description>SETTER: This method is a setter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="105" name="param" description="The absolute URL to this plugin's directory." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/action/addShortcodeBuilderButton.php</error>
      <error line="70" code="50010">No DocBlock was found for method addPluginJavaScript()</error>
      <error line="84" code="50010">No DocBlock was found for method registerButton()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/action/createAdminPages.php" hash="36cf2198393399beaea418d3b68c9e6c" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\action">
      <extends>\com_greentiedev_wppf_action_action</extends>
      <name>com_wolfnet_wordpress_action_createAdminPages</name>
      <full_name>\com_wolfnet_wordpress_action_createAdminPages</full_name>
      <docblock line="3">
        <description>This action is responsible for creating the plugin admin pages within the WordPress admin.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="action"/>
        <tag line="3" name="title" description="createAdminPages.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_action_action"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$pluginSettingsView</name>
        <default></default>
        <docblock line="37">
          <description>This property holds a reference to the view page which will be displayed on the primary
plugin admin page.</description>
          <long-description></long-description>
          <tag line="37" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="54" namespace="global" package="Default">
        <name>$pluginInstructionsView</name>
        <default></default>
        <docblock line="47">
          <description>This property holds a reference to the view page which will be displayed on the plugin admin
support page.</description>
          <long-description></long-description>
          <tag line="47" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="64" namespace="global" package="Default">
        <name>$searchManagerView</name>
        <default></default>
        <docblock line="57">
          <description>This property holds a reference to the view page which will be displayed on the plugin admin
search manager page.</description>
          <long-description></long-description>
          <tag line="57" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="74" namespace="global" package="Default">
        <name>$pluginUrl</name>
        <default></default>
        <docblock line="67">
          <description>This property holds the absolute URL to the plugin directory.</description>
          <long-description>&lt;p&gt;This property is used to define
resources such as images and javascript files.&lt;/p&gt;</long-description>
          <tag line="67" name="type" description="string  The absolute URL to this plugin's directory."/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="86" package="com\wolfnet\wordpress\action">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="79">
          <description>This method is executed by the ActionManager when any hooks that this action is registered to
are encountered.</description>
          <long-description></long-description>
          <tag line="79" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="com\wolfnet\wordpress\action">
        <name>pluginSettingsPage</name>
        <full_name>pluginSettingsPage</full_name>
        <docblock line="129">
          <description>This method is responsible for creating and outputing the plugin settings page within the
WordPress admin.</description>
          <long-description></long-description>
          <tag line="129" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="com\wolfnet\wordpress\action">
        <name>searchManagerPage</name>
        <full_name>searchManagerPage</full_name>
        <docblock line="142">
          <description>This method is responsible for creating and outputing the plugin search manager page within
the WordPress admin.</description>
          <long-description></long-description>
          <tag line="142" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="com\wolfnet\wordpress\action">
        <name>pluginInstructionsPage</name>
        <full_name>pluginInstructionsPage</full_name>
        <docblock line="155">
          <description>This method is responsible for creating and outputing the plugin support page within the
WordPress admin.</description>
          <long-description></long-description>
          <tag line="155" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="176" package="com\wolfnet\wordpress\action">
        <name>getPluginSettingsView</name>
        <full_name>getPluginSettingsView</full_name>
        <docblock line="170">
          <description>GETTER: This method is a getter for the pluginSettingsView property.</description>
          <long-description></long-description>
          <tag line="170" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="189" package="com\wolfnet\wordpress\action">
        <name>setPluginSettingsView</name>
        <full_name>setPluginSettingsView</full_name>
        <docblock line="182">
          <description>SETTER: This method is a setter for the pluginSettingsView property.</description>
          <long-description></long-description>
          <tag line="182" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="182" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="com\wolfnet\wordpress\action">
        <name>getPluginInstructionsView</name>
        <full_name>getPluginInstructionsView</full_name>
        <docblock line="195">
          <description>GETTER: This method is a getter for the pluginInstructionsView property.</description>
          <long-description></long-description>
          <tag line="195" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="214" package="com\wolfnet\wordpress\action">
        <name>setPluginInstructionsView</name>
        <full_name>setPluginInstructionsView</full_name>
        <docblock line="207">
          <description>SETTER: This method is a setter for the pluginInstructionsView property.</description>
          <long-description></long-description>
          <tag line="207" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="207" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="226" package="com\wolfnet\wordpress\action">
        <name>getSearchManagerView</name>
        <full_name>getSearchManagerView</full_name>
        <docblock line="220">
          <description>GETTER: This method is a getter for the searchManagerView property.</description>
          <long-description></long-description>
          <tag line="220" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="239" package="com\wolfnet\wordpress\action">
        <name>setSearchManagerView</name>
        <full_name>setSearchManagerView</full_name>
        <docblock line="232">
          <description>SETTER: This method is a setter for the searchManagerView property.</description>
          <long-description></long-description>
          <tag line="232" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="232" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="239">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="251" package="com\wolfnet\wordpress\action">
        <name>getPluginUrl</name>
        <full_name>getPluginUrl</full_name>
        <docblock line="245">
          <description>GETTER: This method is a getter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="245" name="return" description="The absolute URL to this plugin's directory." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="264" package="com\wolfnet\wordpress\action">
        <name>setPluginUrl</name>
        <full_name>setPluginUrl</full_name>
        <docblock line="257">
          <description>SETTER: This method is a setter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="257" name="param" description="The absolute URL to this plugin's directory." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="257" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/action/createAdminPages.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/action/enqueueAdminResources.php" hash="d77b2deaa033ab8f3fa6e6d81fdd92ca" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\action">
      <extends>\com_greentiedev_wppf_action_action</extends>
      <name>com_wolfnet_wordpress_action_enqueueAdminResources</name>
      <full_name>\com_wolfnet_wordpress_action_enqueueAdminResources</full_name>
      <docblock line="3">
        <description>This action is responsible for enqueuing any admin resources such as JavaScript and CSS that are
needed for any code generated in the WordPress admin for the plugin.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="action"/>
        <tag line="3" name="title" description="enqueueAdminResources.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_action_action"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$pluginUrl</name>
        <default>''</default>
        <docblock line="37">
          <description>This property holds the URL string to the plugin directory.</description>
          <long-description>&lt;p&gt;This URL is needed to accurately
define the path to the resource files.&lt;/p&gt;</long-description>
          <tag line="37" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="com\wolfnet\wordpress\action">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="49">
          <description>This method is executed by the ActionManager when any hooks that this action is registered to
are encountered.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="com\wolfnet\wordpress\action">
        <name>getPluginUrl</name>
        <full_name>getPluginUrl</full_name>
        <docblock line="79">
          <description>GETTER: This method is a getter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="79" name="return" description="The absolute URL to this plugin's directory." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="com\wolfnet\wordpress\action">
        <name>setPluginUrl</name>
        <full_name>setPluginUrl</full_name>
        <docblock line="91">
          <description>SETTER: This method is a setter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="91" name="param" description="The absolute URL to this plugin's directory." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/action/enqueueAdminResources.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/action/enqueueResources.php" hash="533c072d327c19ddc4c7d11298415456" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\action">
      <extends>\com_greentiedev_wppf_action_action</extends>
      <name>com_wolfnet_wordpress_action_enqueueResources</name>
      <full_name>\com_wolfnet_wordpress_action_enqueueResources</full_name>
      <docblock line="3">
        <description>This action is responsible for enqueuing any resources such as JavaScript and CSS that are
needed for any code generated by the plugin in public ares of the site.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="action"/>
        <tag line="3" name="title" description="enqueueResources.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_action_action"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$pluginUrl</name>
        <default>''</default>
        <docblock line="37">
          <description>This property holds the URL string to the plugin directory.</description>
          <long-description>&lt;p&gt;This URL is needed to accurately
define the path to the resource files.&lt;/p&gt;</long-description>
          <tag line="37" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="com\wolfnet\wordpress\action">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="49">
          <description>This method is executed by the ActionManager when any hooks that this action is registered to
are encountered.</description>
          <long-description>&lt;p&gt;It is currently handling the following resources: wolfnet.min.js,
jquery.filmStrip.min.js, and wolfnet.min.css.&lt;/p&gt;</long-description>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="com\wolfnet\wordpress\action">
        <name>getPluginUrl</name>
        <full_name>getPluginUrl</full_name>
        <docblock line="81">
          <description>GETTER: This method is a getter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="81" name="return" description="The absolute URL to this plugin's directory." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="com\wolfnet\wordpress\action">
        <name>setPluginUrl</name>
        <full_name>setPluginUrl</full_name>
        <docblock line="92">
          <description>SETTER: This method is a setter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="92" name="param" description="The absolute URL to this plugin's directory." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/action/enqueueResources.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/action/footerDisclaimer.php" hash="6c164e495d8555f822e5d65f0748565e" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\wolfnet\wordpress\action">
      <extends>\com_greentiedev_wppf_action_action</extends>
      <name>com_wolfnet_wordpress_action_footerDisclaimer</name>
      <full_name>\com_wolfnet_wordpress_action_footerDisclaimer</full_name>
      <docblock line="3">
        <description>This action is responsible for enqueuing any admin resources such as JavaScript and CSS that are
needed for any code generated in the WordPress admin for the plugin.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="action"/>
        <tag line="3" name="title" description="footerDisclaimer.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_action_action"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$marketDisclaimerService</name>
        <default></default>
        <docblock line="38">
          <description>This property holds a reference to the Market Disclaimer Service object.</description>
          <long-description></long-description>
          <tag line="38" name="type" description="com_wolfnet_wordpress_market_disclaimer_service"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="com\wolfnet\wordpress\action">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="49">
          <description>This method is executed by the ActionManager when any hooks that this action is registered to
are encountered.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="com\wolfnet\wordpress\action">
        <name>getMarketDisclaimerService</name>
        <full_name>getMarketDisclaimerService</full_name>
        <docblock line="75">
          <description>GETTER:  This method is a getter for the marketDisclaimerService property.</description>
          <long-description></long-description>
          <tag line="75" name="return" description="" type="\com_wolfnet_wordpress_market_disclaimer_service">
            <type by_reference="false">\com_wolfnet_wordpress_market_disclaimer_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="com\wolfnet\wordpress\action">
        <name>setMarketDisclaimerService</name>
        <full_name>setMarketDisclaimerService</full_name>
        <docblock line="87">
          <description>SETTER:  This method is a setter for the marketDisclaimerService property.</description>
          <long-description></long-description>
          <tag line="87" name="param" description="" type="\com_wolfnet_wordpress_market_disclaimer_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_market_disclaimer_service</type>
          </tag>
          <tag line="87" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_market_disclaimer_service</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/action/footerDisclaimer.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/action/manageRewritePages.php" hash="11c0a0ccf5364eea7065906aead6494c" package="Default">
    <class final="false" abstract="false" namespace="global" line="29" package="com\wolfnet\wordpress\action">
      <extends>\com_greentiedev_wppf_action_action</extends>
      <name>com_wolfnet_wordpress_action_manageRewritePages</name>
      <full_name>\com_wolfnet_wordpress_action_manageRewritePages</full_name>
      <docblock line="3">
        <description>This action is responsible for creating the plugin admin pages within the WordPress admin.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="action"/>
        <tag line="3" name="title" description="manageRewritePages.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_action_action"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Default">
        <name>$listingService</name>
        <default></default>
        <docblock line="36">
          <description>This property holds a references to the Listing Service object.</description>
          <long-description></long-description>
          <tag line="36" name="type" description="com_wolfnet_wordpress_listing_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="51" namespace="global" package="Default">
        <name>$searchService</name>
        <default></default>
        <docblock line="45">
          <description>This property holds a references to the Search Service object.</description>
          <long-description></long-description>
          <tag line="45" name="type" description="com_wolfnet_wordpress_search_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="60" namespace="global" package="Default">
        <name>$listingGridOptionsView</name>
        <default></default>
        <docblock line="54">
          <description>This property holds an instance of the Listing Grid Options View object</description>
          <long-description></long-description>
          <tag line="54" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="69" namespace="global" package="Default">
        <name>$featuredListingsOptionsView</name>
        <default></default>
        <docblock line="63">
          <description>This property holds an instance of the Featured Listings Options View object.</description>
          <long-description></long-description>
          <tag line="63" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="78" namespace="global" package="Default">
        <name>$propertyListOptionsView</name>
        <default></default>
        <docblock line="72">
          <description>This property holds an instance of the Property List Options View object</description>
          <long-description></long-description>
          <tag line="72" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="87" namespace="global" package="Default">
        <name>$quickSearchOptionsView</name>
        <default></default>
        <docblock line="81">
          <description>This property holds an instance of the Quick Search Options View object</description>
          <long-description></long-description>
          <tag line="81" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="96" namespace="global" package="Default">
        <name>$enqueueResourcesAction</name>
        <default></default>
        <docblock line="90">
          <description>This property holds an instance of the Quick Search Options View object</description>
          <long-description></long-description>
          <tag line="90" name="type" description="com_wolfnet_wordpress_action_enqueueResources"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="com\wolfnet\wordpress\action">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="101">
          <description>This method is executed by the ActionManager when any hooks that this action is registered to
are encountered.</description>
          <long-description></long-description>
          <tag line="101" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="150" package="com\wolfnet\wordpress\action">
        <name>admin_shortcodebuilder_options_featured</name>
        <full_name>admin_shortcodebuilder_options_featured</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="173" package="com\wolfnet\wordpress\action">
        <name>admin_shortcodebuilder_options_grid</name>
        <full_name>admin_shortcodebuilder_options_grid</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="201" package="com\wolfnet\wordpress\action">
        <name>admin_shortcodebuilder_options_list</name>
        <full_name>admin_shortcodebuilder_options_list</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="207" package="com\wolfnet\wordpress\action">
        <name>admin_shortcodebuilder_options_quicksearch</name>
        <full_name>admin_shortcodebuilder_options_quicksearch</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="224" package="com\wolfnet\wordpress\action">
        <name>admin_shortcodebuilder_saved_search</name>
        <full_name>admin_shortcodebuilder_saved_search</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="235" package="com\wolfnet\wordpress\action">
        <name>admin_searchmanager_get</name>
        <full_name>admin_searchmanager_get</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="255" package="com\wolfnet\wordpress\action">
        <name>admin_searchmanager_save</name>
        <full_name>admin_searchmanager_save</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="270" package="com\wolfnet\wordpress\action">
        <name>admin_searchmanager_delete</name>
        <full_name>admin_searchmanager_delete</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="285" package="com\wolfnet\wordpress\action">
        <name>content_header</name>
        <full_name>content_header</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="294" package="com\wolfnet\wordpress\action">
        <name>content_footer</name>
        <full_name>content_footer</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="304" package="com\wolfnet\wordpress\action">
        <name>statusSuccess</name>
        <full_name>statusSuccess</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="315" package="com\wolfnet\wordpress\action">
        <name>statusNotFound</name>
        <full_name>statusNotFound</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="321" package="com\wolfnet\wordpress\action">
        <name>statusNotAuthorized</name>
        <full_name>statusNotAuthorized</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="340" package="com\wolfnet\wordpress\action">
        <name>getListingService</name>
        <full_name>getListingService</full_name>
        <docblock line="334">
          <description>GETTER:  This method is a getter for the listingService property.</description>
          <long-description></long-description>
          <tag line="334" name="return" description="" type="\com_wolfnet_wordpress_listing_service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="353" package="com\wolfnet\wordpress\action">
        <name>setListingService</name>
        <full_name>setListingService</full_name>
        <docblock line="346">
          <description>SETTER:  This method is a setter for the listingService property.</description>
          <long-description></long-description>
          <tag line="346" name="param" description="" type="\com_wolfnet_wordpress_listing_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
          <tag line="346" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="353">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_listing_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="365" package="com\wolfnet\wordpress\action">
        <name>getSearchService</name>
        <full_name>getSearchService</full_name>
        <docblock line="359">
          <description>GETTER:  This method is a getter for the searchService property.</description>
          <long-description></long-description>
          <tag line="359" name="return" description="" type="\com_wolfnet_wordpress_search_service">
            <type by_reference="false">\com_wolfnet_wordpress_search_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="378" package="com\wolfnet\wordpress\action">
        <name>setSearchService</name>
        <full_name>setSearchService</full_name>
        <docblock line="371">
          <description>SETTER:  This method is a setter for the searchService property.</description>
          <long-description></long-description>
          <tag line="371" name="param" description="" type="\com_wolfnet_wordpress_search_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_search_service</type>
          </tag>
          <tag line="371" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="378">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_search_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="390" package="com\wolfnet\wordpress\action">
        <name>getListingGridOptionsView</name>
        <full_name>getListingGridOptionsView</full_name>
        <docblock line="384">
          <description>GETTER:  This method is a getter for the listingGridOptionsView property.</description>
          <long-description></long-description>
          <tag line="384" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="403" package="com\wolfnet\wordpress\action">
        <name>setListingGridOptionsView</name>
        <full_name>setListingGridOptionsView</full_name>
        <docblock line="396">
          <description>SETTER:  This method is a setter for the listingGridOptionsView property.</description>
          <long-description></long-description>
          <tag line="396" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$service">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="396" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="403">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="415" package="com\wolfnet\wordpress\action">
        <name>getFeaturedListingsOptionsView</name>
        <full_name>getFeaturedListingsOptionsView</full_name>
        <docblock line="409">
          <description>GETTER: This method is a getter for the featuredListingsOptionsView property.</description>
          <long-description></long-description>
          <tag line="409" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="428" package="com\wolfnet\wordpress\action">
        <name>setFeaturedListingsOptionsView</name>
        <full_name>setFeaturedListingsOptionsView</full_name>
        <docblock line="421">
          <description>SETTER: This method is a setter for the featuredListingsOptionsView property.</description>
          <long-description></long-description>
          <tag line="421" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="421" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="428">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="440" package="com\wolfnet\wordpress\action">
        <name>getQuickSearchOptionsView</name>
        <full_name>getQuickSearchOptionsView</full_name>
        <docblock line="434">
          <description>GETTER:  This method is a getter for the propertyListOptionsView property.</description>
          <long-description></long-description>
          <tag line="434" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="453" package="com\wolfnet\wordpress\action">
        <name>setQuickSearchOptionsView</name>
        <full_name>setQuickSearchOptionsView</full_name>
        <docblock line="446">
          <description>SETTER:  This method is a setter for the propertyListOptionsView property.</description>
          <long-description></long-description>
          <tag line="446" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="446" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="453">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="465" package="com\wolfnet\wordpress\action">
        <name>getEnqueueResourcesAction</name>
        <full_name>getEnqueueResourcesAction</full_name>
        <docblock line="459">
          <description>GETTER:  This method is a getter for the enqueueResourcesAction property.</description>
          <long-description></long-description>
          <tag line="459" name="return" description="" type="\com_wolfnet_wordpress_action_enqueueResources">
            <type by_reference="false">\com_wolfnet_wordpress_action_enqueueResources</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="478" package="com\wolfnet\wordpress\action">
        <name>setEnqueueResourcesAction</name>
        <full_name>setEnqueueResourcesAction</full_name>
        <docblock line="471">
          <description>SETTER:  This method is a setter for the enqueueResourcesAction property.</description>
          <long-description></long-description>
          <tag line="471" name="param" description="" type="\com_wolfnet_wordpress_action_enqueueResources" variable="$action">
            <type by_reference="false">\com_wolfnet_wordpress_action_enqueueResources</type>
          </tag>
          <tag line="471" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="478">
          <name>$action</name>
          <default></default>
          <type>\com_wolfnet_wordpress_action_enqueueResources</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/action/manageRewritePages.php</error>
      <error line="150" code="50010">No DocBlock was found for method admin_shortcodebuilder_options_featured()</error>
      <error line="173" code="50010">No DocBlock was found for method admin_shortcodebuilder_options_grid()</error>
      <error line="201" code="50010">No DocBlock was found for method admin_shortcodebuilder_options_list()</error>
      <error line="207" code="50010">No DocBlock was found for method admin_shortcodebuilder_options_quicksearch()</error>
      <error line="224" code="50010">No DocBlock was found for method admin_shortcodebuilder_saved_search()</error>
      <error line="235" code="50010">No DocBlock was found for method admin_searchmanager_get()</error>
      <error line="255" code="50010">No DocBlock was found for method admin_searchmanager_save()</error>
      <error line="270" code="50010">No DocBlock was found for method admin_searchmanager_delete()</error>
      <error line="285" code="50010">No DocBlock was found for method content_header()</error>
      <error line="294" code="50010">No DocBlock was found for method content_footer()</error>
      <error line="304" code="50010">No DocBlock was found for method statusSuccess()</error>
      <error line="315" code="50010">No DocBlock was found for method statusNotFound()</error>
      <error line="321" code="50010">No DocBlock was found for method statusNotAuthorized()</error>
      <error line="396" code="50014">Name of argument $view does not match with the DocBlock's name $service in setListingGridOptionsView()</error>
      <notice line="396" code="50013">Parameter $service could not be found in setListingGridOptionsView()</notice>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/action/registerCustomPostTypes.php" hash="baabc0b84ecc1fd1c19e8c151530ae02" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\action">
      <extends>\com_greentiedev_wppf_action_action</extends>
      <name>com_wolfnet_wordpress_action_registerCustomPostTypes</name>
      <full_name>\com_wolfnet_wordpress_action_registerCustomPostTypes</full_name>
      <docblock line="3">
        <description>This action is responsible for enqueuing any resources such as JavaScript and CSS that are
needed for any code generated by the plugin in public ares of the site.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="action"/>
        <tag line="3" name="title" description="registerCustomPostTypes.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_action_action"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <constant namespace="global" line="35" package="com\wolfnet\wordpress\action">
        <name>WOLFNET_SEARCH_POST</name>
        <full_name>WOLFNET_SEARCH_POST</full_name>
        <value>'wolfnet_search'</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="com\wolfnet\wordpress\action">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="40">
          <description>This method is executed by the ActionManager when any hooks that this action is registered to
are encountered.</description>
          <long-description>&lt;p&gt;It is currently handling the following resources: wolfnet.min.js,
jquery.filmStrip.min.js, and wolfnet.min.css.&lt;/p&gt;</long-description>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="com\wolfnet\wordpress\action">
        <name>searchPostMetabox</name>
        <full_name>searchPostMetabox</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="com\wolfnet\wordpress\action">
        <name>searchPostMetaboxOutput</name>
        <full_name>searchPostMetaboxOutput</full_name>
        <argument line="97">
          <name>$post</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/action/registerCustomPostTypes.php</error>
      <error line="84" code="50010">No DocBlock was found for method searchPostMetabox()</error>
      <error line="97" code="50010">No DocBlock was found for method searchPostMetaboxOutput()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/action/registerRewriteRules.php" hash="7ea8586f356322f3bc5ab89a3bd6e1d0" package="Default">
    <class final="false" abstract="false" namespace="global" line="29" package="com\wolfnet\wordpress\action">
      <extends>\com_greentiedev_wppf_action_action</extends>
      <name>com_wolfnet_wordpress_action_registerRewriteRules</name>
      <full_name>\com_wolfnet_wordpress_action_registerRewriteRules</full_name>
      <docblock line="3">
        <description>This action is responsible for creating the plugin admin pages within the WordPress admin.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="action"/>
        <tag line="3" name="title" description="registerRewriteRules.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_action_action"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="com\wolfnet\wordpress\action">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="36">
          <description>This method is executed by the ActionManager when any hooks that this action is registered to
are encountered.</description>
          <long-description></long-description>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/action/registerRewriteRules.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/action/registerWidgets.php" hash="4f354aa3ff7e5e533b44bfe49642df98" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\action">
      <extends>\com_greentiedev_wppf_action_action</extends>
      <name>com_wolfnet_wordpress_action_registerWidgets</name>
      <full_name>\com_wolfnet_wordpress_action_registerWidgets</full_name>
      <docblock line="3">
        <description>This action is responsible for registering any widgets the plugin makes available.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="action"/>
        <tag line="3" name="title" description="registerWidgets.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_action_action"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="com\wolfnet\wordpress\action">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="35">
          <description>This method is executed by the ActionManager when any hooks that this action is registered to
are encountered.</description>
          <long-description></long-description>
          <tag line="35" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/action/registerWidgets.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/admin/pluginInstructionsView.php" hash="3544d75032a8755ee1fb7ceb8b30a370" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\wolfnet\wordpress\admin">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_admin_pluginInstructionsView</name>
      <full_name>\com_wolfnet_wordpress_admin_pluginInstructionsView</full_name>
      <docblock line="3">
        <description>This view is responsible for displaying the plugin admin page.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="admin"/>
        <tag line="3" name="title" description="pluginInstructionsView.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_view"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="39">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="39" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="48" namespace="global" package="Default">
        <name>$pluginUrl</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="com\wolfnet\wordpress\admin">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="com\wolfnet\wordpress\admin">
        <name>render</name>
        <full_name>render</full_name>
        <argument line="61">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="com\wolfnet\wordpress\admin">
        <name>getPluginUrl</name>
        <full_name>getPluginUrl</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="com\wolfnet\wordpress\admin">
        <name>setPluginUrl</name>
        <full_name>setPluginUrl</full_name>
        <argument line="76">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/admin/pluginInstructionsView.php</error>
      <error line="48" code="50018">No DocBlock was found for property $pluginUrl</error>
      <error line="53" code="50010">No DocBlock was found for method __construct()</error>
      <error line="61" code="50010">No DocBlock was found for method render()</error>
      <error line="70" code="50010">No DocBlock was found for method getPluginUrl()</error>
      <error line="76" code="50010">No DocBlock was found for method setPluginUrl()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/admin/pluginSettingsView.php" hash="e5e0f516798623728157654dcd76ca84" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\wolfnet\wordpress\admin">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_admin_pluginSettingsView</name>
      <full_name>\com_wolfnet_wordpress_admin_pluginSettingsView</full_name>
      <docblock line="3">
        <description>This view is responsible for displaying the plugin admin page.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="admin"/>
        <tag line="3" name="title" description="pluginSettingsView.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_view"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="39">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="39" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="global" package="Default">
        <name>$optionManager</name>
        <default></default>
        <docblock line="47">
          <description>This property holds a reference to the OptionManager object.</description>
          <long-description></long-description>
          <tag line="47" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="com\wolfnet\wordpress\admin">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="com\wolfnet\wordpress\admin">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="66">
          <description>This method establishes variable values which will be used by the template when it is render,
then the data is passed to to inharited render method.</description>
          <long-description></long-description>
          <tag line="66" name="param" description="An associative array of data for the template. Each array key will be&#10;                       transformed into a variable." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="66" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="com\wolfnet\wordpress\admin">
        <name>getOptionManager</name>
        <full_name>getOptionManager</full_name>
        <docblock line="88">
          <description>GETTER: This method is a getter for the optionManager property.</description>
          <long-description></long-description>
          <tag line="88" name="return" description="" type="\com_greentiedev_wppf_option_manager">
            <type by_reference="false">\com_greentiedev_wppf_option_manager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="com\wolfnet\wordpress\admin">
        <name>setOptionManager</name>
        <full_name>setOptionManager</full_name>
        <docblock line="100">
          <description>SETTER: This method is a setter for the optionManager property.</description>
          <long-description></long-description>
          <tag line="100" name="param" description="" type="\com_greentiedev_wppf_option_manager" variable="$om">
            <type by_reference="false">\com_greentiedev_wppf_option_manager</type>
          </tag>
          <tag line="100" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$om</name>
          <default></default>
          <type>\com_greentiedev_wppf_option_manager</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/admin/pluginSettingsView.php</error>
      <error line="58" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/admin/searchManagerView.php" hash="b6d6823bd2f88bb10ed57ddbcb171bcd" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\admin">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_admin_searchManagerView</name>
      <full_name>\com_wolfnet_wordpress_admin_searchManagerView</full_name>
      <docblock line="3">
        <description>This view is responsible for displaying the plugin admin page.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="admin"/>
        <tag line="3" name="title" description="searchManagerView.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_view"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="38">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="38" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="47" namespace="global" package="Default">
        <name>$settingsService</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="50" namespace="global" package="Default">
        <name>$pluginUrl</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="com\wolfnet\wordpress\admin">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="com\wolfnet\wordpress\admin">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="63">
          <description>This method establishes variable values which will be used by the template when it is render,
then the data is passed to to inharited render method.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="An associative array of data for the template. Each array key will be&#10;                       transformed into a variable." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="63" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="com\wolfnet\wordpress\admin">
        <name>getSettingsService</name>
        <full_name>getSettingsService</full_name>
        <docblock line="94">
          <description>GETTER: This method is a getter for the settingsService property.</description>
          <long-description></long-description>
          <tag line="94" name="return" description="" type="\com_wolfnet_wordpress_settings_service">
            <type by_reference="false">\com_wolfnet_wordpress_settings_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="com\wolfnet\wordpress\admin">
        <name>setSettingsService</name>
        <full_name>setSettingsService</full_name>
        <docblock line="106">
          <description>SETTER: This method is a setter for the settingsService property.</description>
          <long-description></long-description>
          <tag line="106" name="param" description="" type="\com_wolfnet_wordpress_settings_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_settings_service</type>
          </tag>
          <tag line="106" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_settings_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="com\wolfnet\wordpress\admin">
        <name>getSearchService</name>
        <full_name>getSearchService</full_name>
        <docblock line="119">
          <description>GETTER: This method is a getter for the searchService property.</description>
          <long-description></long-description>
          <tag line="119" name="return" description="" type="\com_wolfnet_wordpress_search_service">
            <type by_reference="false">\com_wolfnet_wordpress_search_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="com\wolfnet\wordpress\admin">
        <name>setSearchService</name>
        <full_name>setSearchService</full_name>
        <docblock line="131">
          <description>SETTER: This method is a setter for the searchService property.</description>
          <long-description></long-description>
          <tag line="131" name="param" description="" type="\com_wolfnet_wordpress_search_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_search_service</type>
          </tag>
          <tag line="131" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_search_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="com\wolfnet\wordpress\admin">
        <name>getPluginUrl</name>
        <full_name>getPluginUrl</full_name>
        <docblock line="144">
          <description>GETTER: This method is a getter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="144" name="return" description="The absolute URL to this plugin's directory." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="com\wolfnet\wordpress\admin">
        <name>setPluginUrl</name>
        <full_name>setPluginUrl</full_name>
        <docblock line="156">
          <description>SETTER: This method is a setter for the pluginUrl property.</description>
          <long-description></long-description>
          <tag line="156" name="param" description="The absolute URL to this plugin's directory." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/admin/searchManagerView.php</error>
      <error line="47" code="50018">No DocBlock was found for property $settingsService</error>
      <error line="50" code="50018">No DocBlock was found for property $pluginUrl</error>
      <error line="55" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/admin/template/invalidProductKey.php" hash="c5c188dec1f5a6f38f5de9f9e1d19f7c" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/admin/template/invalidProductKey.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/admin/template/pluginInstructions.php" hash="8e5665e920bae3829d0d106e9fbe2690" package="com\wolfnet\wordpress\admin\template">
    <docblock line="3">
      <description>This is an HTML template file for the Plugin Settings page in the WordPress admin.</description>
      <long-description>&lt;p&gt;This file
should ideally contain very little PHP.&lt;/p&gt;</long-description>
      <tag line="3" name="package" description="com.wolfnet.wordpress"/>
      <tag line="3" name="subpackage" description="admin.template"/>
      <tag line="3" name="title" description="pluginInstructions.php"/>
      <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
      <tag line="3" name="version" description="1.0"/>
      <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
    </docblock>
    <function namespace="global" line="30" package="com\wolfnet\wordpress\admin\template">
      <name>wolfnet_print_thumbnail</name>
      <full_name>\wolfnet_print_thumbnail</full_name>
      <argument line="30">
        <name>$img</name>
        <default></default>
        <type/>
      </argument>
      <argument line="30">
        <name>$imgdir</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="30" code="50009">No DocBlock was found for function \wolfnet_print_thumbnail()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/admin/template/pluginSettings.php" hash="1970b0af647a40cb9c8eaeb955d3cdda" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/admin/template/pluginSettings.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/admin/template/searchManager.php" hash="d18f996bb15a3968ce90f97c824023b5" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/admin/template/searchManager.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/branding/dao.php" hash="6bc040ba1a59abdae4b117d388edaa09" package="Default">
    <class final="false" abstract="false" namespace="global" line="34" package="com\wolfnet\wordpress\listing\branding">
      <extends>\com_greentiedev_wppf_abstract_dao</extends>
      <implements>\com_greentiedev_wppf_interface_iDao</implements>
      <name>com_wolfnet_wordpress_listing_branding_dao</name>
      <full_name>\com_wolfnet_wordpress_listing_branding_dao</full_name>
      <docblock line="3">
        <description>This class is the Listing Branding DAO (Data Access Object) and is responsible for translating
the incoming and outgoing data to and from the Listing Branding Entity object.</description>
        <long-description>&lt;p&gt;This object should
be replaced in the event that the method for data i/o is changed.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing.branding"/>
        <tag line="3" name="title" description="dao.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_dao"/>
        <tag line="3" name="implements" description="com_greentiedev_wpff_interface_iDao"/>
        <tag line="3" name="singleton" description="True"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="48" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
        <docblock line="42">
          <description>This private static property holds the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="42" name="type" description="com_wolfnet_wordpress_listing_dao"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="57" package="com\wolfnet\wordpress\listing\branding">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="51">
          <description>This static method is used to retrieve the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="51" name="return" description="" type="\com_wolfnet_wordpress_listing_dao">
            <type by_reference="false">\com_wolfnet_wordpress_listing_dao</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="75" package="com\wolfnet\wordpress\listing\branding">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="68">
          <description>This constructor method is private becuase this class is a singleton and can only be retrieved
by statically calling the getInstance method.</description>
          <long-description></long-description>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="com\wolfnet\wordpress\listing\branding">
        <name>findAll</name>
        <full_name>findAll</full_name>
        <docblock line="82">
          <description>This method returns all property listing branding avaiable to this WordPress plugin instance.</description>
          <long-description></long-description>
          <tag line="82" name="return" description="An array of listing Branding objects&#10;                (com_wolfnet_wordpress_listing__branding_entity)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="com\wolfnet\wordpress\listing\branding">
        <name>findById</name>
        <full_name>findById</full_name>
        <docblock line="95">
          <description>This method returns only a single listing branding object based on the primary key that is
passed.</description>
          <long-description></long-description>
          <tag line="95" name="param" description="The primary key of a single listing." type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="95" name="return" description="Listing object with a matching primary key." type="\com_wolfnet_wordpress_listing_entity">
            <type by_reference="false">\com_wolfnet_wordpress_listing_entity</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$id</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="com\wolfnet\wordpress\listing\branding">
        <name>firstItem</name>
        <full_name>firstItem</full_name>
        <docblock line="109">
          <description>This method returns only a single listing branding object based on the primary key that is
passed.</description>
          <long-description></long-description>
          <tag line="109" name="param" description="The primary key of a single listing." type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="109" name="return" description="Listing object with a matching primary key." type="\com_wolfnet_wordpress_listing_entity">
            <type by_reference="false">\com_wolfnet_wordpress_listing_entity</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="com\wolfnet\wordpress\listing\branding">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="130">
          <description>GETTER: This getter method is used to get the data property, which is an inherited property.</description>
          <long-description></long-description>
          <tag line="130" name="return" description="An array of data." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="com\wolfnet\wordpress\listing\branding">
        <name>setData</name>
        <full_name>setData</full_name>
        <docblock line="142">
          <description>SETTER: This setter method is used to set the data property, which is an inherited property.</description>
          <long-description></long-description>
          <tag line="142" name="param" description="An array of data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="142" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/branding/dao.php</error>
      <notice line="109" code="50013">Parameter $id could not be found in firstItem()</notice>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/branding/entity.php" hash="7266a6c66dbac8fa0173e32eb3c63452" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\wolfnet\wordpress\listing\branding">
      <extends>\com_greentiedev_wppf_abstract_entity</extends>
      <implements>\com_greentiedev_wppf_interface_iEntity</implements>
      <name>com_wolfnet_wordpress_listing_branding_entity</name>
      <full_name>\com_wolfnet_wordpress_listing_branding_entity</full_name>
      <docblock line="3">
        <description>This class is an entity bean for the Listing Branding data.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing.branding"/>
        <tag line="3" name="title" description="entity.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_entity"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iEntity"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Default">
        <name>$brokerLogo</name>
        <default>''</default>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
          <tag line="39" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="global" package="Default">
        <name>$content</name>
        <default>''</default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag line="45" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="62" package="com\wolfnet\wordpress\listing\branding">
        <name>setMemento</name>
        <full_name>setMemento</full_name>
        <docblock line="53">
          <description>This method is used to set instance data for the entity.</description>
          <long-description>&lt;p&gt;Though it is public by necessity,
this method should not be accessed by any object other than the listingBrandingDao.
( see Memento Design Pattern )&lt;/p&gt;</long-description>
          <tag line="53" name="param" description="The primary key of a single listing." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="com\wolfnet\wordpress\listing\branding">
        <name>getMemento</name>
        <full_name>getMemento</full_name>
        <docblock line="69">
          <description>This method is used to get instance data from the entity.</description>
          <long-description>&lt;p&gt;Though it is public by necessity,
this method should not be accessed by any object other than the listingBrandingDao.
( see Memento Design Pattern )&lt;/p&gt;</long-description>
          <tag line="69" name="return" description="The primary key of a single listing." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="com\wolfnet\wordpress\listing\branding">
        <name>getBrokerLogo</name>
        <full_name>getBrokerLogo</full_name>
        <docblock line="88">
          <description>GETTER: This method is a getter for the brokerLogo property.</description>
          <long-description></long-description>
          <tag line="88" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="com\wolfnet\wordpress\listing\branding">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="100">
          <description>GETTER: This method is a getter for the content property.</description>
          <long-description></long-description>
          <tag line="100" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/branding/entity.php</error>
      <critical line="39" code="50019">No short description for property $brokerLogo</critical>
      <critical line="45" code="50019">No short description for property $content</critical>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/dao.php" hash="d79f569473028a7e44d1018093f43f23" package="Default">
    <class final="false" abstract="false" namespace="global" line="34" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_dao</extends>
      <implements>\com_greentiedev_wppf_interface_iDao</implements>
      <name>com_wolfnet_wordpress_listing_dao</name>
      <full_name>\com_wolfnet_wordpress_listing_dao</full_name>
      <docblock line="3">
        <description>This class is the listingDAO (data access object) and is responsible for translating the incoming
and outgoing data to and from the listingEntity objects.</description>
        <long-description>&lt;p&gt;This object should be replaced in the
event that the method used for data i/o is changed.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="dao.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_dao"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iDao"/>
        <tag line="3" name="singleton" description="True"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="48" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
        <docblock line="42">
          <description>This private static property holds the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="42" name="type" description="com_wolfnet_wordpress_listing_dao"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="71" namespace="global" package="Default">
        <name>$brandingDao</name>
        <default></default>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
          <tag line="68" name="type" description="com_wolfnet_wordpress_listing_branding_dao"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="57" package="com\wolfnet\wordpress\listing">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="51">
          <description>This static method is used to retrieve the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="51" name="return" description="" type="\com_wolfnet_wordpress_listing_dao">
            <type by_reference="false">\com_wolfnet_wordpress_listing_dao</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="83" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="76">
          <description>This constructor method is private becuase this class is a singleton and can only be retrieved
by statically calling the getInstance method.</description>
          <long-description></long-description>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="com\wolfnet\wordpress\listing">
        <name>findAll</name>
        <full_name>findAll</full_name>
        <docblock line="91">
          <description>This method returns all property listings avaiable to this WordPress plugin instance.</description>
          <long-description></long-description>
          <tag line="91" name="return" description="An array of listing objects (com_wolfnet_wordpress_listing_entity)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="com\wolfnet\wordpress\listing">
        <name>findById</name>
        <full_name>findById</full_name>
        <docblock line="122">
          <description>This method returns only a single listing object based on the primary key that is passed.</description>
          <long-description></long-description>
          <tag line="122" name="param" description="The primary key of a single listing." type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="122" name="return" description="Listing object with a matching primary key." type="\com_wolfnet_wordpress_listing_entity">
            <type by_reference="false">\com_wolfnet_wordpress_listing_entity</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$id</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="com\wolfnet\wordpress\listing">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="143">
          <description>GETTER: This getter method is used to get the data property, which is an inherited property.</description>
          <long-description></long-description>
          <tag line="143" name="return" description="An array of data." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="com\wolfnet\wordpress\listing">
        <name>setData</name>
        <full_name>setData</full_name>
        <docblock line="155">
          <description>SETTER: This setter method is used to set the data property, which is an inherited property.</description>
          <long-description></long-description>
          <tag line="155" name="param" description="An array of data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="155" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="com\wolfnet\wordpress\listing">
        <name>getBrandingDao</name>
        <full_name>getBrandingDao</full_name>
        <docblock line="168">
          <description>GETTER: This getter method is used to get the brandingDao property.</description>
          <long-description></long-description>
          <tag line="168" name="return" description="" type="\com_wolfnet_wordpress_listing_branding_dao">
            <type by_reference="false">\com_wolfnet_wordpress_listing_branding_dao</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="187" package="com\wolfnet\wordpress\listing">
        <name>setBrandingDao</name>
        <full_name>setBrandingDao</full_name>
        <docblock line="180">
          <description>SETTER: This setter method is used to set the brandingDao property.</description>
          <long-description></long-description>
          <tag line="180" name="param" description="" type="\com_wolfnet_wordpress_listing_branding_dao" variable="$dao">
            <type by_reference="false">\com_wolfnet_wordpress_listing_branding_dao</type>
          </tag>
          <tag line="180" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$dao</name>
          <default></default>
          <type>\com_wolfnet_wordpress_listing_branding_dao</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/dao.php</error>
      <critical line="68" code="50019">No short description for property $brandingDao</critical>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/entity.php" hash="cb313040d5a83bd7062b37cac14dd603" package="Default">
    <class final="false" abstract="false" namespace="global" line="32" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_entity</extends>
      <implements>\com_greentiedev_wppf_interface_iEntity</implements>
      <name>com_wolfnet_wordpress_listing_entity</name>
      <full_name>\com_wolfnet_wordpress_listing_entity</full_name>
      <docblock line="3">
        <description>This class is the Listing Entity and is a container for listing data.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="entity.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_entity"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iEntity"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Default">
        <name>$property_id</name>
        <default>''</default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="type" description="mixed[string]"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="global" package="Default">
        <name>$property_url</name>
        <default>''</default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag line="47" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="59" namespace="global" package="Default">
        <name>$listing_price</name>
        <default>0</default>
        <docblock line="54">
          <description></description>
          <long-description></long-description>
          <tag line="54" name="type" description="float"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="66" namespace="global" package="Default">
        <name>$agent_listing</name>
        <default>0</default>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
          <tag line="61" name="type" description="boolean"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="73" namespace="global" package="Default">
        <name>$display_address</name>
        <default>''</default>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
          <tag line="68" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="80" namespace="global" package="Default">
        <name>$city</name>
        <default>''</default>
        <docblock line="75">
          <description></description>
          <long-description></long-description>
          <tag line="75" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="87" namespace="global" package="Default">
        <name>$state</name>
        <default>''</default>
        <docblock line="82">
          <description></description>
          <long-description></long-description>
          <tag line="82" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="94" namespace="global" package="Default">
        <name>$thumbnail_url</name>
        <default>''</default>
        <docblock line="89">
          <description></description>
          <long-description></long-description>
          <tag line="89" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="101" namespace="global" package="Default">
        <name>$photo_url</name>
        <default>''</default>
        <docblock line="96">
          <description></description>
          <long-description></long-description>
          <tag line="96" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="108" namespace="global" package="Default">
        <name>$bathroom</name>
        <default>0</default>
        <docblock line="103">
          <description></description>
          <long-description></long-description>
          <tag line="103" name="type" description="numeric"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="115" namespace="global" package="Default">
        <name>$bedrooms</name>
        <default>0</default>
        <docblock line="110">
          <description></description>
          <long-description></long-description>
          <tag line="110" name="type" description="numeric"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="122" namespace="global" package="Default">
        <name>$branding</name>
        <default>0</default>
        <docblock line="117">
          <description></description>
          <long-description></long-description>
          <tag line="117" name="type" description="com_wolfnet_wordpress_listing_branding_entity"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="com\wolfnet\wordpress\listing">
        <name>setMemento</name>
        <full_name>setMemento</full_name>
        <docblock line="127">
          <description>This method is used to set instance data for the entity.</description>
          <long-description>&lt;p&gt;Though it is public by necessity,
this method should not be accessed by any object other than the listingDao.
( see Memento Design Pattern )&lt;/p&gt;</long-description>
          <tag line="127" name="param" description="The primary key of a single listing." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="127" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="com\wolfnet\wordpress\listing">
        <name>getMemento</name>
        <full_name>getMemento</full_name>
        <docblock line="153">
          <description>This method is used to get instance data from the entity.</description>
          <long-description>&lt;p&gt;Though it is public by necessity,
this method should not be accessed by any object other than the listingDao.
( see Memento Design Pattern )&lt;/p&gt;</long-description>
          <tag line="153" name="return" description="The primary key of a single listing." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="187" package="com\wolfnet\wordpress\listing">
        <name>getLocation</name>
        <full_name>getLocation</full_name>
        <docblock line="180">
          <description>This method combines several properties into a single location string.</description>
          <long-description>&lt;p&gt;This is done here to
hold this logic in a centralized place.&lt;/p&gt;</long-description>
          <tag line="180" name="return" description="Combined location information in a single string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="com\wolfnet\wordpress\listing">
        <name>getBedsAndBaths</name>
        <full_name>getBedsAndBaths</full_name>
        <docblock line="199">
          <description>This method combines the bedroom and bathroom data into a single string for display.</description>
          <long-description></long-description>
          <tag line="199" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$format</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="com\wolfnet\wordpress\listing">
        <name>getFullAddress</name>
        <full_name>getFullAddress</full_name>
        <docblock line="260">
          <description>This method combines all address information into a full address.</description>
          <long-description></long-description>
          <tag line="260" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="295" package="com\wolfnet\wordpress\listing">
        <name>getPropertyId</name>
        <full_name>getPropertyId</full_name>
        <docblock line="289">
          <description>GETTER: This method is a getter for the property_id property.</description>
          <long-description></long-description>
          <tag line="289" name="return" description="" type="\mixed[string]">
            <type by_reference="false">\mixed[string]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="307" package="com\wolfnet\wordpress\listing">
        <name>getPropertyUrl</name>
        <full_name>getPropertyUrl</full_name>
        <docblock line="301">
          <description>GETTER: This method is a getter for the property_url property.</description>
          <long-description></long-description>
          <tag line="301" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="com\wolfnet\wordpress\listing">
        <name>getListingPrice</name>
        <full_name>getListingPrice</full_name>
        <docblock line="313">
          <description>GETTER: This method is a getter for the listing_price property.</description>
          <long-description>&lt;p&gt;In addition this method
formats any numeric strings for display.&lt;/p&gt;</long-description>
          <tag line="313" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="337" package="com\wolfnet\wordpress\listing">
        <name>getAgentListing</name>
        <full_name>getAgentListing</full_name>
        <docblock line="331">
          <description>GETTER: This method is a getter for the agent_listing property.</description>
          <long-description></long-description>
          <tag line="331" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="349" package="com\wolfnet\wordpress\listing">
        <name>getDisplayAddress</name>
        <full_name>getDisplayAddress</full_name>
        <docblock line="343">
          <description>GETTER: This method is a getter for the display_address property.</description>
          <long-description></long-description>
          <tag line="343" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="361" package="com\wolfnet\wordpress\listing">
        <name>getCity</name>
        <full_name>getCity</full_name>
        <docblock line="355">
          <description>GETTER: This method is a getter for the city property.</description>
          <long-description></long-description>
          <tag line="355" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="373" package="com\wolfnet\wordpress\listing">
        <name>getState</name>
        <full_name>getState</full_name>
        <docblock line="367">
          <description>GETTER: This method is a getter for the state property.</description>
          <long-description></long-description>
          <tag line="367" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="385" package="com\wolfnet\wordpress\listing">
        <name>getThumbnailUrl</name>
        <full_name>getThumbnailUrl</full_name>
        <docblock line="379">
          <description>GETTER: This method is a getter for the thumbnail_url property.</description>
          <long-description></long-description>
          <tag line="379" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="397" package="com\wolfnet\wordpress\listing">
        <name>getPhotoUrl</name>
        <full_name>getPhotoUrl</full_name>
        <docblock line="391">
          <description>GETTER: This method is a getter for the thumbnail_url property.</description>
          <long-description></long-description>
          <tag line="391" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="409" package="com\wolfnet\wordpress\listing">
        <name>getBathroom</name>
        <full_name>getBathroom</full_name>
        <docblock line="403">
          <description>GETTER: This method is a getter for the bathroom property.</description>
          <long-description></long-description>
          <tag line="403" name="return" description="" type="\numeric">
            <type by_reference="false">\numeric</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="421" package="com\wolfnet\wordpress\listing">
        <name>getBedrooms</name>
        <full_name>getBedrooms</full_name>
        <docblock line="415">
          <description>GETTER: This method is a getter for the bedrooms property.</description>
          <long-description></long-description>
          <tag line="415" name="return" description="" type="\numeric">
            <type by_reference="false">\numeric</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="433" package="com\wolfnet\wordpress\listing">
        <name>getBranding</name>
        <full_name>getBranding</full_name>
        <docblock line="427">
          <description>GETTER: This method is a getter for the branding property.</description>
          <long-description></long-description>
          <tag line="427" name="return" description="" type="\com_wolfnet_wordpress_listing_branding_entity">
            <type by_reference="false">\com_wolfnet_wordpress_listing_branding_entity</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/entity.php</error>
      <critical line="40" code="50019">No short description for property $property_id</critical>
      <critical line="47" code="50019">No short description for property $property_url</critical>
      <critical line="54" code="50019">No short description for property $listing_price</critical>
      <critical line="61" code="50019">No short description for property $agent_listing</critical>
      <critical line="68" code="50019">No short description for property $display_address</critical>
      <critical line="75" code="50019">No short description for property $city</critical>
      <critical line="82" code="50019">No short description for property $state</critical>
      <critical line="89" code="50019">No short description for property $thumbnail_url</critical>
      <critical line="96" code="50019">No short description for property $photo_url</critical>
      <critical line="103" code="50019">No short description for property $bathroom</critical>
      <critical line="110" code="50019">No short description for property $bedrooms</critical>
      <critical line="117" code="50019">No short description for property $branding</critical>
      <error line="199" code="50015">Argument $format is missing from the Docblock of getBedsAndBaths()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/featuredListingsOptionsView.php" hash="8567310537dfd2ab5391e19d0c9831fc" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_listing_featuredListingsOptionsView</name>
      <full_name>\com_wolfnet_wordpress_listing_featuredListingsOptionsView</full_name>
      <docblock line="3">
        <description>This view is repsondible for displaying the Film Strip Widget Options in the WordPress admin.</description>
        <long-description>&lt;p&gt;Each widget instance has its own instance of this view.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="featuredListingsOptionsView.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_view"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="39">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="39" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="50">
          <description>This constructor method simply assigns the template property with a path to the HTML template
for this view based on the view files location.</description>
          <long-description></long-description>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="com\wolfnet\wordpress\listing">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="65">
          <description>This method establishes variable values which will be used by the template when it is render,
then the data is passed to to inharited render method.</description>
          <long-description></long-description>
          <tag line="65" name="param" description="An associative array of data for the template. Each array key will be&#10;                       transformed into a variable." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="65" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/featuredListingsOptionsView.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/featuredListingsShortcode.php" hash="f619ca87871079995e37e5682e2e7242" package="Default">
    <class final="false" abstract="false" namespace="global" line="33" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_shortcode_shortcode</extends>
      <name>com_wolfnet_wordpress_listing_featuredListingsShortcode</name>
      <full_name>\com_wolfnet_wordpress_listing_featuredListingsShortcode</full_name>
      <docblock line="3">
        <description>This is the filmStripWidget object.</description>
        <long-description>&lt;p&gt;This object inherites from the base WP_Widget object and
defines the display and functionality of this specific widget.&lt;/p&gt;</long-description>
        <tag line="3" name="see" description="\global\http://codex.wordpress.org/Widgets_API" refers="\global\http://codex.wordpress.org/Widgets_API"/>
        <tag line="3" name="see" description="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php" refers="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php"/>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="featuredListingsShortcode.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_shortcode_shortcode"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$tag</name>
        <default>'WolfNetFeaturedListings,woflnetfeaturedlistings,WOFLNETFEATUREDLISTINGS,wnt_featured'</default>
        <docblock line="40">
          <description>This property holds the tag name which is used to identify shorcodes when they are encountered
in Posts and Pages.</description>
          <long-description></long-description>
          <tag line="40" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="global" package="Default">
        <name>$listingService</name>
        <default></default>
        <docblock line="50">
          <description>This property holds a reference to the Listing Service object.</description>
          <long-description></long-description>
          <tag line="50" name="type" description="com_wolfnet_wordpress_listing_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="65" namespace="global" package="Default">
        <name>$featuredListingsView</name>
        <default></default>
        <docblock line="59">
          <description>This property holds an instance of the Featured Listings View object.</description>
          <long-description></long-description>
          <tag line="59" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="global" package="Default">
        <name>$attributes</name>
        <default>array('title' =&gt; '', 'direction' =&gt; 'left', 'autoplay' =&gt; true, 'speed' =&gt; 5, 'ownertype' =&gt; 'agent_broker', 'maxresults' =&gt; 50)</default>
        <docblock line="68">
          <description>This property holds an array of different options that are available for each widget instance.</description>
          <long-description></long-description>
          <tag line="68" name="type" description="array"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="com\wolfnet\wordpress\listing">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="86">
          <description>This method is called whenever an instance of the shortcode is encountered in a post or page.</description>
          <long-description></long-description>
          <tag line="86" name="param" description="" type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="86" name="param" description="" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$attr</name>
          <default></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="com\wolfnet\wordpress\listing">
        <name>getListingService</name>
        <full_name>getListingService</full_name>
        <docblock line="111">
          <description>GETTER:  This method is a getter for the listingService property.</description>
          <long-description></long-description>
          <tag line="111" name="return" description="" type="\com_wolfnet_wordpress_listing_service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="com\wolfnet\wordpress\listing">
        <name>setListingService</name>
        <full_name>setListingService</full_name>
        <docblock line="123">
          <description>SETTER:  This method is a setter for the listingService property.</description>
          <long-description></long-description>
          <tag line="123" name="param" description="" type="\com_wolfnet_wordpress_listing_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
          <tag line="123" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_listing_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="com\wolfnet\wordpress\listing">
        <name>getFeaturedListingsView</name>
        <full_name>getFeaturedListingsView</full_name>
        <docblock line="136">
          <description>GETTER:  This method is a getter for the featuredListingsView property.</description>
          <long-description></long-description>
          <tag line="136" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="com\wolfnet\wordpress\listing">
        <name>setFeaturedListingsView</name>
        <full_name>setFeaturedListingsView</full_name>
        <docblock line="148">
          <description>SETTER:  This method is a setter for the featuredListingsView property.</description>
          <long-description></long-description>
          <tag line="148" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="148" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/featuredListingsShortcode.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/featuredListingsView.php" hash="3e819b69700bf53776402341bf24237b" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_listing_featuredListingsView</name>
      <full_name>\com_wolfnet_wordpress_listing_featuredListingsView</full_name>
      <docblock line="3">
        <description>This view is responsible for displaying the Listings Film Strip, which is a widget component.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="featuredListingsView.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_view"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="38">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="38" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="global" package="Default">
        <name>$listingView</name>
        <default></default>
        <docblock line="47">
          <description>This property holds a reference to the listing view.</description>
          <long-description></long-description>
          <tag line="47" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="58">
          <description>This constructor method simply assigns the template property with a path to the HTML template
for this view based on the view files location.</description>
          <long-description></long-description>
          <tag line="58" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="com\wolfnet\wordpress\listing">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="73">
          <description>This method overwrites the inherited render method and provides some additional functionality.</description>
          <long-description>&lt;p&gt;Specifically it extracts the listings data from the $data param and passes it to the
renderListings method. This separates the concerns of rendering the film strip from rendering
indevidual listings.&lt;/p&gt;</long-description>
          <tag line="73" name="param" description="Associative array of data to be injected into the template file." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="73" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="119" package="com\wolfnet\wordpress\listing">
        <name>renderListings</name>
        <full_name>renderListings</full_name>
        <docblock line="110">
          <description>This method accepts an array of listing objects which is loops over and creates new instances
of the listingView object for each.</description>
          <long-description>&lt;p&gt;The listings are then rendered individually and combined
in a string which is returned.&lt;/p&gt;</long-description>
          <tag line="110" name="param" description="An array of listing objects." type="array" variable="$listings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="110" name="return" description="Rendered listing content." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$listings</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="com\wolfnet\wordpress\listing">
        <name>getListingView</name>
        <full_name>getListingView</full_name>
        <docblock line="132">
          <description>GETTER: This method is a getter for the listingView property.</description>
          <long-description></long-description>
          <tag line="132" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="com\wolfnet\wordpress\listing">
        <name>setListingView</name>
        <full_name>setListingView</full_name>
        <docblock line="144">
          <description>SETTER: This method is a setter for the listingView property.</description>
          <long-description></long-description>
          <tag line="144" name="type" description="com_greentiedev_wppf_interface_iView  $view"/>
          <tag line="144" name="return" description="" type="\view">
            <type by_reference="false">\view</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/featuredListingsView.php</error>
      <error line="144" code="50015">Argument $view is missing from the Docblock of setListingView()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/featuredListingsWidget.php" hash="2169789686ce3bd94368d677d0165ed1" package="Default">
    <class final="false" abstract="false" namespace="global" line="33" package="com\wolfnet\wordpress\listing">
      <extends>\com_wolfnet_wordpress_abstract_widget</extends>
      <name>com_wolfnet_wordpress_listing_featuredListingsWidget</name>
      <full_name>\com_wolfnet_wordpress_listing_featuredListingsWidget</full_name>
      <docblock line="3">
        <description>This is the featuredListingsWidget object.</description>
        <long-description>&lt;p&gt;This object inherites from the base WP_Widget object and
defines the display and functionality of this specific widget.&lt;/p&gt;</long-description>
        <tag line="3" name="see" description="\global\http://codex.wordpress.org/Widgets_API" refers="\global\http://codex.wordpress.org/Widgets_API"/>
        <tag line="3" name="see" description="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php" refers="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php"/>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="featuredListingsWidget.php"/>
        <tag line="3" name="extends" description="com_wolfnet_wordpress_abstract_widget"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="46" namespace="global" package="Default">
        <name>$options</name>
        <default>array('title' =&gt; '', 'description' =&gt; 'Configure a scrollable list to feature your properties.', 'direction' =&gt; 'left', 'autoplay' =&gt; true, 'speed' =&gt; 5, 'ownertype' =&gt; 'agent_broker', 'maxresults' =&gt; 50)</default>
        <docblock line="40">
          <description>This property holds an array of different options that are available for each widget instance.</description>
          <long-description></long-description>
          <tag line="40" name="type" description="array"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="63" namespace="global" package="Default">
        <name>$controls</name>
        <default>array('width' =&gt; '300px')</default>
        <docblock line="57">
          <description>This property holds an array of options for the widget admin form.</description>
          <long-description></long-description>
          <tag line="57" name="type" description="array"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="74" namespace="global" package="Default">
        <name>$listingService</name>
        <default></default>
        <docblock line="68">
          <description>This property holds a reference to the Listing Service object.</description>
          <long-description></long-description>
          <tag line="68" name="type" description="com_wolfnet_wordpress_listing_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="83" namespace="global" package="Default">
        <name>$featuredListingsView</name>
        <default></default>
        <docblock line="77">
          <description>This property holds an instance of the Featured Listings View object.</description>
          <long-description></long-description>
          <tag line="77" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="92" namespace="global" package="Default">
        <name>$featuredListingsOptionsView</name>
        <default></default>
        <docblock line="86">
          <description>This property holds an instance of the Featured Listings Options View object.</description>
          <long-description></long-description>
          <tag line="86" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="97">
          <description>This constructor method passes some key information up to the parent classes and eventionally
the information gets registered with the WordPress application.</description>
          <long-description></long-description>
          <tag line="97" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="com\wolfnet\wordpress\listing">
        <name>widget</name>
        <full_name>widget</full_name>
        <docblock line="116">
          <description>This method is the primary output for the widget.</description>
          <long-description>&lt;p&gt;This is the information the end user of the
site will see.&lt;/p&gt;</long-description>
          <tag line="116" name="param" description="An array of arguments passed to a widget." type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="116" name="param" description="An array of widget instance data" type="array" variable="$instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="116" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
        <argument line="125">
          <name>$instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="152" package="com\wolfnet\wordpress\listing">
        <name>form</name>
        <full_name>form</full_name>
        <docblock line="144">
          <description>This method is responsible for display of the widget instance form which allows configuration
of each widget instance in the WordPress admin.</description>
          <long-description></long-description>
          <tag line="144" name="param" description="An array of widget instance data" type="array" variable="$instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="144" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="com\wolfnet\wordpress\listing">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="162">
          <description>This method is responsible for saving any data that comes from the widget instance form.</description>
          <long-description></long-description>
          <tag line="162" name="param" description="An array of widget instance data from after the form submit" type="array" variable="$new_instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="162" name="param" description="An array of widget instance data from before the form submit" type="array" variable="$old_instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="162" name="return" description="An array of data that needs to be saved to the database." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$new_instance</name>
          <default></default>
          <type/>
        </argument>
        <argument line="170">
          <name>$old_instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="190" package="com\wolfnet\wordpress\listing">
        <name>getListingService</name>
        <full_name>getListingService</full_name>
        <docblock line="184">
          <description>GETTER: This method is a getter for the listingService property.</description>
          <long-description></long-description>
          <tag line="184" name="return" description="" type="\com_wolfnet_wordpress_listing_service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="com\wolfnet\wordpress\listing">
        <name>setListingService</name>
        <full_name>setListingService</full_name>
        <docblock line="196">
          <description>SETTER: This method is a setter for the listingService property.</description>
          <long-description></long-description>
          <tag line="196" name="param" description="" type="\com_wolfnet_wordpress_listing_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
          <tag line="196" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_listing_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="215" package="com\wolfnet\wordpress\listing">
        <name>getFeaturedListingsView</name>
        <full_name>getFeaturedListingsView</full_name>
        <docblock line="209">
          <description>GETTER: This method is a getter for the featuredListingsView property.</description>
          <long-description></long-description>
          <tag line="209" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="228" package="com\wolfnet\wordpress\listing">
        <name>setFeaturedListingsView</name>
        <full_name>setFeaturedListingsView</full_name>
        <docblock line="221">
          <description>SETTER: This method is a setter for the featuredListingsView property.</description>
          <long-description></long-description>
          <tag line="221" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="221" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="228">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="240" package="com\wolfnet\wordpress\listing">
        <name>getFeaturedListingsOptionsView</name>
        <full_name>getFeaturedListingsOptionsView</full_name>
        <docblock line="234">
          <description>GETTER: This method is a getter for the featuredListingsOptionsView property.</description>
          <long-description></long-description>
          <tag line="234" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="253" package="com\wolfnet\wordpress\listing">
        <name>setFeaturedListingsOptionsView</name>
        <full_name>setFeaturedListingsOptionsView</full_name>
        <docblock line="246">
          <description>SETTER: This method is a setter for the featuredListingsOptionsView property.</description>
          <long-description></long-description>
          <tag line="246" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="246" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/featuredListingsWidget.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/listingGridOptionsView.php" hash="e7bf8e19448ce336208fa3a4de404bf5" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_listing_listingGridOptionsView</name>
      <full_name>\com_wolfnet_wordpress_listing_listingGridOptionsView</full_name>
      <docblock line="3">
        <description>This view is repsondible for displaying the Grid Widget Options in the WordPress admin.</description>
        <long-description>&lt;p&gt;Each widget instance has its own instance of this view.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="listingGridOptionsView.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_view"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="39">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="39" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="50">
          <description>This constructor method simply assigns the template property with a path to the HTML template
for this view based on the view files location.</description>
          <long-description></long-description>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="com\wolfnet\wordpress\listing">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="65">
          <description>This method overwrites the inherited render method and provides some additional functionality.</description>
          <long-description>&lt;p&gt;Specifically it extracts the listings data from the $data param and passes it to the
renderListings method. This separates the concerns of rendering the film strip from rendering
indevidual listings.&lt;/p&gt;</long-description>
          <tag line="65" name="param" description="Associative array of data to be injected into the template file." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/listingGridOptionsView.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/listingGridShortcode.php" hash="fcffc53873ff005c4663b9148390d454" package="Default">
    <class final="false" abstract="false" namespace="global" line="33" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_shortcode_shortcode</extends>
      <name>com_wolfnet_wordpress_listing_listingGridShortcode</name>
      <full_name>\com_wolfnet_wordpress_listing_listingGridShortcode</full_name>
      <docblock line="3">
        <description>This is the filmStripWidget object.</description>
        <long-description>&lt;p&gt;This object inherites from the base WP_Widget object and
defines the display and functionality of this specific widget.&lt;/p&gt;</long-description>
        <tag line="3" name="see" description="\global\http://codex.wordpress.org/Widgets_API" refers="\global\http://codex.wordpress.org/Widgets_API"/>
        <tag line="3" name="see" description="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php" refers="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php"/>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="listingGridShortcode.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_shortcode_shortcode"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$tag</name>
        <default>'WolfNetListingGrid,wolfnetlistinggrid,WOLFNETLISTINGGRID,wnt_grid'</default>
        <docblock line="40">
          <description>This property holds the tag name which is used to identify shorcodes when they are encountered
in Posts and Pages.</description>
          <long-description></long-description>
          <tag line="40" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="global" package="Default">
        <name>$listingService</name>
        <default></default>
        <docblock line="50">
          <description>This property holds a reference to the Listing Service object.</description>
          <long-description></long-description>
          <tag line="50" name="type" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="65" namespace="global" package="Default">
        <name>$listingGridView</name>
        <default></default>
        <docblock line="59">
          <description>This property holds an instance of the Listing Grid View object.</description>
          <long-description></long-description>
          <tag line="59" name="type" description=""/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="global" package="Default">
        <name>$attributes</name>
        <default>array('title' =&gt; '', 'ownertype' =&gt; 'all', 'maxresults' =&gt; 50)</default>
        <docblock line="68">
          <description>This property holds an array of different options that are available for each widget instance.</description>
          <long-description></long-description>
          <tag line="68" name="type" description="array"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="com\wolfnet\wordpress\listing">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="83">
          <description>This method is called whenever an instance of the shortcode is encountered in a post or page.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="" type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="83" name="param" description="" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$attr</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="com\wolfnet\wordpress\listing">
        <name>getListingService</name>
        <full_name>getListingService</full_name>
        <docblock line="116">
          <description>GETTER:  This method is a getter for the listingService property.</description>
          <long-description></long-description>
          <tag line="116" name="return" description="" type="\com_wolfnet_wordpress_listing_service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="135" package="com\wolfnet\wordpress\listing">
        <name>setListingService</name>
        <full_name>setListingService</full_name>
        <docblock line="128">
          <description>SETTER:  This method is a setter for the listingService property.</description>
          <long-description></long-description>
          <tag line="128" name="param" description="" type="\com_wolfnet_wordpress_listing_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
          <tag line="128" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_listing_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="147" package="com\wolfnet\wordpress\listing">
        <name>getListingGridView</name>
        <full_name>getListingGridView</full_name>
        <docblock line="141">
          <description>GETTER:  This method is a getter for the listingGridView property.</description>
          <long-description></long-description>
          <tag line="141" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="160" package="com\wolfnet\wordpress\listing">
        <name>setListingGridView</name>
        <full_name>setListingGridView</full_name>
        <docblock line="153">
          <description>SETTER:  This method is a setter for the listingGridView property.</description>
          <long-description></long-description>
          <tag line="153" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="153" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/listingGridShortcode.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/listingGridView.php" hash="b6c4b0d55b6fdfdd76f22d43fe826ef6" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_listing_listingGridView</name>
      <full_name>\com_wolfnet_wordpress_listing_listingGridView</full_name>
      <docblock line="3">
        <description>This view is responsible for displaying the Listings Grid, which is a widget component.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="listingGridView.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_view"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="38">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="38" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="com\wolfnet\wordpress\listing">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="49">
          <description>This method overwrites the inherited render method and provides some additional functionality.</description>
          <long-description>&lt;p&gt;Specifically it extracts the listings data from the $data param and passes it to the
renderListings method. This separates the concerns of rendering the film strip from rendering
indevidual listings.&lt;/p&gt;</long-description>
          <tag line="49" name="param" description="Associative array of data to be injected into the template file." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="80" package="com\wolfnet\wordpress\listing">
        <name>renderListings</name>
        <full_name>renderListings</full_name>
        <docblock line="71">
          <description>This method accepts an array of listing objects which is loops over and creates new instances
of the listingView object for each.</description>
          <long-description>&lt;p&gt;The listings are then rendered individually and combined
in a string which is returned.&lt;/p&gt;</long-description>
          <tag line="71" name="param" description="An array of listing objects." type="array" variable="$listings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="71" name="return" description="Rendered listing content." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$listings</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="com\wolfnet\wordpress\listing">
        <name>getListingView</name>
        <full_name>getListingView</full_name>
        <docblock line="93">
          <description>GETTER: This method is a getter for the listingView property.</description>
          <long-description></long-description>
          <tag line="93" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="com\wolfnet\wordpress\listing">
        <name>setListingView</name>
        <full_name>setListingView</full_name>
        <docblock line="105">
          <description>SETTER: This method is a setter for the listingView property.</description>
          <long-description></long-description>
          <tag line="105" name="type" description="com_greentiedev_wppf_interface_iView  $view"/>
          <tag line="105" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="com\wolfnet\wordpress\listing">
        <name>getTemplate</name>
        <full_name>getTemplate</full_name>
        <docblock line="117">
          <description>GETTER: This method is a getter for the listingView property.</description>
          <long-description></long-description>
          <tag line="117" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="com\wolfnet\wordpress\listing">
        <name>setTemplate</name>
        <full_name>setTemplate</full_name>
        <docblock line="129">
          <description>SETTER: This method is a setter for the listingView property.</description>
          <long-description></long-description>
          <tag line="129" name="type" description="string  $template"/>
          <tag line="129" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/listingGridView.php</error>
      <error line="105" code="50015">Argument $view is missing from the Docblock of setListingView()</error>
      <error line="129" code="50015">Argument $template is missing from the Docblock of setTemplate()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/listingGridWidget.php" hash="8eac1604103b3703483f3fff63b966eb" package="Default">
    <class final="false" abstract="false" namespace="global" line="33" package="com\wolfnet\wordpress\listing">
      <extends>\com_wolfnet_wordpress_abstract_widget</extends>
      <name>com_wolfnet_wordpress_listing_listingGridWidget</name>
      <full_name>\com_wolfnet_wordpress_listing_listingGridWidget</full_name>
      <docblock line="3">
        <description>This is the listingGridWidget object.</description>
        <long-description>&lt;p&gt;This object inherites from the base WP_Widget object and
defines the display and functionality of this specific widget.&lt;/p&gt;</long-description>
        <tag line="3" name="see" description="\global\http://codex.wordpress.org/Widgets_API" refers="\global\http://codex.wordpress.org/Widgets_API"/>
        <tag line="3" name="see" description="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php" refers="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php"/>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="listingGridWidget.php"/>
        <tag line="3" name="extends" description="com_wolfnet_wordpress_abstract_widget"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$id</name>
        <default>'wolfnet_listingGridWidget'</default>
      </property>
      <property final="false" static="false" visibility="public" line="43" namespace="global" package="Default">
        <name>$name</name>
        <default>'WolfNet Listing Grid'</default>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="global" package="Default">
        <name>$options</name>
        <default>array('title' =&gt; '', 'description' =&gt; 'Define criteria to display a grid of matching properties. The grid display includes an image, price, number of bedrooms, number of bathrooms, and address.', 'criteria' =&gt; '', 'mode' =&gt; 'advanced', 'savedsearch' =&gt; '', 'zipcode' =&gt; '', 'city' =&gt; '', 'minprice' =&gt; '', 'maxprice' =&gt; '', 'ownertype' =&gt; 'all', 'maxresults' =&gt; 50)</default>
        <docblock line="45">
          <description>This property holds an array of different options that are available for each widget instance.</description>
          <long-description></long-description>
          <tag line="45" name="type" description="array"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="72" namespace="global" package="Default">
        <name>$controls</name>
        <default>array('width' =&gt; '400px')</default>
        <docblock line="66">
          <description>This property holds an array of options for the widget admin form.</description>
          <long-description></long-description>
          <tag line="66" name="type" description="array"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="83" namespace="global" package="Default">
        <name>$listingService</name>
        <default></default>
        <docblock line="77">
          <description>This property holds a references to the Listing Service object.</description>
          <long-description></long-description>
          <tag line="77" name="type" description="com_wolfnet_wordpress_listing_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="92" namespace="global" package="Default">
        <name>$searchService</name>
        <default></default>
        <docblock line="86">
          <description>This property holds a references to the Search Service object.</description>
          <long-description></long-description>
          <tag line="86" name="type" description="com_wolfnet_wordpress_search_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="101" namespace="global" package="Default">
        <name>$listingGridView</name>
        <default></default>
        <docblock line="95">
          <description>This property holds an instance of the Listing Grid View object.</description>
          <long-description></long-description>
          <tag line="95" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="110" namespace="global" package="Default">
        <name>$listingGridOptionsView</name>
        <default></default>
        <docblock line="104">
          <description>This property holds an instance of the Listing Grid Options View object</description>
          <long-description></long-description>
          <tag line="104" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="115">
          <description>This constructor method passes some key information up to the parent classes and eventionally
the information gets registered with the WordPress application.</description>
          <long-description></long-description>
          <tag line="115" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="com\wolfnet\wordpress\listing">
        <name>widget</name>
        <full_name>widget</full_name>
        <docblock line="135">
          <description>This method is the primary output for the widget.</description>
          <long-description>&lt;p&gt;This is the information the end user of the
site will see.&lt;/p&gt;</long-description>
          <tag line="135" name="param" description="An array of arguments passed to a widget." type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="135" name="param" description="An array of widget instance data" type="array" variable="$instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="135" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
        <argument line="144">
          <name>$instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="172" package="com\wolfnet\wordpress\listing">
        <name>form</name>
        <full_name>form</full_name>
        <docblock line="164">
          <description>This method is responsible for display of the widget instance form which allows configuration
of each widget instance in the WordPress admin.</description>
          <long-description></long-description>
          <tag line="164" name="param" description="An array of widget instance data" type="array" variable="$instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="164" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="com\wolfnet\wordpress\listing">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="190">
          <description>This method is responsible for saving any data that comes from the widget instance form.</description>
          <long-description></long-description>
          <tag line="190" name="param" description="An array of widget instance data from after the form submit" type="array" variable="$new_instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="190" name="param" description="An array of widget instance data from before the form submit" type="array" variable="$old_instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="190" name="return" description="An array of data that needs to be saved to the database." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="198">
          <name>$new_instance</name>
          <default></default>
          <type/>
        </argument>
        <argument line="198">
          <name>$old_instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="252" package="com\wolfnet\wordpress\listing">
        <name>convertCriteriaJsonToOptions</name>
        <full_name>convertCriteriaJsonToOptions</full_name>
        <argument line="252">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="265" package="com\wolfnet\wordpress\listing">
        <name>convertCriteriaJsonToArray</name>
        <full_name>convertCriteriaJsonToArray</full_name>
        <argument line="265">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="285" package="com\wolfnet\wordpress\listing">
        <name>getListingService</name>
        <full_name>getListingService</full_name>
        <docblock line="279">
          <description>GETTER:  This method is a getter for the listingService property.</description>
          <long-description></long-description>
          <tag line="279" name="return" description="" type="\com_wolfnet_wordpress_listing_service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="298" package="com\wolfnet\wordpress\listing">
        <name>setListingService</name>
        <full_name>setListingService</full_name>
        <docblock line="291">
          <description>SETTER:  This method is a setter for the listingService property.</description>
          <long-description></long-description>
          <tag line="291" name="param" description="" type="\com_wolfnet_wordpress_listing_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
          <tag line="291" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="298">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_listing_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="310" package="com\wolfnet\wordpress\listing">
        <name>getSearchService</name>
        <full_name>getSearchService</full_name>
        <docblock line="304">
          <description>GETTER:  This method is a getter for the SearchService property.</description>
          <long-description></long-description>
          <tag line="304" name="return" description="" type="\com_wolfnet_wordpress_search_service">
            <type by_reference="false">\com_wolfnet_wordpress_search_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="323" package="com\wolfnet\wordpress\listing">
        <name>setSearchService</name>
        <full_name>setSearchService</full_name>
        <docblock line="316">
          <description>SETTER:  This method is a setter for the SearchService property.</description>
          <long-description></long-description>
          <tag line="316" name="param" description="" type="\com_wolfnet_wordpress_search_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_search_service</type>
          </tag>
          <tag line="316" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="323">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_search_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="335" package="com\wolfnet\wordpress\listing">
        <name>getListingGridView</name>
        <full_name>getListingGridView</full_name>
        <docblock line="329">
          <description>GETTER:  This method is a getter for the listingGridView property.</description>
          <long-description></long-description>
          <tag line="329" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="348" package="com\wolfnet\wordpress\listing">
        <name>setListingGridView</name>
        <full_name>setListingGridView</full_name>
        <docblock line="341">
          <description>SETTER:  This method is a setter for the listingGridView property.</description>
          <long-description></long-description>
          <tag line="341" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$service">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="341" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="348">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="360" package="com\wolfnet\wordpress\listing">
        <name>getListingGridOptionsView</name>
        <full_name>getListingGridOptionsView</full_name>
        <docblock line="354">
          <description>GETTER:  This method is a getter for the listingGridOptionsView property.</description>
          <long-description></long-description>
          <tag line="354" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="373" package="com\wolfnet\wordpress\listing">
        <name>setListingGridOptionsView</name>
        <full_name>setListingGridOptionsView</full_name>
        <docblock line="366">
          <description>SETTER:  This method is a setter for the listingGridOptionsView property.</description>
          <long-description></long-description>
          <tag line="366" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$service">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="366" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="373">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/listingGridWidget.php</error>
      <error line="40" code="50018">No DocBlock was found for property $id</error>
      <error line="43" code="50018">No DocBlock was found for property $name</error>
      <error line="252" code="50010">No DocBlock was found for method convertCriteriaJsonToOptions()</error>
      <error line="265" code="50010">No DocBlock was found for method convertCriteriaJsonToArray()</error>
      <error line="341" code="50014">Name of argument $view does not match with the DocBlock's name $service in setListingGridView()</error>
      <notice line="341" code="50013">Parameter $service could not be found in setListingGridView()</notice>
      <error line="366" code="50014">Name of argument $view does not match with the DocBlock's name $service in setListingGridOptionsView()</error>
      <notice line="366" code="50013">Parameter $service could not be found in setListingGridOptionsView()</notice>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/listingView.php" hash="82547f54308320f5239f89d8d6b305e1" package="Default">
    <class final="false" abstract="false" namespace="global" line="30" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_listing_listingView</name>
      <full_name>\com_wolfnet_wordpress_listing_listingView</full_name>
      <docblock line="3">
        <description>This view is responsible for displaying a listing record.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="listingView.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_view"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="38">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="38" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="com\wolfnet\wordpress\listing">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="49">
          <description>This is an overwritten version of the parent class method.</description>
          <long-description>&lt;p&gt;It must call parent::render at
some point.&lt;/p&gt;</long-description>
          <tag line="49" name="param" description="And array of data which will be available as local variables to the&#10;                       template page used in the render process." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="100" package="com\wolfnet\wordpress\listing">
        <name>truncateString</name>
        <full_name>truncateString</full_name>
        <argument line="100">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$length</name>
          <default></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$sufix</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="126" package="com\wolfnet\wordpress\listing">
        <name>getTemplate</name>
        <full_name>getTemplate</full_name>
        <docblock line="120">
          <description>GETTER: This method is a getter for the listingView property.</description>
          <long-description></long-description>
          <tag line="120" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="com\wolfnet\wordpress\listing">
        <name>setTemplate</name>
        <full_name>setTemplate</full_name>
        <docblock line="132">
          <description>SETTER: This method is a setter for the listingView property.</description>
          <long-description></long-description>
          <tag line="132" name="type" description="string  $template"/>
          <tag line="132" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/listingView.php</error>
      <error line="100" code="50010">No DocBlock was found for method truncateString()</error>
      <error line="132" code="50015">Argument $template is missing from the Docblock of setTemplate()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/propertyListShortcode.php" hash="ed1946e52b0b1e8c6719d313171b3cd7" package="Default">
    <class final="false" abstract="false" namespace="global" line="33" package="com\wolfnet\wordpress\listing">
      <extends>\com_wolfnet_wordpress_listing_listingGridShortcode</extends>
      <name>com_wolfnet_wordpress_listing_propertyListShortcode</name>
      <full_name>\com_wolfnet_wordpress_listing_propertyListShortcode</full_name>
      <docblock line="3">
        <description>This is the filmStripWidget object.</description>
        <long-description>&lt;p&gt;This object inherites from the base WP_Widget object and
defines the display and functionality of this specific widget.&lt;/p&gt;</long-description>
        <tag line="3" name="see" description="\global\http://codex.wordpress.org/Widgets_API" refers="\global\http://codex.wordpress.org/Widgets_API"/>
        <tag line="3" name="see" description="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php" refers="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php"/>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="propertyListShortcode.php"/>
        <tag line="3" name="extends" description="com_wolfnet_wordpress_listing_listingGridShortcode"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$tag</name>
        <default>'WolfNetPropertyList,wolfnetpropertylist,WOLFNETPROPERTYLIST,wnt_list'</default>
        <docblock line="40">
          <description>This property holds the tag name which is used to identify shorcodes when they are encountered
in Posts and Pages.</description>
          <long-description></long-description>
          <tag line="40" name="type" description="string"/>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/propertyListShortcode.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/propertyListWidget.php" hash="f42b66b000d71f16f0e0451e26c32749" package="Default">
    <class final="false" abstract="false" namespace="global" line="33" package="com\wolfnet\wordpress\listing">
      <extends>\com_wolfnet_wordpress_listing_listingGridWidget</extends>
      <name>com_wolfnet_wordpress_listing_propertyListWidget</name>
      <full_name>\com_wolfnet_wordpress_listing_propertyListWidget</full_name>
      <docblock line="3">
        <description>This is the propertyListWidget object.</description>
        <long-description>&lt;p&gt;This object inherites from the base WP_Widget object and
defines the display and functionality of this specific widget.&lt;/p&gt;</long-description>
        <tag line="3" name="see" description="\global\http://codex.wordpress.org/Widgets_API" refers="\global\http://codex.wordpress.org/Widgets_API"/>
        <tag line="3" name="see" description="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php" refers="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php"/>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="propertyListWidget.php"/>
        <tag line="3" name="extends" description="com_wolfnet_wordpress_listing_listingGridWidget"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description>This constructor method passes some key information up to the parent classes and eventionally
the information gets registered with the WordPress application.</description>
          <long-description></long-description>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/propertyListWidget.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/quickSearchOptionsView.php" hash="c20f9a6bb8c60ef07c7e8e1ed6cfa407" package="Default">
    <class final="false" abstract="false" namespace="global" line="17" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_listing_quickSearchOptionsView</name>
      <full_name>\com_wolfnet_wordpress_listing_quickSearchOptionsView</full_name>
      <docblock line="3">
        <description>This view is responsible for displaying the QuickSearch Widget Options in the WordPress admin.</description>
        <long-description>&lt;p&gt;Each widget instance has its own instance of this view.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="quickSearchOptionsView.php"/>
        <tag line="3" name="extends" description="com_wolfnet_wordpress_abstract_widget"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="Andrew Baumgart"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="25">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="25" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="36">
          <description>This constructor method simply assigns the template property with a path to the HTML template
for this view based on the view files location.</description>
          <long-description></long-description>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="com\wolfnet\wordpress\listing">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="51">
          <description>This method establishes variable values which will be used by the template when it is render,
then the data is passed to to inharited render method.</description>
          <long-description></long-description>
          <tag line="51" name="param" description="An associative array of data for the template. Each array key will be&#10;                       transformed into a variable." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="51" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/quickSearchOptionsView.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/quickSearchShortcode.php" hash="92c015b0e5435f31a6db38776e591f3e" package="Default">
    <class final="false" abstract="false" namespace="global" line="33" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_shortcode_shortcode</extends>
      <name>com_wolfnet_wordpress_listing_quickSearchShortcode</name>
      <full_name>\com_wolfnet_wordpress_listing_quickSearchShortcode</full_name>
      <docblock line="3">
        <description>This is the filmStripWidget object.</description>
        <long-description>&lt;p&gt;This object inherites from the base WP_Widget object and
defines the display and functionality of this specific widget.&lt;/p&gt;</long-description>
        <tag line="3" name="see" description="\global\http://codex.wordpress.org/Widgets_API" refers="\global\http://codex.wordpress.org/Widgets_API"/>
        <tag line="3" name="see" description="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php" refers="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php"/>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="quickSearchShortcode.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_shortcode_shortcode"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="49" namespace="global" package="Default">
        <name>$tag</name>
        <default>'WolfNetListingQuickSearch,wolfnetlistingquicksearch,WOLFNETLISTINGQUICKSEARCH,wnt_search,WolfNetQuickSearch,wolfnetquicksearch,WOLFNETQUICKSEARCH'</default>
        <docblock line="40">
          <description>This property contains the string which will be used as the shortcode tag.</description>
          <long-description></long-description>
          <tag line="40" name="type" description="string"/>
          <tag line="40" name="TODO" description="Convert 'tag' property to a constant as it should not be allowed to change during the&#10;       request."/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$attributes</name>
        <default>array('title' =&gt; 'QuickSearch', 'ownertype' =&gt; 'all', 'maxresults' =&gt; 50)</default>
        <docblock line="52">
          <description>This property holds an array of different options that are available for each widget instance.</description>
          <long-description></long-description>
          <tag line="52" name="type" description="array"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="71" namespace="global" package="Default">
        <name>$quickSearchView</name>
        <default></default>
        <docblock line="65">
          <description>This property contains a instance of the Quick Search View object</description>
          <long-description></long-description>
          <tag line="65" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="com\wolfnet\wordpress\listing">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="76">
          <description>This method is called whenever an instance of the shortcode is encountered in a post or page.</description>
          <long-description></long-description>
          <tag line="76" name="param" description="" type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="param" description="" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$attr</name>
          <default></default>
          <type/>
        </argument>
        <argument line="84">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="com\wolfnet\wordpress\listing">
        <name>getListingService</name>
        <full_name>getListingService</full_name>
        <docblock line="100">
          <description>GETTER:  This method is a getter for the listingsService property.</description>
          <long-description></long-description>
          <tag line="100" name="return" description="" type="\com_wolfnet_wordpress_listing_service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="com\wolfnet\wordpress\listing">
        <name>setListingService</name>
        <full_name>setListingService</full_name>
        <docblock line="112">
          <description>SETTER:  This method is a setter for the listingsService property.</description>
          <long-description></long-description>
          <tag line="112" name="param" description="" type="\com_wolfnet_wordpress_listing_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
          <tag line="112" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_listing_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="com\wolfnet\wordpress\listing">
        <name>getQuickSearchView</name>
        <full_name>getQuickSearchView</full_name>
        <docblock line="124">
          <description>GETTER:  This method is a getter for the quickSearchView property.</description>
          <long-description></long-description>
          <tag line="124" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="143" package="com\wolfnet\wordpress\listing">
        <name>setQuickSearchView</name>
        <full_name>setQuickSearchView</full_name>
        <docblock line="136">
          <description>SETTER:  This method is a setter for the quickSearchView property.</description>
          <long-description></long-description>
          <tag line="136" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$view">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="136" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/quickSearchShortcode.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/quickSearchView.php" hash="edd289eec69bb3524eeac34ce207f343" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_view</extends>
      <implements>\com_greentiedev_wppf_interface_iView</implements>
      <name>com_wolfnet_wordpress_listing_quickSearchView</name>
      <full_name>\com_wolfnet_wordpress_listing_quickSearchView</full_name>
      <docblock line="3">
        <description>This view is responsible for displaying the Quick Search Form, which is a widget component.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="quickSearchView.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_view"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iView"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="39">
          <description>This property holds the path to the HTML template file for this view.</description>
          <long-description></long-description>
          <tag line="39" name="type" description="string"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="54" namespace="global" package="Default">
        <name>$settingsService</name>
        <default></default>
        <docblock line="48">
          <description>This property holds a reference to the settings service.</description>
          <long-description></long-description>
          <tag line="48" name="type" description="com_wolfnet_wordpress_settings_service"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="59">
          <description>This constructor method simply assigns the template property with a path to the HTML template
for this view based on the view files location.</description>
          <long-description></long-description>
          <tag line="59" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="com\wolfnet\wordpress\listing">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="75">
          <description>This method overwrites the inherited render method and provides some additional functionality.</description>
          <long-description>&lt;p&gt;Specifically it extracts the listings data from the $data param and passes it to the
renderListings method. This separates the concerns of rendering the film strip from rendering
indevidual listings.&lt;/p&gt;</long-description>
          <tag line="75" name="param" description="Associative array of data to be injected into the template file." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="75" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="com\wolfnet\wordpress\listing">
        <name>getSettingsService</name>
        <full_name>getSettingsService</full_name>
        <docblock line="103">
          <description>GETTER: This getter method is used to get the setttingsService property.</description>
          <long-description></long-description>
          <tag line="103" name="return" description="" type="\com_wolfnet_wordpress_settings_service.">
            <type by_reference="false">\com_wolfnet_wordpress_settings_service.</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="com\wolfnet\wordpress\listing">
        <name>setSettingsService</name>
        <full_name>setSettingsService</full_name>
        <docblock line="115">
          <description>SETTER: This setter method is used to set the setttingsService property.</description>
          <long-description></long-description>
          <tag line="115" name="param" description="" type="\com_wolfnet_wordpress_settings_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_settings_service</type>
          </tag>
          <tag line="115" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_settings_service</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/quickSearchView.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/quickSearchWidget.php" hash="7306b085d351829afd7a614230ccde3a" package="Default">
    <class final="false" abstract="false" namespace="global" line="33" package="com\wolfnet\wordpress\listing">
      <extends>\com_wolfnet_wordpress_abstract_widget</extends>
      <name>com_wolfnet_wordpress_listing_quickSearchWidget</name>
      <full_name>\com_wolfnet_wordpress_listing_quickSearchWidget</full_name>
      <docblock line="3">
        <description>This is the quickSearchWidget object.</description>
        <long-description>&lt;p&gt;This object inherites from the base WP_Widget object and
defines the display and functionality of this specific widget.&lt;/p&gt;</long-description>
        <tag line="3" name="see" description="\global\http://codex.wordpress.org/Widgets_API" refers="\global\http://codex.wordpress.org/Widgets_API"/>
        <tag line="3" name="see" description="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php" refers="\global\http://core.trac.wordpress.org/browser/tags/3.3.2/wp-includes/widgets.php"/>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="quickSearchWidget.php"/>
        <tag line="3" name="extends" description="com_wolfnet_wordpress_abstract_widget"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="public" line="46" namespace="global" package="Default">
        <name>$options</name>
        <default>array('title' =&gt; 'QuickSearch', 'description' =&gt; 'Configure a quick search to include on your website.  When executed, the user is directed to matching properties within your WolfNet property search.')</default>
        <docblock line="40">
          <description>This property holds an array of different options that are available for each widget instance.</description>
          <long-description></long-description>
          <tag line="40" name="type" description="array"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="global" package="Default">
        <name>$listingService</name>
        <default></default>
        <docblock line="51">
          <description>This property holds a reference to the Listing Service object.</description>
          <long-description></long-description>
          <tag line="51" name="type" description="com_wolfnet_wordpress_listing_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="66" namespace="global" package="Default">
        <name>$quickSearchView</name>
        <default></default>
        <docblock line="60">
          <description>This property holds a reference to the Quick Search View object.</description>
          <long-description></long-description>
          <tag line="60" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="73" namespace="global" package="Default">
        <name>$quickSearchOptionsView</name>
        <default></default>
        <docblock line="68">
          <description>This property holds an instance of the Quicksearch Options View object</description>
          <long-description></long-description>
          <tag line="68" name="type" description="com_greentiedev_wppf_interface_iView"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="78">
          <description>This constructor method establishes some default values for the widget and forwards the
instantiation on to the parent constructor.</description>
          <long-description></long-description>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="com\wolfnet\wordpress\listing">
        <name>widget</name>
        <full_name>widget</full_name>
        <docblock line="97">
          <description>This method is the primary output for the widget.</description>
          <long-description>&lt;p&gt;This is the information the end user of the
site will see.&lt;/p&gt;</long-description>
          <tag line="97" name="param" description="An array of arguments passed to a widget." type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="97" name="param" description="An array of widget instance data" type="array" variable="$instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="97" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="com\wolfnet\wordpress\listing">
        <name>form</name>
        <full_name>form</full_name>
        <docblock line="120">
          <description>This method is responsible for display of the widget instance form which allows configuration
of each widget instance in the WordPress admin.</description>
          <long-description></long-description>
          <tag line="120" name="param" description="An array of widget instance data" type="array" variable="$instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="com\wolfnet\wordpress\listing">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="138">
          <description>This method is responsible for saving any data that comes from the widget instance form.</description>
          <long-description></long-description>
          <tag line="138" name="param" description="An array of widget instance data from after the form submit" type="array" variable="$new_instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="param" description="An array of widget instance data from before the form submit" type="array" variable="$old_instance">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="return" description="An array of data that needs to be saved to the database." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$new_instance</name>
          <default></default>
          <type/>
        </argument>
        <argument line="146">
          <name>$old_instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="166" package="com\wolfnet\wordpress\listing">
        <name>getListingService</name>
        <full_name>getListingService</full_name>
        <docblock line="160">
          <description>GETTER:  This method is a getter for the listingsService property.</description>
          <long-description></long-description>
          <tag line="160" name="return" description="" type="\com_wolfnet_wordpress_listing_service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="179" package="com\wolfnet\wordpress\listing">
        <name>setListingService</name>
        <full_name>setListingService</full_name>
        <docblock line="172">
          <description>SETTER:  This method is a setter for the listingsService property.</description>
          <long-description></long-description>
          <tag line="172" name="param" description="" type="\com_wolfnet_wordpress_listing_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
          <tag line="172" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_listing_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="191" package="com\wolfnet\wordpress\listing">
        <name>getQuickSearchView</name>
        <full_name>getQuickSearchView</full_name>
        <docblock line="185">
          <description>GETTER:  This method is a getter for the quickSearchView property.</description>
          <long-description></long-description>
          <tag line="185" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="204" package="com\wolfnet\wordpress\listing">
        <name>setQuickSearchView</name>
        <full_name>setQuickSearchView</full_name>
        <docblock line="197">
          <description>SETTER:  This method is a setter for the quickSearchView property.</description>
          <long-description></long-description>
          <tag line="197" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$service">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="197" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="215" package="com\wolfnet\wordpress\listing">
        <name>getQuickSearchOptionsView</name>
        <full_name>getQuickSearchOptionsView</full_name>
        <docblock line="209">
          <description>GETTER:  This method is a getter for the quickSearchOptionsView property.</description>
          <long-description></long-description>
          <tag line="209" name="return" description="" type="\com_greentiedev_wppf_interface_iView">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="228" package="com\wolfnet\wordpress\listing">
        <name>setQuickSearchOptionsView</name>
        <full_name>setQuickSearchOptionsView</full_name>
        <docblock line="221">
          <description>SETTER:  This method is a setter for the quickSearchOptionsView property.</description>
          <long-description></long-description>
          <tag line="221" name="param" description="" type="\com_greentiedev_wppf_interface_iView" variable="$service">
            <type by_reference="false">\com_greentiedev_wppf_interface_iView</type>
          </tag>
          <tag line="221" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="228">
          <name>$view</name>
          <default></default>
          <type>\com_greentiedev_wppf_interface_iView</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/quickSearchWidget.php</error>
      <error line="197" code="50014">Name of argument $view does not match with the DocBlock's name $service in setQuickSearchView()</error>
      <notice line="197" code="50013">Parameter $service could not be found in setQuickSearchView()</notice>
      <error line="221" code="50014">Name of argument $view does not match with the DocBlock's name $service in setQuickSearchOptionsView()</error>
      <notice line="221" code="50013">Parameter $service could not be found in setQuickSearchOptionsView()</notice>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/service.php" hash="8ef0cbdfb7285cf862b18d66aded482f" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\wolfnet\wordpress\listing">
      <extends>\com_greentiedev_wppf_abstract_service</extends>
      <implements>\com_greentiedev_wppf_interface_iService</implements>
      <name>com_wolfnet_wordpress_listing_service</name>
      <full_name>\com_wolfnet_wordpress_listing_service</full_name>
      <docblock line="3">
        <description>This class is the listingService and is a Facade used to interact with all other listing information.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="listing"/>
        <tag line="3" name="title" description="service.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_service"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iService"/>
        <tag line="3" name="singleton" description="True"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="45" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
        <docblock line="39">
          <description>This private static property holds the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="39" name="type" description="com_wolfnet_wordpress_listing_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="71" namespace="global" package="Default">
        <name>$dataService</name>
        <default></default>
        <docblock line="65">
          <description>This property holds a reference to the WPPF Data Service instance within the plugin instance.</description>
          <long-description></long-description>
          <tag line="65" name="type" description="com_greentiedev_wppf_data_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="81" namespace="global" package="Default">
        <name>$webServiceUrl</name>
        <default></default>
        <docblock line="74">
          <description>This property holds a reference to the Web Service URL object which represents the URI which
will be used to retrieve data from a remove service.</description>
          <long-description></long-description>
          <tag line="74" name="type" description="com_greentiedev_wppf_data_webServiceUrl"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="91" namespace="global" package="Default">
        <name>$optionManager</name>
        <default></default>
        <docblock line="84">
          <description>This property holds a reference to the WPPF Option Manager instance within the plugin
instance.</description>
          <long-description></long-description>
          <tag line="84" name="type" description="com_greentiedev_wppf_option_manager"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="54" package="com\wolfnet\wordpress\listing">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="48">
          <description>This static method is used to retrieve the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="48" name="return" description="" type="\com_wolfnet_wordpress_listing_service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="103" package="com\wolfnet\wordpress\listing">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="96">
          <description>This constructor method is private becuase this class is a singleton and can only be retrieved
by statically calling the getInstance method.</description>
          <long-description></long-description>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="com\wolfnet\wordpress\listing">
        <name>getFeaturedListings</name>
        <full_name>getFeaturedListings</full_name>
        <docblock line="110">
          <description>This method returns all featured property listings.</description>
          <long-description></long-description>
          <tag line="110" name="param" description="The type of data that should be returned 'agent_broker',&#10;                               'agent', or 'broker'." type="string" variable="$owner_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="param" description="The maximum number of listings which can be returned from the&#10;                               web service request. The cap is 50." type="\numeric" variable="$maxResults">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="110" name="return" description="An array of listing objects (com_wolfnet_wordpress_listing_entity)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$owner_type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="120">
          <name>$maxResults</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="com\wolfnet\wordpress\listing">
        <name>getGridListings</name>
        <full_name>getGridListings</full_name>
        <docblock line="127">
          <description>This method returns all grid property listings.</description>
          <long-description></long-description>
          <tag line="127" name="param" description="The minimum price for listings which can be returned." type="\numeric" variable="$minPrice">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="127" name="param" description="The maximum price for listings which can be returned." type="\numeric" variable="$maxPrice">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="127" name="param" description="The name of a city to limit listing results to." type="string" variable="$city">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="The zipcode to limit listing results to." type="string" variable="$zipcode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="The type of data that should be returned 'agent_broker',&#10;                               'agent', or 'broker'." type="string" variable="$owner_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="The maximum number of listings which can be returned from the&#10;                               web service request. The cap is 50." type="\numeric" variable="$maxResults">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="127" name="return" description="An array of listing objects (com_wolfnet_wordpress_listing_entity)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$criteria</name>
          <default></default>
          <type/>
        </argument>
        <argument line="141">
          <name>$owner_type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="141">
          <name>$maxResults</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="com\wolfnet\wordpress\listing">
        <name>getPriceData</name>
        <full_name>getPriceData</full_name>
        <docblock line="148">
          <description>This method gets an array of prices.</description>
          <long-description>&lt;p&gt;This data is used for drop down lists in the quick
search and admin forms.&lt;/p&gt;</long-description>
          <tag line="148" name="return" description="An array of associative arrays containing price data.  Each associative array&#10;                contains a 'value' key and a 'label' key." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="319" package="com\wolfnet\wordpress\listing">
        <name>getBedData</name>
        <full_name>getBedData</full_name>
        <docblock line="311">
          <description>This method gets an array of Bedroom data.</description>
          <long-description>&lt;p&gt;This data is used for drop down lists in the
quick search and admin forms.&lt;/p&gt;</long-description>
          <tag line="311" name="return" description="An array of associative arrays containing price data.  Each associative array&#10;                contains a 'value' key and a 'label' key." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="341" package="com\wolfnet\wordpress\listing">
        <name>getBathData</name>
        <full_name>getBathData</full_name>
        <docblock line="333">
          <description>This method gets an array of Bathroom data.</description>
          <long-description>&lt;p&gt;This data is used for drop down lists in the
quick search and admin forms.&lt;/p&gt;</long-description>
          <tag line="333" name="return" description="An array of associative arrays containing price data.  Each associative array&#10;                contains a 'value' key and a 'label' key." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="363" package="com\wolfnet\wordpress\listing">
        <name>getOwnerTypeData</name>
        <full_name>getOwnerTypeData</full_name>
        <docblock line="355">
          <description>This method gets an array of Listing Owner Type data.</description>
          <long-description>&lt;p&gt;This data is used for drop down lists
in admin forms.&lt;/p&gt;</long-description>
          <tag line="355" name="return" description="An array of associative arrays containing price data.  Each associative array&#10;                contains a 'value' key and a 'label' key." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="385" package="com\wolfnet\wordpress\listing">
        <name>setData</name>
        <full_name>setData</full_name>
        <docblock line="375">
          <description>This method established the URL parameters to be sent to the remote web service and sends the
URL to the Data Service object and injects the resulting data into the DAO.</description>
          <long-description>&lt;p&gt;This method
contains general configurations and accepts a Web Service URL object as an argument which can
contain more specific configuration.&lt;/p&gt;</long-description>
          <tag line="375" name="param" description="A reference to a web service url object." type="\com_greentiedev_wppf_data_webServiceUrl" variable="$wsu">
            <type by_reference="false">\com_greentiedev_wppf_data_webServiceUrl</type>
          </tag>
          <tag line="375" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="385">
          <name>$wsu</name>
          <default>null</default>
          <type>\com_greentiedev_wppf_data_webServiceUrl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="413" package="com\wolfnet\wordpress\listing">
        <name>setFeaturedListingsData</name>
        <full_name>setFeaturedListingsData</full_name>
        <docblock line="402">
          <description>This method establishes specific URL parameters for featured listings and then forwards the
URL Object on to the more general setData method.</description>
          <long-description></long-description>
          <tag line="402" name="param" description="The type of data that should be returned 'agent_broker',&#10;                               'agent', or 'broker'." type="string" variable="$owner_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="402" name="param" description="The maximum number of listings which can be returned from the&#10;                               web service request. The cap is 50." type="\numeric" variable="$maxResults">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="402" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="413">
          <name>$owner_type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="413">
          <name>$maxResults</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="438" package="com\wolfnet\wordpress\listing">
        <name>setGridListingData</name>
        <full_name>setGridListingData</full_name>
        <docblock line="423">
          <description>This method establishes specific URL parameters for grid listings and then forwards the
URL Object on to the more general setData method.</description>
          <long-description></long-description>
          <tag line="423" name="param" description="The minimum price for listings which can be returned." type="\numeric" variable="$minPrice">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="423" name="param" description="The maximum price for listings which can be returned." type="\numeric" variable="$maxPrice">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="423" name="param" description="The name of a city to limit listing results to." type="string" variable="$city">
            <type by_reference="false">string</type>
          </tag>
          <tag line="423" name="param" description="The zipcode to limit listing results to." type="string" variable="$zipcode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="423" name="param" description="The type of data that should be returned 'agent_broker',&#10;                               'agent', or 'broker'." type="string" variable="$owner_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="423" name="param" description="The maximum number of listings which can be returned from the&#10;                               web service request. The cap is 50." type="\numeric" variable="$maxResults">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="423" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="438">
          <name>$criteria</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="438">
          <name>$owner_type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="438">
          <name>$maxResults</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="474" package="com\wolfnet\wordpress\listing">
        <name>getProductKey</name>
        <full_name>getProductKey</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="488" package="com\wolfnet\wordpress\listing">
        <name>getDataService</name>
        <full_name>getDataService</full_name>
        <docblock line="482">
          <description>GETTER: This method is a getter for the dataService property.</description>
          <long-description></long-description>
          <tag line="482" name="return" description="" type="\com_greentiedev_wppf_data_service">
            <type by_reference="false">\com_greentiedev_wppf_data_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="501" package="com\wolfnet\wordpress\listing">
        <name>setDataService</name>
        <full_name>setDataService</full_name>
        <docblock line="494">
          <description>SETTER: This method is a setter for the dataService property.</description>
          <long-description></long-description>
          <tag line="494" name="param" description="" type="\com_greentiedev_wppf_data_service" variable="$service">
            <type by_reference="false">\com_greentiedev_wppf_data_service</type>
          </tag>
          <tag line="494" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="501">
          <name>$service</name>
          <default></default>
          <type>\com_greentiedev_wppf_data_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="513" package="com\wolfnet\wordpress\listing">
        <name>getWebServiceUrl</name>
        <full_name>getWebServiceUrl</full_name>
        <docblock line="507">
          <description>GETTER: This method is a getter for the webServiceUrl property.</description>
          <long-description></long-description>
          <tag line="507" name="return" description="" type="\com_greentiedev_wppf_data_webServiceUrl">
            <type by_reference="false">\com_greentiedev_wppf_data_webServiceUrl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="526" package="com\wolfnet\wordpress\listing">
        <name>setWebServiceUrl</name>
        <full_name>setWebServiceUrl</full_name>
        <docblock line="519">
          <description>SETTER: This method is a setter for the webServiceUrl property.</description>
          <long-description></long-description>
          <tag line="519" name="param" description="" type="\com_greentiedev_wppf_data_webServiceUrl" variable="$url">
            <type by_reference="false">\com_greentiedev_wppf_data_webServiceUrl</type>
          </tag>
          <tag line="519" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="526">
          <name>$url</name>
          <default></default>
          <type>\com_greentiedev_wppf_data_webServiceUrl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="538" package="com\wolfnet\wordpress\listing">
        <name>getOptionManager</name>
        <full_name>getOptionManager</full_name>
        <docblock line="532">
          <description>GETTER: This method is a getter for the optionManager property.</description>
          <long-description></long-description>
          <tag line="532" name="return" description="" type="\com_greentiedev_wppf_option_manager">
            <type by_reference="false">\com_greentiedev_wppf_option_manager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="551" package="com\wolfnet\wordpress\listing">
        <name>setOptionManager</name>
        <full_name>setOptionManager</full_name>
        <docblock line="544">
          <description>SETTER: This method is a setter for the optionManager property.</description>
          <long-description></long-description>
          <tag line="544" name="param" description="" type="\com_greentiedev_wppf_option_manager" variable="$manager">
            <type by_reference="false">\com_greentiedev_wppf_option_manager</type>
          </tag>
          <tag line="544" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="551">
          <name>$manager</name>
          <default></default>
          <type>\com_greentiedev_wppf_option_manager</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/service.php</error>
      <error line="127" code="50014">Name of argument $criteria does not match with the DocBlock's name $minPrice in getGridListings()</error>
      <error line="127" code="50014">Name of argument $owner_type does not match with the DocBlock's name $maxPrice in getGridListings()</error>
      <error line="127" code="50014">Name of argument $maxResults does not match with the DocBlock's name $city in getGridListings()</error>
      <notice line="127" code="50013">Parameter $minPrice could not be found in getGridListings()</notice>
      <notice line="127" code="50013">Parameter $maxPrice could not be found in getGridListings()</notice>
      <notice line="127" code="50013">Parameter $city could not be found in getGridListings()</notice>
      <notice line="127" code="50013">Parameter $zipcode could not be found in getGridListings()</notice>
      <error line="423" code="50014">Name of argument $criteria does not match with the DocBlock's name $minPrice in setGridListingData()</error>
      <error line="423" code="50014">Name of argument $owner_type does not match with the DocBlock's name $maxPrice in setGridListingData()</error>
      <error line="423" code="50014">Name of argument $maxResults does not match with the DocBlock's name $city in setGridListingData()</error>
      <notice line="423" code="50013">Parameter $minPrice could not be found in setGridListingData()</notice>
      <notice line="423" code="50013">Parameter $maxPrice could not be found in setGridListingData()</notice>
      <notice line="423" code="50013">Parameter $city could not be found in setGridListingData()</notice>
      <notice line="423" code="50013">Parameter $zipcode could not be found in setGridListingData()</notice>
      <error line="474" code="50010">No DocBlock was found for method getProductKey()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/template/featuredListings.php" hash="47fdc8bfb3cef8408a7ff68b1a9c2c84" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/template/featuredListings.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/template/featuredListingsOptions.php" hash="a87a3aa44d03a14d3d993cdef64296bf" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/template/featuredListingsOptions.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/template/listingBrief.php" hash="6a0067fac7fd7525d20f53734690fefa" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/template/listingBrief.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/template/listingGrid.php" hash="6945c167f23a53f7fdc23899caa4b2c0" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/template/listingGrid.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/template/listingGridOptions.php" hash="8bb3d966306967714aaf3e5d26a5c765" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/template/listingGridOptions.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/template/listingSimple.php" hash="016cf164863db6cb7b30a3c53bd829f8" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/template/listingSimple.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/template/propertyList.php" hash="9c7a41e999620ea2b3440551c9a3bb36" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/template/propertyList.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/template/quickSearchForm.php" hash="9f3f7d6e2361bcf96002acc89fc07ebc" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/template/quickSearchForm.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/listing/template/quickSearchOptions.php" hash="7ea4884b4e8f4790e96165b6435fede4" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/listing/template/quickSearchOptions.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/market/disclaimer/dao.php" hash="f1f317c8c02f9e56a4132e4099f0e335" package="Default">
    <class final="false" abstract="false" namespace="global" line="34" package="com\wolfnet\wordpress\market\disclaimer">
      <extends>\com_greentiedev_wppf_abstract_dao</extends>
      <implements>\com_greentiedev_wppf_interface_iDao</implements>
      <name>com_wolfnet_wordpress_market_disclaimer_dao</name>
      <full_name>\com_wolfnet_wordpress_market_disclaimer_dao</full_name>
      <docblock line="3">
        <description>This class is the listingDAO (data access object) and is responsible for translating the incoming
and outgoing data to and from the listingEntity objects.</description>
        <long-description>&lt;p&gt;This object should be replaced in the
event that the method used for data i/o is changed.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="market.disclaimer"/>
        <tag line="3" name="title" description="dao.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_dao"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iDao"/>
        <tag line="3" name="singleton" description="True"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="48" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
        <docblock line="42">
          <description>This private static property holds the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="42" name="type" description="com_wolfnet_wordpress_listing_dao"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="71" namespace="global" package="Default">
        <name>$brandingDao</name>
        <default></default>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
          <tag line="68" name="type" description="com_wolfnet_wordpress_listing_branding_dao"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="57" package="com\wolfnet\wordpress\market\disclaimer">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="51">
          <description>This static method is used to retrieve the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="51" name="return" description="" type="\com_wolfnet_wordpress_listing_dao">
            <type by_reference="false">\com_wolfnet_wordpress_listing_dao</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="83" package="com\wolfnet\wordpress\market\disclaimer">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="76">
          <description>This constructor method is private becuase this class is a singleton and can only be retrieved
by statically calling the getInstance method.</description>
          <long-description></long-description>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="com\wolfnet\wordpress\market\disclaimer">
        <name>findAll</name>
        <full_name>findAll</full_name>
        <docblock line="91">
          <description>This method returns all property listings avaiable to this WordPress plugin instance.</description>
          <long-description></long-description>
          <tag line="91" name="return" description="An array of listing objects (com_wolfnet_wordpress_listing_entity)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="com\wolfnet\wordpress\market\disclaimer">
        <name>findById</name>
        <full_name>findById</full_name>
        <docblock line="116">
          <description>This method returns only a single listing object based on the primary key that is passed.</description>
          <long-description></long-description>
          <tag line="116" name="param" description="The primary key of a single listing." type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="116" name="return" description="Listing object with a matching primary key." type="\com_wolfnet_wordpress_listing_entity">
            <type by_reference="false">\com_wolfnet_wordpress_listing_entity</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$id</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="137" package="com\wolfnet\wordpress\market\disclaimer">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="131">
          <description>GETTER: This getter method is used to get the data property, which is an inherited property.</description>
          <long-description></long-description>
          <tag line="131" name="return" description="An array of data." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="com\wolfnet\wordpress\market\disclaimer">
        <name>setData</name>
        <full_name>setData</full_name>
        <docblock line="143">
          <description>SETTER: This setter method is used to set the data property, which is an inherited property.</description>
          <long-description></long-description>
          <tag line="143" name="param" description="An array of data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="143" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/market/disclaimer/dao.php</error>
      <critical line="68" code="50019">No short description for property $brandingDao</critical>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/market/disclaimer/entity.php" hash="46887c7e21ea7c5e5c4d0489e026f295" package="Default">
    <class final="false" abstract="false" namespace="global" line="32" package="com\wolfnet\wordpress\market\disclaimer">
      <extends>\com_greentiedev_wppf_abstract_entity</extends>
      <implements>\com_greentiedev_wppf_interface_iEntity</implements>
      <name>com_wolfnet_wordpress_market_disclaimer_entity</name>
      <full_name>\com_wolfnet_wordpress_market_disclaimer_entity</full_name>
      <docblock line="3">
        <description>This class is the Listing Entity and is a container for listing data.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="market.disclaimer"/>
        <tag line="3" name="title" description="entity.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_entity"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iEntity"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Default">
        <name>$content</name>
        <default>''</default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="com\wolfnet\wordpress\market\disclaimer">
        <name>setMemento</name>
        <full_name>setMemento</full_name>
        <docblock line="50">
          <description>This method is used to set instance data for the entity.</description>
          <long-description>&lt;p&gt;Though it is public by necessity,
this method should not be accessed by any object other than the listingDao.
( see Memento Design Pattern )&lt;/p&gt;</long-description>
          <tag line="50" name="param" description="The primary key of a single listing." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="com\wolfnet\wordpress\market\disclaimer">
        <name>getMemento</name>
        <full_name>getMemento</full_name>
        <docblock line="65">
          <description>This method is used to get instance data from the entity.</description>
          <long-description>&lt;p&gt;Though it is public by necessity,
this method should not be accessed by any object other than the listingDao.
( see Memento Design Pattern )&lt;/p&gt;</long-description>
          <tag line="65" name="return" description="The primary key of a single listing." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="com\wolfnet\wordpress\market\disclaimer">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="83">
          <description>GETTER: This method is a getter for the content property.</description>
          <long-description></long-description>
          <tag line="83" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/market/disclaimer/entity.php</error>
      <critical line="40" code="50019">No short description for property $content</critical>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/market/disclaimer/service.php" hash="705c2eabb516e478104fefeed2859b4e" package="Default">
    <class final="false" abstract="false" namespace="global" line="33" package="com\wolfnet\wordpress\market\disclaimer">
      <extends>\com_greentiedev_wppf_abstract_service</extends>
      <implements>\com_greentiedev_wppf_interface_iService</implements>
      <name>com_wolfnet_wordpress_market_disclaimer_service</name>
      <full_name>\com_wolfnet_wordpress_market_disclaimer_service</full_name>
      <docblock line="3">
        <description>This class is the Market Disclaimer Service and is a Facade used to interact with all other
market information.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="market.disclaimer"/>
        <tag line="3" name="title" description="service.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_service"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iService"/>
        <tag line="3" name="singleton" description="True"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="47" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
        <docblock line="41">
          <description>This private static property holds the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="41" name="type" description="com_wolfnet_wordpress_market_disclaimer"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="73" namespace="global" package="Default">
        <name>$dataService</name>
        <default></default>
        <docblock line="67">
          <description>This property holds a reference to the WPPF Data Service instance within the plugin instance.</description>
          <long-description></long-description>
          <tag line="67" name="type" description="com_greentiedev_wppf_data_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="83" namespace="global" package="Default">
        <name>$webServiceUrl</name>
        <default></default>
        <docblock line="76">
          <description>This property holds a reference to the Web Service URL object which represents the URI which
will be used to retrieve data from a remove service.</description>
          <long-description></long-description>
          <tag line="76" name="type" description="com_greentiedev_wppf_data_webServiceUrl"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="93" namespace="global" package="Default">
        <name>$optionManager</name>
        <default></default>
        <docblock line="86">
          <description>This property holds a reference to the WPPF Option Manager instance within the plugin
instance.</description>
          <long-description></long-description>
          <tag line="86" name="type" description="com_greentiedev_wppf_option_manager"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="56" package="com\wolfnet\wordpress\market\disclaimer">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="50">
          <description>This static method is used to retrieve the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="50" name="return" description="" type="\com_wolfnet_wordpress_market_disclaimer">
            <type by_reference="false">\com_wolfnet_wordpress_market_disclaimer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="105" package="com\wolfnet\wordpress\market\disclaimer">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="98">
          <description>This constructor method is private becuase this class is a singleton and can only be retrieved
by statically calling the getInstance method.</description>
          <long-description></long-description>
          <tag line="98" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="com\wolfnet\wordpress\market\disclaimer">
        <name>getDisclaimerByType</name>
        <full_name>getDisclaimerByType</full_name>
        <docblock line="112">
          <description>This method returns all featured property listings.</description>
          <long-description></long-description>
          <tag line="112" name="param" description="The type of disclaimer to return. (search_results)" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="return" description="An array of listing objects (com_wolfnet_wordpress_listing_entity)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$type</name>
          <default>'search_results'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="com\wolfnet\wordpress\market\disclaimer">
        <name>getDataService</name>
        <full_name>getDataService</full_name>
        <docblock line="145">
          <description>GETTER: This method is a getter for the dataService property.</description>
          <long-description></long-description>
          <tag line="145" name="return" description="" type="\com_greentiedev_wppf_data_service">
            <type by_reference="false">\com_greentiedev_wppf_data_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="164" package="com\wolfnet\wordpress\market\disclaimer">
        <name>setDataService</name>
        <full_name>setDataService</full_name>
        <docblock line="157">
          <description>SETTER: This method is a setter for the dataService property.</description>
          <long-description></long-description>
          <tag line="157" name="param" description="" type="\com_greentiedev_wppf_data_service" variable="$service">
            <type by_reference="false">\com_greentiedev_wppf_data_service</type>
          </tag>
          <tag line="157" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$service</name>
          <default></default>
          <type>\com_greentiedev_wppf_data_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="176" package="com\wolfnet\wordpress\market\disclaimer">
        <name>getWebServiceUrl</name>
        <full_name>getWebServiceUrl</full_name>
        <docblock line="170">
          <description>GETTER: This method is a getter for the webServiceUrl property.</description>
          <long-description></long-description>
          <tag line="170" name="return" description="" type="\com_greentiedev_wppf_data_webServiceUrl">
            <type by_reference="false">\com_greentiedev_wppf_data_webServiceUrl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="189" package="com\wolfnet\wordpress\market\disclaimer">
        <name>setWebServiceUrl</name>
        <full_name>setWebServiceUrl</full_name>
        <docblock line="182">
          <description>SETTER: This method is a setter for the webServiceUrl property.</description>
          <long-description></long-description>
          <tag line="182" name="param" description="" type="\com_greentiedev_wppf_data_webServiceUrl" variable="$url">
            <type by_reference="false">\com_greentiedev_wppf_data_webServiceUrl</type>
          </tag>
          <tag line="182" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$url</name>
          <default></default>
          <type>\com_greentiedev_wppf_data_webServiceUrl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="com\wolfnet\wordpress\market\disclaimer">
        <name>getOptionManager</name>
        <full_name>getOptionManager</full_name>
        <docblock line="195">
          <description>GETTER: This method is a getter for the optionManager property.</description>
          <long-description></long-description>
          <tag line="195" name="return" description="" type="\com_greentiedev_wppf_option_manager">
            <type by_reference="false">\com_greentiedev_wppf_option_manager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="214" package="com\wolfnet\wordpress\market\disclaimer">
        <name>setOptionManager</name>
        <full_name>setOptionManager</full_name>
        <docblock line="207">
          <description>SETTER: This method is a setter for the optionManager property.</description>
          <long-description></long-description>
          <tag line="207" name="param" description="" type="\com_greentiedev_wppf_option_manager" variable="$manager">
            <type by_reference="false">\com_greentiedev_wppf_option_manager</type>
          </tag>
          <tag line="207" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$manager</name>
          <default></default>
          <type>\com_greentiedev_wppf_option_manager</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/market/disclaimer/service.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/search/service.php" hash="17884c5c78d79c18493ba6fd9350d6d1" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="com\wolfnet\wordpress\search">
      <extends>\com_greentiedev_wppf_abstract_service</extends>
      <implements>\com_greentiedev_wppf_interface_iService</implements>
      <name>com_wolfnet_wordpress_search_service</name>
      <full_name>\com_wolfnet_wordpress_search_service</full_name>
      <docblock line="3">
        <description>This class is the searchService and is a Facade used to interact with all other search information.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="search"/>
        <tag line="3" name="title" description="service.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_service"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iService"/>
        <tag line="3" name="singleton" description="True"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <constant namespace="global" line="65" package="com\wolfnet\wordpress\search">
        <name>WOLFNET_SEARCH_POST</name>
        <full_name>WOLFNET_SEARCH_POST</full_name>
        <value>'wolfnet_search'</value>
      </constant>
      <constant namespace="global" line="68" package="com\wolfnet\wordpress\search">
        <name>DEFAULT_SESSION_KEY</name>
        <full_name>DEFAULT_SESSION_KEY</full_name>
        <value>'wolfnetSearchManagerCookies'</value>
      </constant>
      <property final="false" static="true" visibility="private" line="45" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
        <docblock line="39">
          <description>This private static property holds the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="39" name="type" description="com_wolfnet_wordpress_listing_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="79" namespace="global" package="Default">
        <name>$settingsService</name>
        <default></default>
        <docblock line="73">
          <description>This property holds a reference to the SettingsService object.</description>
          <long-description></long-description>
          <tag line="73" name="type" description="com_wolfnet_wordpress_settings_service"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="54" package="com\wolfnet\wordpress\search">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="48">
          <description>This static method is used to retrieve the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="48" name="return" description="" type="\com_wolfnet_wordpress_listing_service">
            <type by_reference="false">\com_wolfnet_wordpress_listing_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="91" package="com\wolfnet\wordpress\search">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="84">
          <description>This constructor method is private becuase this class is a singleton and can only be retrieved
by statically calling the getInstance method.</description>
          <long-description></long-description>
          <tag line="84" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="com\wolfnet\wordpress\search">
        <name>getSearches</name>
        <full_name>getSearches</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="com\wolfnet\wordpress\search">
        <name>getSearchCriteria</name>
        <full_name>getSearchCriteria</full_name>
        <argument line="127">
          <name>$id</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="com\wolfnet\wordpress\search">
        <name>saveSearch</name>
        <full_name>saveSearch</full_name>
        <argument line="150">
          <name>$title</name>
          <default></default>
          <type/>
        </argument>
        <argument line="150">
          <name>$criteria</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="com\wolfnet\wordpress\search">
        <name>deleteSearch</name>
        <full_name>deleteSearch</full_name>
        <argument line="171">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="177" package="com\wolfnet\wordpress\search">
        <name>getSearchManagerHtml</name>
        <full_name>getSearchManagerHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="com\wolfnet\wordpress\search">
        <name>getCfId</name>
        <full_name>getCfId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="227" package="com\wolfnet\wordpress\search">
        <name>getCfToken</name>
        <full_name>getCfToken</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="233" package="com\wolfnet\wordpress\search">
        <name>getJSessionId</name>
        <full_name>getJSessionId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="241" package="com\wolfnet\wordpress\search">
        <name>getCookieData</name>
        <full_name>getCookieData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="250" package="com\wolfnet\wordpress\search">
        <name>setCookieData</name>
        <full_name>setCookieData</full_name>
        <argument line="250">
          <name>$cookies</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="268" package="com\wolfnet\wordpress\search">
        <name>getCookieValue</name>
        <full_name>getCookieValue</full_name>
        <argument line="268">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="280" package="com\wolfnet\wordpress\search">
        <name>removeJqueryFromHTML</name>
        <full_name>removeJqueryFromHTML</full_name>
        <argument line="280">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="com\wolfnet\wordpress\search">
        <name>getSettingsService</name>
        <full_name>getSettingsService</full_name>
        <docblock line="288">
          <description>GETTER: This method is a getter for the settingsService property.</description>
          <long-description></long-description>
          <tag line="288" name="return" description="" type="\com_wolfnet_wordpress_settings_service">
            <type by_reference="false">\com_wolfnet_wordpress_settings_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="307" package="com\wolfnet\wordpress\search">
        <name>setSettingsService</name>
        <full_name>setSettingsService</full_name>
        <docblock line="300">
          <description>SETTER: This method is a setter for the settingsService property.</description>
          <long-description></long-description>
          <tag line="300" name="param" description="" type="\com_wolfnet_wordpress_settings_service" variable="$service">
            <type by_reference="false">\com_wolfnet_wordpress_settings_service</type>
          </tag>
          <tag line="300" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$service</name>
          <default></default>
          <type>\com_wolfnet_wordpress_settings_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="319" package="com\wolfnet\wordpress\search">
        <name>getSessionKey</name>
        <full_name>getSessionKey</full_name>
        <docblock line="313">
          <description>GETTER: This method is a getter for the sessionKey property.</description>
          <long-description></long-description>
          <tag line="313" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="332" package="com\wolfnet\wordpress\search">
        <name>setSessionKey</name>
        <full_name>setSessionKey</full_name>
        <docblock line="325">
          <description>SETTER: This method is a setter for the sessionKey property.</description>
          <long-description></long-description>
          <tag line="325" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="325" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="332">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/search/service.php</error>
      <error line="100" code="50010">No DocBlock was found for method getSearches()</error>
      <error line="127" code="50010">No DocBlock was found for method getSearchCriteria()</error>
      <error line="150" code="50010">No DocBlock was found for method saveSearch()</error>
      <error line="171" code="50010">No DocBlock was found for method deleteSearch()</error>
      <error line="177" code="50010">No DocBlock was found for method getSearchManagerHtml()</error>
      <error line="221" code="50010">No DocBlock was found for method getCfId()</error>
      <error line="227" code="50010">No DocBlock was found for method getCfToken()</error>
      <error line="233" code="50010">No DocBlock was found for method getJSessionId()</error>
      <error line="241" code="50010">No DocBlock was found for method getCookieData()</error>
      <error line="250" code="50010">No DocBlock was found for method setCookieData()</error>
      <error line="268" code="50010">No DocBlock was found for method getCookieValue()</error>
      <error line="280" code="50010">No DocBlock was found for method removeJqueryFromHTML()</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/settings/dao.php" hash="e8e6627b15af51cff3fac2890d98a0ce" package="Default">
    <class final="false" abstract="false" namespace="global" line="34" package="com\wolfnet\wordpress\settings">
      <extends>\com_greentiedev_wppf_abstract_dao</extends>
      <implements>\com_greentiedev_wppf_interface_iDao</implements>
      <name>com_wolfnet_wordpress_settings_dao</name>
      <full_name>\com_wolfnet_wordpress_settings_dao</full_name>
      <docblock line="3">
        <description>This class is the listingDAO (data access object) and is responsible for translating the incoming
and outgoing data to and from the listingEntity objects.</description>
        <long-description>&lt;p&gt;This object should be replaced in the
event that the method used for data i/o is changed.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="settings"/>
        <tag line="3" name="title" description="dao.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_dao"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iDao"/>
        <tag line="3" name="singleton" description="True"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="48" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
        <docblock line="42">
          <description>This private static property holds the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="42" name="type" description="com_wolfnet_wordpress_listing_dao"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="57" package="com\wolfnet\wordpress\settings">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="51">
          <description>This static method is used to retrieve the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="51" name="return" description="" type="\com_wolfnet_wordpress_listing_dao">
            <type by_reference="false">\com_wolfnet_wordpress_listing_dao</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="78" package="com\wolfnet\wordpress\settings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="71">
          <description>This constructor method is private becuase this class is a singleton and can only be retrieved
by statically calling the getInstance method.</description>
          <long-description></long-description>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="com\wolfnet\wordpress\settings">
        <name>findAll</name>
        <full_name>findAll</full_name>
        <docblock line="86">
          <description>This method returns all property listings avaiable to this WordPress plugin instance.</description>
          <long-description></long-description>
          <tag line="86" name="return" description="An array of listing objects (com_wolfnet_wordpress_listing_entity)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="com\wolfnet\wordpress\settings">
        <name>findById</name>
        <full_name>findById</full_name>
        <docblock line="111">
          <description>This method returns only a single listing object based on the primary key that is passed.</description>
          <long-description></long-description>
          <tag line="111" name="param" description="The primary key of a single listing." type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="111" name="return" description="Listing object with a matching primary key." type="\com_wolfnet_wordpress_listing_entity">
            <type by_reference="false">\com_wolfnet_wordpress_listing_entity</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$id</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="com\wolfnet\wordpress\settings">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="126">
          <description>GETTER: This getter method is used to get the data property, which is an inherited property.</description>
          <long-description></long-description>
          <tag line="126" name="return" description="An array of data." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="com\wolfnet\wordpress\settings">
        <name>setData</name>
        <full_name>setData</full_name>
        <docblock line="138">
          <description>SETTER: This setter method is used to set the data property, which is an inherited property.</description>
          <long-description></long-description>
          <tag line="138" name="param" description="An array of data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/settings/dao.php</error>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/settings/entity.php" hash="19160ff839abf0837db0bdfca8b41fa4" package="Default">
    <class final="false" abstract="false" namespace="global" line="32" package="com\wolfnet\wordpress\settings">
      <extends>\com_greentiedev_wppf_abstract_entity</extends>
      <implements>\com_greentiedev_wppf_interface_iEntity</implements>
      <name>com_wolfnet_wordpress_settings_entity</name>
      <full_name>\com_wolfnet_wordpress_settings_entity</full_name>
      <docblock line="3">
        <description>This class is the Listing Entity and is a container for listing data.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="settings"/>
        <tag line="3" name="title" description="entity.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_entity"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iEntity"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Default">
        <name>$SITE_BASE_URL</name>
        <default>''</default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="type" description="string"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="com\wolfnet\wordpress\settings">
        <name>setMemento</name>
        <full_name>setMemento</full_name>
        <docblock line="50">
          <description>This method is used to set instance data for the entity.</description>
          <long-description>&lt;p&gt;Though it is public by necessity,
this method should not be accessed by any object other than the listingDao.
( see Memento Design Pattern )&lt;/p&gt;</long-description>
          <tag line="50" name="param" description="The primary key of a single listing." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="com\wolfnet\wordpress\settings">
        <name>getMemento</name>
        <full_name>getMemento</full_name>
        <docblock line="65">
          <description>This method is used to get instance data from the entity.</description>
          <long-description>&lt;p&gt;Though it is public by necessity,
this method should not be accessed by any object other than the listingDao.
( see Memento Design Pattern )&lt;/p&gt;</long-description>
          <tag line="65" name="return" description="The primary key of a single listing." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="com\wolfnet\wordpress\settings">
        <name>getSITE_BASE_URL</name>
        <full_name>getSITE_BASE_URL</full_name>
        <docblock line="83">
          <description>GETTER: This method is a getter for the content property.</description>
          <long-description></long-description>
          <tag line="83" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/settings/entity.php</error>
      <critical line="40" code="50019">No short description for property $SITE_BASE_URL</critical>
    </parse_markers>
  </file>
  <file path="com/wolfnet/wordpress/settings/service.php" hash="28ca9759b234971abb54b723a9e48072" package="Default">
    <class final="false" abstract="false" namespace="global" line="32" package="com\wolfnet\wordpress\settings">
      <extends>\com_greentiedev_wppf_abstract_service</extends>
      <implements>\com_greentiedev_wppf_interface_iService</implements>
      <name>com_wolfnet_wordpress_settings_service</name>
      <full_name>\com_wolfnet_wordpress_settings_service</full_name>
      <docblock line="3">
        <description>This class is the Settings Service and is a Facade used to interact with all other
market information.</description>
        <long-description></long-description>
        <tag line="3" name="package" description="com.wolfnet.wordpress"/>
        <tag line="3" name="subpackage" description="settings"/>
        <tag line="3" name="title" description="service.php"/>
        <tag line="3" name="extends" description="com_greentiedev_wppf_abstract_service"/>
        <tag line="3" name="implements" description="com_greentiedev_wppf_interface_iService"/>
        <tag line="3" name="singleton" description="True"/>
        <tag line="3" name="contributors" description="AJ Michels (aj.michels@wolfnet.com)"/>
        <tag line="3" name="version" description="1.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="46" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
        <docblock line="40">
          <description>This private static property holds the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="40" name="type" description="com_wolfnet_wordpress_market_disclaimer"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="72" namespace="global" package="Default">
        <name>$dataService</name>
        <default></default>
        <docblock line="66">
          <description>This property holds a reference to the WPPF Data Service instance within the plugin instance.</description>
          <long-description></long-description>
          <tag line="66" name="type" description="com_greentiedev_wppf_data_service"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="82" namespace="global" package="Default">
        <name>$webServiceUrl</name>
        <default></default>
        <docblock line="75">
          <description>This property holds a reference to the Web Service URL object which represents the URI which
will be used to retrieve data from a remove service.</description>
          <long-description></long-description>
          <tag line="75" name="type" description="com_greentiedev_wppf_data_webServiceUrl"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="92" namespace="global" package="Default">
        <name>$optionManager</name>
        <default></default>
        <docblock line="85">
          <description>This property holds a reference to the WPPF Option Manager instance within the plugin
instance.</description>
          <long-description></long-description>
          <tag line="85" name="type" description="com_greentiedev_wppf_option_manager"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="55" package="com\wolfnet\wordpress\settings">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="49">
          <description>This static method is used to retrieve the singleton instance of this class.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="\com_wolfnet_wordpress_market_disclaimer">
            <type by_reference="false">\com_wolfnet_wordpress_market_disclaimer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="104" package="com\wolfnet\wordpress\settings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="97">
          <description>This constructor method is private becuase this class is a singleton and can only be retrieved
by statically calling the getInstance method.</description>
          <long-description></long-description>
          <tag line="97" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="com\wolfnet\wordpress\settings">
        <name>getSettings</name>
        <full_name>getSettings</full_name>
        <docblock line="111">
          <description>This method returns all featured property listings.</description>
          <long-description></long-description>
          <tag line="111" name="param" description="The type of disclaimer to return. (search_results)" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="return" description="An array of listing objects (com_wolfnet_wordpress_listing_entity)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="com\wolfnet\wordpress\settings">
        <name>getSiteBaseUrl</name>
        <full_name>getSiteBaseUrl</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="com\wolfnet\wordpress\settings">
        <name>isKeyValid</name>
        <full_name>isKeyValid</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="com\wolfnet\wordpress\settings">
        <name>getDataService</name>
        <full_name>getDataService</full_name>
        <docblock line="182">
          <description>GETTER: This method is a getter for the dataService property.</description>
          <long-description></long-description>
          <tag line="182" name="return" description="" type="\com_greentiedev_wppf_data_service">
            <type by_reference="false">\com_greentiedev_wppf_data_service</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="com\wolfnet\wordpress\settings">
        <name>setDataService</name>
        <full_name>setDataService</full_name>
        <docblock line="194">
          <description>SETTER: This method is a setter for the dataService property.</description>
          <long-description></long-description>
          <tag line="194" name="param" description="" type="\com_greentiedev_wppf_data_service" variable="$service">
            <type by_reference="false">\com_greentiedev_wppf_data_service</type>
          </tag>
          <tag line="194" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$service</name>
          <default></default>
          <type>\com_greentiedev_wppf_data_service</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="com\wolfnet\wordpress\settings">
        <name>getWebServiceUrl</name>
        <full_name>getWebServiceUrl</full_name>
        <docblock line="207">
          <description>GETTER: This method is a getter for the webServiceUrl property.</description>
          <long-description></long-description>
          <tag line="207" name="return" description="" type="\com_greentiedev_wppf_data_webServiceUrl">
            <type by_reference="false">\com_greentiedev_wppf_data_webServiceUrl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="226" package="com\wolfnet\wordpress\settings">
        <name>setWebServiceUrl</name>
        <full_name>setWebServiceUrl</full_name>
        <docblock line="219">
          <description>SETTER: This method is a setter for the webServiceUrl property.</description>
          <long-description></long-description>
          <tag line="219" name="param" description="" type="\com_greentiedev_wppf_data_webServiceUrl" variable="$url">
            <type by_reference="false">\com_greentiedev_wppf_data_webServiceUrl</type>
          </tag>
          <tag line="219" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$url</name>
          <default></default>
          <type>\com_greentiedev_wppf_data_webServiceUrl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="com\wolfnet\wordpress\settings">
        <name>getOptionManager</name>
        <full_name>getOptionManager</full_name>
        <docblock line="232">
          <description>GETTER: This method is a getter for the optionManager property.</description>
          <long-description></long-description>
          <tag line="232" name="return" description="" type="\com_greentiedev_wppf_option_manager">
            <type by_reference="false">\com_greentiedev_wppf_option_manager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="251" package="com\wolfnet\wordpress\settings">
        <name>setOptionManager</name>
        <full_name>setOptionManager</full_name>
        <docblock line="244">
          <description>SETTER: This method is a setter for the optionManager property.</description>
          <long-description></long-description>
          <tag line="244" name="param" description="" type="\com_greentiedev_wppf_option_manager" variable="$manager">
            <type by_reference="false">\com_greentiedev_wppf_option_manager</type>
          </tag>
          <tag line="244" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$manager</name>
          <default></default>
          <type>\com_greentiedev_wppf_option_manager</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file com/wolfnet/wordpress/settings/service.php</error>
      <notice line="111" code="50013">Parameter $type could not be found in getSettings()</notice>
      <error line="140" code="50010">No DocBlock was found for method getSiteBaseUrl()</error>
      <error line="163" code="50010">No DocBlock was found for method isKeyValid()</error>
    </parse_markers>
  </file>
  <file path="wolfnet.php" hash="92e134a9e9d5b3f5c664788e6017af9b" package="Default">
    <include line="15" type="Require Once" package="Default">
      <name>com/greentiedev/phpCommon/autoLoader.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="39" package="Default">
      <extends>\com_greentiedev_wppf_bootstrap</extends>
      <implements>\com_greentiedev_phpCommon_iSingleton</implements>
      <name>wolfnet</name>
      <full_name>\wolfnet</full_name>
      <docblock line="18">
        <description></description>
        <long-description></long-description>
        <tag line="18" name="title" description="wolfnet.php"/>
        <tag line="18" name="contributors" description="AJ Michels (http://aj.michels@wolfnet.com)"/>
        <tag line="18" name="version" description="1.0"/>
        <tag line="18" name="copyright" description="Copyright (c) 2012, WolfNet Technologies, LLC&#10;               This program is free software; you can redistribute it and/or&#10;               modify it under the terms of the GNU General Public License&#10;               as published by the Free Software Foundation; either version 2&#10;               of the License, or (at your option) any later version.&#10;               This program is distributed in the hope that it will be useful,&#10;               but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;               GNU General Public License for more details.&#10;               You should have received a copy of the GNU General Public License&#10;               along with this program; if not, write to the Free Software&#10;               Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."/>
      </docblock>
      <property final="false" static="true" visibility="private" line="47" namespace="global" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="60" namespace="global" package="Default">
        <name>$majorVersion</name>
        <default>'{majorVersion}'</default>
      </property>
      <property final="false" static="false" visibility="public" line="61" namespace="global" package="Default">
        <name>$minorVersion</name>
        <default>'{minorVersion}'</default>
      </property>
      <property final="false" static="false" visibility="public" line="62" namespace="global" package="Default">
        <name>$version</name>
        <default>'{X.X.X}'</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="49" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="Default">
        <name>activate</name>
        <full_name>activate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="Default">
        <name>deactivate</name>
        <full_name>deactivate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="128" package="Default">
        <name>options</name>
        <full_name>options</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="136" package="Default">
        <name>actions</name>
        <full_name>actions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="151" package="Default">
        <name>shortcodes</name>
        <full_name>shortcodes</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file wolfnet.php</error>
      <critical line="18" code="50005">No short description for class \wolfnet</critical>
      <error line="47" code="50018">No DocBlock was found for property $instance</error>
      <error line="60" code="50018">No DocBlock was found for property $majorVersion</error>
      <error line="61" code="50018">No DocBlock was found for property $minorVersion</error>
      <error line="62" code="50018">No DocBlock was found for property $version</error>
      <error line="49" code="50010">No DocBlock was found for method getInstance()</error>
      <error line="67" code="50010">No DocBlock was found for method __construct()</error>
      <error line="113" code="50010">No DocBlock was found for method activate()</error>
      <error line="119" code="50010">No DocBlock was found for method deactivate()</error>
      <error line="128" code="50010">No DocBlock was found for method options()</error>
      <error line="136" code="50010">No DocBlock was found for method actions()</error>
      <error line="151" code="50010">No DocBlock was found for method shortcodes()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="com" full_name="com">
    <package name="greentiedev" full_name="com\greentiedev">
      <package name="phpCommon" full_name="com\greentiedev\phpCommon"/>
      <package name="phpSpring" full_name="com\greentiedev\phpSpring">
        <package name="bean" full_name="com\greentiedev\phpSpring\bean">
          <package name="factory" full_name="com\greentiedev\phpSpring\bean\factory"/>
        </package>
      </package>
      <package name="wppf" full_name="com\greentiedev\wppf">
        <package name="abstract" full_name="com\greentiedev\wppf\abstract"/>
        <package name="action" full_name="com\greentiedev\wppf\action"/>
        <package name="data" full_name="com\greentiedev\wppf\data"/>
        <package name="filter" full_name="com\greentiedev\wppf\filter"/>
        <package name="interface" full_name="com\greentiedev\wppf\interface"/>
        <package name="json" full_name="com\greentiedev\wppf\json"/>
        <package name="option" full_name="com\greentiedev\wppf\option"/>
        <package name="shortcode" full_name="com\greentiedev\wppf\shortcode"/>
        <package name="template" full_name="com\greentiedev\wppf\template"/>
        <package name="xml" full_name="com\greentiedev\wppf\xml"/>
      </package>
    </package>
    <package name="wolfnet" full_name="com\wolfnet">
      <package name="wordpress" full_name="com\wolfnet\wordpress">
        <package name="abstract" full_name="com\wolfnet\wordpress\abstract"/>
        <package name="action" full_name="com\wolfnet\wordpress\action"/>
        <package name="admin" full_name="com\wolfnet\wordpress\admin">
          <package name="template" full_name="com\wolfnet\wordpress\admin\template"/>
        </package>
        <package name="listing" full_name="com\wolfnet\wordpress\listing">
          <package name="branding" full_name="com\wolfnet\wordpress\listing\branding"/>
        </package>
        <package name="market" full_name="com\wolfnet\wordpress\market">
          <package name="disclaimer" full_name="com\wolfnet\wordpress\market\disclaimer"/>
        </package>
        <package name="search" full_name="com\wolfnet\wordpress\search"/>
        <package name="settings" full_name="com\wolfnet\wordpress\settings"/>
      </package>
    </package>
  </package>
  <namespace name="global" full_name="global"/>
  <marker count="14">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
